<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>小红书ui自动化测试</title>
      <link href="/2022/11/15/xiao-hong-shu-ui-zi-dong-hua-ce-shi/"/>
      <url>/2022/11/15/xiao-hong-shu-ui-zi-dong-hua-ce-shi/</url>
      
        <content type="html"><![CDATA[<p>小红书ui自动化测试，运行RUN_main.py文件执行所有测试用例<br>用到了<a href="http://e.betheme.net/article/show-80644.html?action=onClick">uiautomator2</a><br><a href="https://blog.csdn.net/baidu_39372836/article/details/122367121">uiautomator2笔记</a></p><h2 id="ui自动化框架"><a href="#ui自动化框架" class="headerlink" title="ui自动化框架"></a>ui自动化框架</h2><p>先看一下目录结构<br><img src="http://ytlgithub.github.io/medias/ytlimg/ui%E8%87%AA%E5%8A%A8%E5%8C%96%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.jpg" alt="目录结构"><br><img src="http://ytlgithub.github.io/medias/ytlimg/python%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99.jpg" alt="python命名规则"></p><h2 id="config"><a href="#config" class="headerlink" title="config"></a>config</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">PACKAGE_NAME</span> <span class="token punctuation">:</span> com.xingin.xhs  <span class="token comment"># 包名</span><span class="token key atrule">MOBILE_IP</span> <span class="token punctuation">:</span> 192.168.16.185  <span class="token comment"># 输入手机ip</span><span class="token key atrule">CONNECT</span> <span class="token punctuation">:</span> usb  <span class="token comment"># 连接方式两种 USB和WiFi连接</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="目录结构内容如下"><a href="#目录结构内容如下" class="headerlink" title="目录结构内容如下"></a>目录结构内容如下</h2><h2 id="data"><a href="#data" class="headerlink" title="data"></a>data</h2><h3 id="json"><a href="#json" class="headerlink" title="json"></a>json</h3><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">[</span>  <span class="token punctuation">{</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"用例1"</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span> <span class="token string">"用例参数"</span><span class="token punctuation">,</span>    <span class="token property">"expected"</span><span class="token operator">:</span> <span class="token string">"预期结果"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"用例2"</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span> <span class="token string">"用例参数"</span><span class="token punctuation">,</span>    <span class="token property">"expected"</span><span class="token operator">:</span> <span class="token string">"预期结果"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"用例3"</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span> <span class="token string">"用例参数"</span><span class="token punctuation">,</span>    <span class="token property">"expected"</span><span class="token operator">:</span> <span class="token string">"预期结果"</span>  <span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="yaml"><a href="#yaml" class="headerlink" title="yaml"></a>yaml</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">-</span> <span class="token key atrule">title</span><span class="token punctuation">:</span> 用例1  <span class="token key atrule">data</span><span class="token punctuation">:</span> 用例参数  <span class="token key atrule">expected</span><span class="token punctuation">:</span> 预期结果<span class="token punctuation">-</span> <span class="token key atrule">title</span><span class="token punctuation">:</span> 用例2  <span class="token key atrule">data</span><span class="token punctuation">:</span> 用例参数  <span class="token key atrule">expected</span><span class="token punctuation">:</span> 预期结果<span class="token punctuation">-</span> <span class="token key atrule">title</span><span class="token punctuation">:</span> 用例4  <span class="token key atrule">data</span><span class="token punctuation">:</span> 用例参数  <span class="token key atrule">expected</span><span class="token punctuation">:</span> 预期结果<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="drivers"><a href="#drivers" class="headerlink" title="drivers"></a>drivers</h2><pre class="line-numbers language-drivers" data-language="drivers"><code class="language-drivers"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="log"><a href="#log" class="headerlink" title="log"></a>log</h2><pre class="line-numbers language-log" data-language="log"><code class="language-log"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="report"><a href="#report" class="headerlink" title="report"></a>report</h2><pre class="line-numbers language-report" data-language="report"><code class="language-report"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="script"><a href="#script" class="headerlink" title="script"></a>script</h2><h3 id="common"><a href="#common" class="headerlink" title="common"></a>common</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- ecoding: utf-8 -*-</span><span class="token comment"># @ModuleName: little_red_book</span><span class="token comment"># @Author: 杨天龙</span><span class="token comment"># @Time: 2022/11/8 21:47</span><span class="token keyword">import</span> unittest<span class="token keyword">import</span> uiautomator2 <span class="token keyword">as</span> u2<span class="token keyword">import</span> time<span class="token keyword">import</span> os<span class="token keyword">from</span> utils<span class="token punctuation">.</span>yamlconfig <span class="token keyword">import</span> ReadYaml<span class="token keyword">class</span> <span class="token class-name">MyTest</span><span class="token punctuation">(</span>unittest<span class="token punctuation">.</span>TestCase<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token decorator annotation punctuation">@classmethod</span>    <span class="token keyword">def</span> <span class="token function">setUpClass</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""整个测试用例的前置条件"""</span>        <span class="token comment"># global PACKAGE_NAME</span>        config_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'../..'</span><span class="token punctuation">,</span> <span class="token string">'config/config_file'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 配置文件路径</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>config_path<span class="token punctuation">,</span> <span class="token string">'配置文件路径'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>PACKAGE_NAME <span class="token operator">=</span> ReadYaml<span class="token punctuation">(</span>config_path<span class="token punctuation">,</span> <span class="token string">'PACKAGE_NAME'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_data<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 包名</span>        MOBILE_IP <span class="token operator">=</span> ReadYaml<span class="token punctuation">(</span>config_path<span class="token punctuation">,</span> <span class="token string">'MOBILE_IP'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_data<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 手机ip</span>        a <span class="token operator">=</span> ReadYaml<span class="token punctuation">(</span>config_path<span class="token punctuation">,</span> <span class="token string">"CONNECT"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_data<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 获取配置文件连接方式</span>        <span class="token keyword">if</span> a <span class="token operator">==</span> <span class="token string">"USB"</span> <span class="token keyword">or</span> a <span class="token operator">==</span> <span class="token string">"usb"</span><span class="token punctuation">:</span>            devices_serial <span class="token operator">=</span> os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'adb devices'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>  <span class="token comment"># 获取设备序列号</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"USB连接"</span><span class="token punctuation">,</span> devices_serial<span class="token punctuation">)</span>            self<span class="token punctuation">.</span>d <span class="token operator">=</span> u2<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>devices_serial<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"USB连接成功"</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>d <span class="token operator">=</span> u2<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"配置WIFI连接"</span><span class="token punctuation">)</span>                os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"adb tcpip 5555"</span><span class="token punctuation">)</span>  <span class="token comment"># 设置手机端口</span>                MOBILE_IP <span class="token operator">=</span> MOBILE_IP  <span class="token comment"># 手机ip</span>                os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"adb connect </span><span class="token interpolation"><span class="token punctuation">{</span>MOBILE_IP<span class="token punctuation">}</span></span><span class="token string">:5555"</span></span><span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"配置WIFI连接成功"</span><span class="token punctuation">)</span>            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"无线连接"</span><span class="token punctuation">)</span>                self<span class="token punctuation">.</span>d <span class="token operator">=</span> u2<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">{</span>MOBILE_IP<span class="token punctuation">}</span></span><span class="token string">:5555"</span></span><span class="token punctuation">)</span>  <span class="token comment"># 用手机IP地址无线连接手机</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"无线连接成功"</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>d<span class="token punctuation">.</span>click_post_delay <span class="token operator">=</span> <span class="token number">1.5</span>  <span class="token comment"># 定义全局等待时间为1.5s</span>        self<span class="token punctuation">.</span>d<span class="token punctuation">.</span>implicitly_wait<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>        <span class="token comment"># print(self.d.device_info)</span>        <span class="token comment"># 录屏操作</span>        screen_record_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'../..'</span><span class="token punctuation">,</span> <span class="token string">'report/screen_record'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>screen_record_path<span class="token punctuation">)</span><span class="token punctuation">:</span>            os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>screen_record_path<span class="token punctuation">)</span>        now <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 现在的时间</span>        now_time <span class="token operator">=</span> time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y%m%d_%H%M%S"</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 当前时间</span>        self<span class="token punctuation">.</span>d<span class="token punctuation">.</span>screenrecord<span class="token punctuation">(</span>screen_record_path<span class="token operator">+</span><span class="token string-interpolation"><span class="token string">f"/视频录制</span><span class="token interpolation"><span class="token punctuation">{</span>now_time<span class="token punctuation">}</span></span><span class="token string">.mp4"</span></span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>screen_record_path<span class="token punctuation">,</span> <span class="token string">'录屏保存目录'</span><span class="token punctuation">)</span>        <span class="token comment"># 抓取手机日志并上传到电脑log目录</span>        os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"adb logcat -c"</span><span class="token punctuation">)</span>  <span class="token comment"># 抓取日志前，清除旧的日志信息</span>        logcat_name <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'/logcat</span><span class="token interpolation"><span class="token punctuation">{</span>now_time<span class="token punctuation">}</span></span><span class="token string">.txt'</span></span>        logcat_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'../..'</span><span class="token punctuation">,</span> <span class="token string">'log'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>logcat_path<span class="token punctuation">)</span><span class="token punctuation">:</span>            os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>logcat_path<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"生成log目录成功："</span><span class="token punctuation">,</span> logcat_path<span class="token punctuation">)</span>        logcat <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"adb logcat -v time &gt; </span><span class="token interpolation"><span class="token punctuation">{</span>logcat_path<span class="token punctuation">}</span></span><span class="token string">"</span></span>        <span class="token keyword">print</span><span class="token punctuation">(</span>logcat<span class="token punctuation">,</span> <span class="token string">"logcat"</span><span class="token punctuation">)</span>        os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span>logcat <span class="token operator">+</span> logcat_name<span class="token punctuation">)</span>  <span class="token comment"># 抓取日志</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>d<span class="token punctuation">.</span>current_app<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"当前运行的应用"</span><span class="token punctuation">)</span>    <span class="token decorator annotation punctuation">@classmethod</span>    <span class="token keyword">def</span> <span class="token function">tearDownClass</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""print("所有用例的后置条件")"""</span>        <span class="token comment"># self.d.screenrecord.stop()  # 停止录屏</span>        process <span class="token operator">=</span> os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">"adb shell ps -A | findstr logcat"</span><span class="token punctuation">)</span>  <span class="token comment"># 获取logcat进程</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            process_id <span class="token operator">=</span> process<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token comment"># 获取logcat进程号</span>            os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"adb shell kill </span><span class="token interpolation"><span class="token punctuation">{</span>process_id<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>  <span class="token comment"># 杀掉logcat进程</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">setUp</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""print("每条用例的前置条件")"""</span>        self<span class="token punctuation">.</span>d<span class="token punctuation">.</span>app_start<span class="token punctuation">(</span>self<span class="token punctuation">.</span>PACKAGE_NAME<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">tearDown</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""print("每条用例的后置条件")"""</span>        self<span class="token punctuation">.</span>d<span class="token punctuation">.</span>app_stop<span class="token punctuation">(</span>self<span class="token punctuation">.</span>PACKAGE_NAME<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">errorSaveScreenAsPhoto</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> error_module_name<span class="token punctuation">)</span><span class="token punctuation">:</span>        now <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 现在的时间</span>        now_time <span class="token operator">=</span> time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y%m%d_%H%M%S"</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 当前时间</span>        error_screenshot_name <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">{</span>error_module_name<span class="token punctuation">}</span></span><span class="token string">错误截图</span><span class="token interpolation"><span class="token punctuation">{</span>now_time<span class="token punctuation">}</span></span><span class="token string">.png'</span></span>        error_screenshot_path <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">{</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'../..'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">/report/images/"</span></span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>error_screenshot_path<span class="token punctuation">)</span><span class="token punctuation">:</span>            os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>error_screenshot_path<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"生成错误截图目录成功："</span><span class="token punctuation">,</span> error_screenshot_path<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>d<span class="token punctuation">.</span>screenshot<span class="token punctuation">(</span>error_screenshot_path <span class="token operator">+</span> error_screenshot_name<span class="token punctuation">)</span>  <span class="token comment"># 错误截图保存路径</span>        msg <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'&lt;img src="./images/</span><span class="token interpolation"><span class="token punctuation">{</span>error_screenshot_name<span class="token punctuation">}</span></span><span class="token string">" width="400" height="800" title="</span><span class="token interpolation"><span class="token punctuation">{</span>error_screenshot_name<span class="token punctuation">}</span></span><span class="token string">" alt="</span><span class="token interpolation"><span class="token punctuation">{</span>error_screenshot_name<span class="token punctuation">}</span></span><span class="token string">"/&gt;'</span></span>        <span class="token keyword">print</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">assertEqualErrorSaveScreenAsPhoto</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> expected_results<span class="token punctuation">,</span> actual_result<span class="token punctuation">,</span> error_module_name<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""断言错误保存屏幕照片"""</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>assertEqual<span class="token punctuation">(</span>expected_results<span class="token punctuation">,</span> actual_result<span class="token punctuation">,</span> msg<span class="token operator">=</span><span class="token string">"实际结果和预期结果不一致"</span><span class="token punctuation">)</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>errorSaveScreenAsPhoto<span class="token punctuation">(</span>error_module_name<span class="token punctuation">)</span>            <span class="token keyword">raise</span> e        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token string">'print("断言成功")'</span>            <span class="token keyword">pass</span>    <span class="token keyword">def</span> <span class="token function">assertTrueEqualErrorSaveScreenAsPhoto</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> actual_result<span class="token punctuation">,</span> error_module_name<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""断言错误保存屏幕照片"""</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>assertTrue<span class="token punctuation">(</span>actual_result<span class="token punctuation">,</span> msg<span class="token operator">=</span><span class="token string">"没有找到预期结果元素"</span><span class="token punctuation">)</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>errorSaveScreenAsPhoto<span class="token punctuation">(</span>error_module_name<span class="token punctuation">)</span>            <span class="token keyword">raise</span> e        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token string">'print("断言成功")'</span>            <span class="token keyword">pass</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="page"><a href="#page" class="headerlink" title="page"></a>page</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="suit"><a href="#suit" class="headerlink" title="suit"></a>suit</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- ecoding: utf-8 -*-</span><span class="token comment"># @ModuleName: RUN</span><span class="token comment"># @Author: 杨天龙</span><span class="token comment"># @Time: 2022/11/8 23:08</span><span class="token comment"># 下载unittestreport：pip install unittestreport 生成测试报告和发邮件用，还可以做数据驱动</span><span class="token keyword">import</span> time<span class="token keyword">import</span> unittest<span class="token keyword">from</span> unittestreport <span class="token keyword">import</span> TestRunner<span class="token keyword">import</span> os<span class="token keyword">import</span> sys<span class="token comment"># 把当前项目路径临时添加到环境变量里，执行当前文件的窗口中有效，窗口关闭后即失效。</span>sys<span class="token punctuation">.</span>path<span class="token punctuation">.</span>append<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'../..'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">from</span> utils<span class="token punctuation">.</span>HTMLTestRunner <span class="token keyword">import</span> HTMLTestRunner<span class="token keyword">class</span> <span class="token class-name">RunAmin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">run_main_unittestreport</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> pattern<span class="token operator">=</span><span class="token string">"text*.py"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># case_path = os.getcwd()  # 获取当前路径</span>        case_path <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">{</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'..'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">/test_case/"</span></span>  <span class="token comment"># 获取用例路径</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>case_path<span class="token punctuation">,</span> <span class="token string">"用例路径"</span><span class="token punctuation">)</span>  <span class="token comment"># 打印用例路径</span>        <span class="token comment">#  加载套件</span>        suite <span class="token operator">=</span> unittest<span class="token punctuation">.</span>defaultTestLoader<span class="token punctuation">.</span>discover<span class="token punctuation">(</span>case_path<span class="token punctuation">,</span> pattern<span class="token operator">=</span>pattern<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"测试套件总用例数："</span><span class="token punctuation">,</span> suite<span class="token punctuation">.</span>countTestCases<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        now <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 现在的时间</span>        now_time <span class="token operator">=</span> time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y%m%d_%H%M%S"</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 当前时间</span>        report_name <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"测试报告</span><span class="token interpolation"><span class="token punctuation">{</span>now_time<span class="token punctuation">}</span></span><span class="token string">.html"</span></span>  <span class="token comment"># 报告名后面加当前时间</span>        report_path <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">{</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"../.."</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">/report/'</span></span>  <span class="token comment"># 生成报告路径</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>report_path<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"生成报告目录"</span><span class="token punctuation">)</span>            os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>report_path<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"生成报告目录成功:"</span><span class="token punctuation">,</span> report_path<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>report_path<span class="token punctuation">,</span> <span class="token string">"报告路径"</span><span class="token punctuation">)</span>  <span class="token comment"># 打印报告路径</span>        runner <span class="token operator">=</span> TestRunner<span class="token punctuation">(</span>suite<span class="token punctuation">,</span>                            filename<span class="token operator">=</span>report_name<span class="token punctuation">,</span>                            report_dir<span class="token operator">=</span>report_path<span class="token punctuation">,</span>                            title<span class="token operator">=</span><span class="token string">"小红书ui自动化测试报告"</span><span class="token punctuation">,</span>                            tester<span class="token operator">=</span><span class="token string">"杨天龙"</span><span class="token punctuation">,</span>                            desc<span class="token operator">=</span><span class="token string">"小红书首次登录，登入之后一级功能点检"</span><span class="token punctuation">,</span>                            templates<span class="token operator">=</span><span class="token number">2</span>                            <span class="token punctuation">)</span>        runner<span class="token punctuation">.</span>rerun_run<span class="token punctuation">(</span>count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> interval<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>  <span class="token comment"># count：用来指定用例失败重运行的次数 interval：指定每次重运行的时间间隔</span>        <span class="token comment"># 邮件发送测试报告</span>        <span class="token comment"># runner.send_email(host="smtp.qq.com",</span>        <span class="token comment">#                   port=465,  # 587</span>        <span class="token comment">#                   user="176@qq.com",</span>        <span class="token comment">#                   password="xxtdlejeiatfcdhd",</span>        <span class="token comment">#                   to_addrs=["176@qq.com", "1632008076@qq.com"]</span>        <span class="token comment">#                   )</span>        <span class="token triple-quoted-string string">"""        参数介绍         host： smtp服务器地址        port：端口        user：邮箱账号        password：smtp服务授权码        to_addrs：收件人邮箱地址（一个收件人传字符串，多个收件人传列表）        """</span>    <span class="token keyword">def</span> <span class="token function">run_main_htmltestrunner</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> pattern<span class="token operator">=</span><span class="token string">"text*.py"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        now <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 现在的时间</span>        now_time <span class="token operator">=</span> time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y%m%d_%H%M%S"</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 当前时间</span>        report_name <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"测试报告</span><span class="token interpolation"><span class="token punctuation">{</span>now_time<span class="token punctuation">}</span></span><span class="token string">.html"</span></span>  <span class="token comment"># 报告名后面加当前时间</span>        report_path <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">{</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"../.."</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">/report/'</span></span>  <span class="token comment"># 生成报告路径</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>report_path<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"生成报告目录"</span><span class="token punctuation">)</span>            os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>report_path<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"生成报告目录成功:"</span><span class="token punctuation">,</span> report_path<span class="token punctuation">)</span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>report_path<span class="token operator">+</span>report_name<span class="token punctuation">,</span> <span class="token string">"wb"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fl<span class="token punctuation">:</span>            case_path <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">{</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'..'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">/test_case/"</span></span>  <span class="token comment"># 获取用例路径</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>case_path<span class="token punctuation">,</span> <span class="token string">"用例路径"</span><span class="token punctuation">)</span>  <span class="token comment"># 打印用例路径</span>            discover <span class="token operator">=</span> unittest<span class="token punctuation">.</span>defaultTestLoader<span class="token punctuation">.</span>discover<span class="token punctuation">(</span>start_dir<span class="token operator">=</span>case_path<span class="token punctuation">,</span> pattern<span class="token operator">=</span>pattern<span class="token punctuation">)</span>            runner <span class="token operator">=</span> HTMLTestRunner<span class="token punctuation">(</span>title<span class="token operator">=</span><span class="token string">'测试标题'</span><span class="token punctuation">,</span> description<span class="token operator">=</span><span class="token string">'描述本次测试的大概内容'</span><span class="token punctuation">,</span> stream<span class="token operator">=</span>fl<span class="token punctuation">)</span>            runner<span class="token punctuation">.</span>run<span class="token punctuation">(</span>discover<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    RunAmin<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>run_main_unittestreport<span class="token punctuation">(</span><span class="token string">"test_*.py"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="test-case"><a href="#test-case" class="headerlink" title="test_case"></a>test_case</h3><h4 id="test-00-first-open-app"><a href="#test-00-first-open-app" class="headerlink" title="test_00_first_open_app"></a>test_00_first_open_app</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- ecoding: utf-8 -*-</span><span class="token comment"># @ModuleName: test_00_first_open_app</span><span class="token comment"># @Author: 杨天龙</span><span class="token comment"># @Time: 2022/11/9 0:23</span><span class="token keyword">import</span> time<span class="token keyword">from</span> script<span class="token punctuation">.</span>common<span class="token punctuation">.</span>little_red_book <span class="token keyword">import</span> MyTest<span class="token keyword">class</span> <span class="token class-name">FirstOpenApp</span><span class="token punctuation">(</span>MyTest<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""首次打开app类"""</span>    <span class="token keyword">def</span> <span class="token function">test_01</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> error_module_name<span class="token operator">=</span><span class="token string">"首次打开放弃使用"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""首次打开放弃使用"""</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>d<span class="token punctuation">.</span>app_clear<span class="token punctuation">(</span>self<span class="token punctuation">.</span>PACKAGE_NAME<span class="token punctuation">)</span>  <span class="token comment"># 清理数据</span>            self<span class="token punctuation">.</span>d<span class="token punctuation">.</span>app_start<span class="token punctuation">(</span>self<span class="token punctuation">.</span>PACKAGE_NAME<span class="token punctuation">)</span>  <span class="token comment"># 启动app</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"不同意"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment"># 点击不同意</span>            self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"放弃使用"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment"># 点击放弃使用</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>errorSaveScreenAsPhoto<span class="token punctuation">(</span>error_module_name<span class="token punctuation">)</span>            <span class="token keyword">raise</span> e        self<span class="token punctuation">.</span>assertTrue<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">test_02</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> error_module_name<span class="token operator">=</span><span class="token string">"首次打开同意"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""首次打开同意"""</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"同意"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 点击同意</span>            <span class="token keyword">if</span> self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"其他账号"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exists<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"其他账号"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>errorSaveScreenAsPhoto<span class="token punctuation">(</span>error_module_name<span class="token punctuation">)</span>            <span class="token keyword">raise</span> e        actual_result <span class="token operator">=</span> self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"其他登录方式"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_text<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 获取预期结果</span>        self<span class="token punctuation">.</span>assertEqualErrorSaveScreenAsPhoto<span class="token punctuation">(</span><span class="token string">"其他登录方式"</span><span class="token punctuation">,</span> actual_result<span class="token punctuation">,</span> error_module_name<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">test_03</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> error_module_name<span class="token operator">=</span><span class="token string">"其他登录输入错误的验证码"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""其他登录输入错误的验证码"""</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"其他账号"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exists<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"其他账号"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"其他登录方式"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 点击登录方式</span>            self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>resourceId<span class="token operator">=</span><span class="token string">"com.xingin.xhs:id/abr"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 点击手机图标</span>            self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>resourceId<span class="token operator">=</span><span class="token string">"com.xingin.xhs:id/dfv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">"17664014893"</span><span class="token punctuation">)</span>  <span class="token comment"># 输入账号</span>            <span class="token comment"># self.d(resourceId="com.xingin.xhs:id/adx").click(timeout=5)  # 点击获取验证码</span>            self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>resourceId<span class="token operator">=</span><span class="token string">"com.xingin.xhs:id/emt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment"># 点击"我已阅读并同意"前面那个小圆点</span>            self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>resourceId<span class="token operator">=</span><span class="token string">"com.xingin.xhs:id/ae1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">"123456"</span><span class="token punctuation">)</span>  <span class="token comment"># 输入错误验证码</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"登录"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 点击登录</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>errorSaveScreenAsPhoto<span class="token punctuation">(</span>error_module_name<span class="token punctuation">)</span>            <span class="token keyword">raise</span> e        actual_result <span class="token operator">=</span> self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"登录"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_text<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 获取预期结果</span>        self<span class="token punctuation">.</span>assertEqualErrorSaveScreenAsPhoto<span class="token punctuation">(</span><span class="token string">"登录"</span><span class="token punctuation">,</span> actual_result<span class="token punctuation">,</span> error_module_name<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">test_04</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> error_module_name<span class="token operator">=</span><span class="token string">"微信登录"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""微信登录"""</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"其他账号"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exists<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"其他账号"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>resourceId<span class="token operator">=</span><span class="token string">"com.xingin.xhs:id/emt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment"># 点击"我已阅读并同意"前面那个小圆点</span>            self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"微信登录"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment"># 点击微信登录</span>            <span class="token keyword">if</span> self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"允许"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exists<span class="token punctuation">:</span>                self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"允许"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment"># 点击允许</span>                self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"跳过"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment"># 点击跳过</span>            self<span class="token punctuation">.</span>d<span class="token punctuation">.</span>swipe_ext<span class="token punctuation">(</span><span class="token string">"up"</span><span class="token punctuation">)</span>  <span class="token comment"># 向上滑动</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>            actual_result <span class="token operator">=</span> self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"推荐"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_text<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>  <span class="token comment"># 获取实际结果</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>errorSaveScreenAsPhoto<span class="token punctuation">(</span>error_module_name<span class="token punctuation">)</span>            <span class="token keyword">raise</span> e        self<span class="token punctuation">.</span>assertEqualErrorSaveScreenAsPhoto<span class="token punctuation">(</span><span class="token string">"推荐"</span><span class="token punctuation">,</span> actual_result<span class="token punctuation">,</span> error_module_name<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="test-01-home-page"><a href="#test-01-home-page" class="headerlink" title="test_01_home_page"></a>test_01_home_page</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- ecoding: utf-8 -*-</span><span class="token comment"># @ModuleName: test_01_home_page</span><span class="token comment"># @Author: 杨天龙</span><span class="token comment"># @Time: 2022/11/8 22:21</span><span class="token keyword">from</span> script<span class="token punctuation">.</span>common<span class="token punctuation">.</span>little_red_book <span class="token keyword">import</span> MyTest<span class="token keyword">import</span> time<span class="token keyword">class</span> <span class="token class-name">HomePage</span><span class="token punctuation">(</span>MyTest<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">test_01</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> error_module_name<span class="token operator">=</span><span class="token string">"检查首页tab"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""检查首页tab"""</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"允许"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exists<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"允许"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment"># 点击允许</span>            self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"首页"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 点击首页</span>            actual_result <span class="token operator">=</span> self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"推荐"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_text<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 获取预期结果</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>errorSaveScreenAsPhoto<span class="token punctuation">(</span>error_module_name<span class="token punctuation">)</span>            <span class="token keyword">raise</span> e        self<span class="token punctuation">.</span>assertEqualErrorSaveScreenAsPhoto<span class="token punctuation">(</span><span class="token string">"推荐"</span><span class="token punctuation">,</span> actual_result<span class="token punctuation">,</span> error_module_name<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="test-02-look-look"><a href="#test-02-look-look" class="headerlink" title="test_02_look_look"></a>test_02_look_look</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- ecoding: utf-8 -*-</span><span class="token comment"># @ModuleName: test_02_look_look</span><span class="token comment"># @Author: 杨天龙</span><span class="token comment"># @Time: 2022/11/8 22:48</span><span class="token keyword">from</span> script<span class="token punctuation">.</span>common<span class="token punctuation">.</span>little_red_book <span class="token keyword">import</span> MyTest<span class="token keyword">class</span> <span class="token class-name">LookLook</span><span class="token punctuation">(</span>MyTest<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">test_01</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> error_module_name<span class="token operator">=</span><span class="token string">"检查视频/看看/购物tab"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""检查视频/看看/购物tab"""</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            actual_result <span class="token operator">=</span> <span class="token string">"实际结果True或Fail"</span>            <span class="token keyword">if</span> self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"允许"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exists<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"允许"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment"># 点击允许</span>            <span class="token keyword">if</span> self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"视频"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exists<span class="token punctuation">:</span>                self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"视频"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 点击视频</span>                actual_result <span class="token operator">=</span> self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"视频"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exists  <span class="token comment"># 获取预期结果</span>            <span class="token keyword">if</span> self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"看看"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exists<span class="token punctuation">:</span>                self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"看看"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 点击看看</span>                actual_result <span class="token operator">=</span> self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"看看"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exists  <span class="token comment"># 获取预期结果</span>            <span class="token keyword">if</span> self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"购物"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exists<span class="token punctuation">:</span>                self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"购物"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 点击购物</span>                actual_result <span class="token operator">=</span> self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"购物"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exists  <span class="token comment"># 获取预期结果</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>errorSaveScreenAsPhoto<span class="token punctuation">(</span>error_module_name<span class="token punctuation">)</span>            <span class="token keyword">raise</span> e        self<span class="token punctuation">.</span>assertTrueEqualErrorSaveScreenAsPhoto<span class="token punctuation">(</span>actual_result<span class="token punctuation">,</span> error_module_name<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="test-03-test-news"><a href="#test-03-test-news" class="headerlink" title="test_03_test_news"></a>test_03_test_news</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- ecoding: utf-8 -*-</span><span class="token comment"># @ModuleName: test_03_test_news</span><span class="token comment"># @Author: 杨天龙</span><span class="token comment"># @Time: 2022/11/8 23:33</span><span class="token keyword">from</span> script<span class="token punctuation">.</span>common<span class="token punctuation">.</span>little_red_book <span class="token keyword">import</span> MyTest<span class="token keyword">class</span> <span class="token class-name">News</span><span class="token punctuation">(</span>MyTest<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""检查消息"""</span>    <span class="token keyword">def</span> <span class="token function">test_01</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> error_module_name<span class="token operator">=</span><span class="token string">"检查消息"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""检查消息"""</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"允许"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exists<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"允许"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment"># 点击允许</span>            self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"消息"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 点击消息</span>            actual_result <span class="token operator">=</span> self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"创建聊天"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_text<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 获取预期结果</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>errorSaveScreenAsPhoto<span class="token punctuation">(</span>error_module_name<span class="token punctuation">)</span>            <span class="token keyword">raise</span> e        self<span class="token punctuation">.</span>assertEqualErrorSaveScreenAsPhoto<span class="token punctuation">(</span><span class="token string">"创建聊天"</span><span class="token punctuation">,</span> actual_result<span class="token punctuation">,</span> error_module_name<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="test-04-my"><a href="#test-04-my" class="headerlink" title="test_04_my"></a>test_04_my</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- ecoding: utf-8 -*-</span><span class="token comment"># @ModuleName: test_04_my</span><span class="token comment"># @Author: 杨天龙</span><span class="token comment"># @Time: 2022/11/8 23:41</span><span class="token keyword">from</span> script<span class="token punctuation">.</span>common<span class="token punctuation">.</span>little_red_book <span class="token keyword">import</span> MyTest<span class="token keyword">class</span> <span class="token class-name">My</span><span class="token punctuation">(</span>MyTest<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""检查我tab"""</span>    <span class="token keyword">def</span> <span class="token function">test_01</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> error_module_name<span class="token operator">=</span><span class="token string">"检查我tab"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""检查我tab"""</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"允许"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exists<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"允许"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment"># 点击允许</span>            self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"我"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 点击我tab</span>            actual_result <span class="token operator">=</span> self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"关注"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_text<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 获取预期结果</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>errorSaveScreenAsPhoto<span class="token punctuation">(</span>error_module_name<span class="token punctuation">)</span>            <span class="token keyword">raise</span> e        self<span class="token punctuation">.</span>assertEqualErrorSaveScreenAsPhoto<span class="token punctuation">(</span><span class="token string">"关注"</span><span class="token punctuation">,</span> actual_result<span class="token punctuation">,</span> error_module_name<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="test-ddt-cases"><a href="#test-ddt-cases" class="headerlink" title="test_ddt_cases"></a>test_ddt_cases</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- ecoding: utf-8 -*-</span><span class="token comment"># @ModuleName: test_ddt_login</span><span class="token comment"># @Author: 杨天龙</span><span class="token comment"># @Time: 2022/11/13 15:07</span><span class="token keyword">import</span> time<span class="token keyword">import</span> os<span class="token keyword">from</span> script<span class="token punctuation">.</span>common<span class="token punctuation">.</span>little_red_book <span class="token keyword">import</span> MyTest<span class="token keyword">import</span> win32com<span class="token punctuation">.</span>client<span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>support<span class="token punctuation">.</span>ui <span class="token keyword">import</span> WebDriverWait<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>common<span class="token punctuation">.</span>by <span class="token keyword">import</span> By<span class="token keyword">from</span> unittestreport <span class="token keyword">import</span> ddt<span class="token punctuation">,</span> list_data<span class="token punctuation">,</span> json_data<span class="token punctuation">,</span> yaml_data<span class="token decorator annotation punctuation">@ddt</span><span class="token keyword">class</span> <span class="token class-name">FirstOpenApp</span><span class="token punctuation">(</span>MyTest<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""登录类"""</span>    <span class="token keyword">def</span> <span class="token function">qtest_01</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> error_module_name<span class="token operator">=</span><span class="token string">"首次打开同意"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""首次打开同意"""</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>d<span class="token punctuation">.</span>app_clear<span class="token punctuation">(</span>self<span class="token punctuation">.</span>PACKAGE_NAME<span class="token punctuation">)</span>  <span class="token comment"># 清楚数据</span>            self<span class="token punctuation">.</span>d<span class="token punctuation">.</span>app_start<span class="token punctuation">(</span>self<span class="token punctuation">.</span>PACKAGE_NAME<span class="token punctuation">)</span>  <span class="token comment"># 启动app</span>            self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"同意"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 点击同意</span>            <span class="token keyword">if</span> self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"其他账号"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exists<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"其他账号"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>errorSaveScreenAsPhoto<span class="token punctuation">(</span>error_module_name<span class="token punctuation">)</span>            <span class="token keyword">raise</span> e        actual_result <span class="token operator">=</span> self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"其他登录方式"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_text<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 获取预期结果</span>        self<span class="token punctuation">.</span>assertEqualErrorSaveScreenAsPhoto<span class="token punctuation">(</span><span class="token string">"其他登录方式"</span><span class="token punctuation">,</span> actual_result<span class="token punctuation">,</span> error_module_name<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">qtest_02</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> error_module_name<span class="token operator">=</span><span class="token string">"输入正确账号错误密码"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""输入空的账号空的密码"""</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"其他账号"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exists<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"其他账号"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"其他登录方式"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment"># 点击其他登录方式</span>            self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>resourceId<span class="token operator">=</span><span class="token string">"com.xingin.xhs:id/abr"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 点击手机图标</span>            self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"手机密码登录"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 点击手机密码登录</span>            self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>resourceId<span class="token operator">=</span><span class="token string">"com.xingin.xhs:id/dfv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">"17664014895"</span><span class="token punctuation">)</span>  <span class="token comment"># 输入账号</span>            self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>resourceId<span class="token operator">=</span><span class="token string">"com.xingin.xhs:id/dgk"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">"123456"</span><span class="token punctuation">)</span>  <span class="token comment"># 输入密码</span>            self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>resourceId<span class="token operator">=</span><span class="token string">"com.xingin.xhs:id/emt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment"># 点击"我已阅读并同意"前面那个小圆点</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>d<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">"登录"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 点击登录</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>errorSaveScreenAsPhoto<span class="token punctuation">(</span>error_module_name<span class="token punctuation">)</span>            <span class="token keyword">raise</span> e        <span class="token comment"># while True:</span>        <span class="token comment">#     toast = self.d.toast.get_message(wait_timeout=10, cache_timeout=10)</span>        <span class="token comment">#     self.errorSaveScreenAsPhoto(error_module_name)  # 截图保存</span>        <span class="token comment">#     print("toast111111")</span>        <span class="token comment">#     if toast:</span>        <span class="token comment">#         print(toast, "打印toast信息")  # 打印toast信息</span>        <span class="token comment">#         self.errorSaveScreenAsPhoto(error_module_name)  # 错误截图保存</span>        <span class="token comment">#         self.speaker.Speak(toast)</span>        <span class="token comment">#         self.d.toast.reset()  # 在验证成功后及时清除缓存</span>        <span class="token comment">#         break</span>        <span class="token comment"># 用于生成xpath定位 相当于 "//*[@text='没有找到用户名或密码']"</span>        toast_message <span class="token operator">=</span> <span class="token string">"没有找到用户名或密码"</span>        message <span class="token operator">=</span> <span class="token string">'//*[@text=\'{}\']'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>toast_message<span class="token punctuation">)</span>        <span class="token comment"># 获取toast提示框内容</span>        toast_element <span class="token operator">=</span> WebDriverWait<span class="token punctuation">(</span>self<span class="token punctuation">.</span>d<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span>until<span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>XPATH<span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>toast_element<span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">"toast_element"</span><span class="token punctuation">)</span>        expected_results <span class="token operator">=</span> <span class="token string">"账号或密码错误"</span>  <span class="token comment"># 预期结果</span>        actual_result <span class="token operator">=</span> toast_element  <span class="token comment"># 实际结果</span>        self<span class="token punctuation">.</span>speaker_assert<span class="token punctuation">(</span>expected_results<span class="token punctuation">,</span> actual_result<span class="token punctuation">)</span>  <span class="token comment"># 语音播报断言</span>        self<span class="token punctuation">.</span>assertEqualErrorSaveScreenAsPhoto<span class="token punctuation">(</span>expected_results<span class="token punctuation">,</span> actual_result<span class="token punctuation">,</span> error_module_name<span class="token punctuation">)</span>    cases_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">'title'</span><span class="token punctuation">:</span> <span class="token string">'用例1'</span><span class="token punctuation">,</span> <span class="token string">'data'</span><span class="token punctuation">:</span> <span class="token string">'用例参数'</span><span class="token punctuation">,</span> <span class="token string">'expected'</span><span class="token punctuation">:</span> <span class="token string">'预期结果'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>             <span class="token punctuation">{</span><span class="token string">'title'</span><span class="token punctuation">:</span> <span class="token string">'用例2'</span><span class="token punctuation">,</span> <span class="token string">'data'</span><span class="token punctuation">:</span> <span class="token string">'用例参数'</span><span class="token punctuation">,</span> <span class="token string">'expected'</span><span class="token punctuation">:</span> <span class="token string">'预期结果'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>             <span class="token punctuation">{</span><span class="token string">'title'</span><span class="token punctuation">:</span> <span class="token string">'用例3'</span><span class="token punctuation">,</span> <span class="token string">'data'</span><span class="token punctuation">:</span> <span class="token string">'用例参数'</span><span class="token punctuation">,</span> <span class="token string">'expected'</span><span class="token punctuation">:</span> <span class="token string">'预期结果'</span><span class="token punctuation">}</span><span class="token punctuation">]</span>    json_yaml_path <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">{</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"../.."</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">/data/'</span></span>  <span class="token comment"># 数据路径</span>    <span class="token decorator annotation punctuation">@list_data</span><span class="token punctuation">(</span>cases_list<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">test_case_list</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token decorator annotation punctuation">@json_data</span><span class="token punctuation">(</span>json_yaml_path<span class="token operator">+</span><span class="token string">"/cases.json"</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">test_case_json</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token decorator annotation punctuation">@yaml_data</span><span class="token punctuation">(</span>json_yaml_path<span class="token operator">+</span><span class="token string">"/cases.yaml"</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">test_case_yaml</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="utils"><a href="#utils" class="headerlink" title="utils"></a>utils</h2><h3 id="get-device-ip"><a href="#get-device-ip" class="headerlink" title="get_device_ip"></a>get_device_ip</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- ecoding: utf-8 -*-</span><span class="token comment"># @ModuleName: get_device_ip</span><span class="token comment"># @Author: 杨天龙</span><span class="token comment"># @Time: 2022/11/11 0:43</span><span class="token keyword">import</span> os<span class="token keyword">import</span> re<span class="token keyword">def</span> <span class="token function">exec_cmd</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">:</span>    cmd <span class="token operator">=</span> os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span>cmd<span class="token punctuation">)</span>    cmd_result <span class="token operator">=</span> cmd<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    cmd<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> cmd_result<span class="token keyword">def</span> <span class="token function">get_device_ip</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>    math_obj <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r'inet\s(\d+\.\d+\.\d+\.\d+).*?wlan0'</span><span class="token punctuation">,</span> content<span class="token punctuation">)</span>    <span class="token keyword">if</span> math_obj <span class="token keyword">and</span> math_obj<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> math_obj<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">None</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    result1 <span class="token operator">=</span> exec_cmd<span class="token punctuation">(</span><span class="token string">'adb shell ip addr show wlan0'</span><span class="token punctuation">)</span>    ip <span class="token operator">=</span> get_device_ip<span class="token punctuation">(</span>result1<span class="token punctuation">)</span>  <span class="token comment"># 获得手机IP地址</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="HTMLTestRunner"><a href="#HTMLTestRunner" class="headerlink" title="HTMLTestRunner"></a>HTMLTestRunner</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">"""A TestRunner for use with the Python unit testing framework. Itgenerates a HTML report to show the result at a glance.The simplest way to use this is to invoke its main method. E.g.    import unittest    import HTMLTestRunner    ... define your tests ...    if __name__ == '__main__':        HTMLTestRunner.main()For more customization options, instantiates a HTMLTestRunner object.HTMLTestRunner is a counterpart to unittest's TextTestRunner. E.g.    # output to a file    fp = file('my_report.html', 'wb')    runner = HTMLTestRunner.HTMLTestRunner(                stream=fp,                title='My unit test',                description='This demonstrates the report output by HTMLTestRunner.'                )    # Use an external stylesheet.    # See the Template_mixin class for more customizable options    runner.STYLESHEET_TMPL = '&lt;link rel="stylesheet" href="my_stylesheet.css" type="text/css"&gt;'    # run the test    runner.run(my_test_suite)------------------------------------------------------------------------Copyright (c) 2004-2007, Wai Yip TungAll rights reserved.Redistribution and use in source and binary forms, with or withoutmodification, are permitted provided that the following conditions aremet:* Redistributions of source code must retain the above copyright notice,  this list of conditions and the following disclaimer.* Redistributions in binary form must reproduce the above copyright  notice, this list of conditions and the following disclaimer in the  documentation and/or other materials provided with the distribution.* Neither the name Wai Yip Tung nor the names of its contributors may be  used to endorse or promote products derived from this software without  specific prior written permission.THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "ASIS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITEDTO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR APARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNEROR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, ORPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OFLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDINGNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THISSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."""</span><span class="token comment"># URL: http://tungwaiyip.info/software/HTMLTestRunner.html</span>__author__ <span class="token operator">=</span> <span class="token string">"Wai Yip Tung"</span>__version__ <span class="token operator">=</span> <span class="token string">"0.8.2"</span><span class="token triple-quoted-string string">"""Change HistoryVersion 0.8.2* Show output inline instead of popup window (Viorel Lupu).Version in 0.8.1* Validated XHTML (Wolfgang Borgert).* Added description of test classes and test cases.Version in 0.8.0* Define Template_mixin class for customization.* Workaround a IE 6 bug that it does not treat &lt;script&gt; block as CDATA.Version in 0.7.1* Back port to Python 2.3 (Frank Horowitz).* Fix missing scroll bars in detail log (Podi)."""</span><span class="token comment"># TODO: color stderr</span><span class="token comment"># TODO: simplify javascript using ,ore than 1 class in the class attribute?</span><span class="token keyword">import</span> datetime<span class="token keyword">import</span> io  <span class="token comment"># import StringIO</span><span class="token keyword">import</span> sys<span class="token keyword">import</span> time<span class="token keyword">import</span> unittest<span class="token keyword">from</span> xml<span class="token punctuation">.</span>sax <span class="token keyword">import</span> saxutils<span class="token comment"># ------------------------------------------------------------------------</span><span class="token comment"># The redirectors below are used to capture output during testing. Output</span><span class="token comment"># sent to sys.stdout and sys.stderr are automatically captured. However</span><span class="token comment"># in some cases sys.stdout is already cached before HTMLTestRunner is</span><span class="token comment"># invoked (e.g. calling logging.basicConfig). In order to capture those</span><span class="token comment"># output, use the redirectors for the cached stream.</span><span class="token comment">#</span><span class="token comment"># e.g.</span><span class="token comment">#   &gt;&gt;&gt; logging.basicConfig(stream=HTMLTestRunner.stdout_redirector)</span><span class="token comment">#   &gt;&gt;&gt;</span><span class="token keyword">class</span> <span class="token class-name">OutputRedirector</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">""" Wrapper to redirect stdout or stderr """</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> fp<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>fp <span class="token operator">=</span> fp    <span class="token keyword">def</span> <span class="token function">write</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">bytes</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token string">'UTF-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># self.fp.write(s)</span>    <span class="token keyword">def</span> <span class="token function">writelines</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> lines<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>fp<span class="token punctuation">.</span>writelines<span class="token punctuation">(</span>lines<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">flush</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>fp<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>stdout_redirector <span class="token operator">=</span> OutputRedirector<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>stdout<span class="token punctuation">)</span>stderr_redirector <span class="token operator">=</span> OutputRedirector<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>stderr<span class="token punctuation">)</span><span class="token comment"># ----------------------------------------------------------------------</span><span class="token comment"># Template</span><span class="token keyword">class</span> <span class="token class-name">Template_mixin</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    Define a HTML template for report customerization and generation.    Overall structure of an HTML report    HTML    +------------------------+    |&lt;html&gt;                  |    |  &lt;head&gt;                |    |                        |    |   STYLESHEET           |    |   +----------------+   |    |   |                |   |    |   +----------------+   |    |                        |    |  &lt;/head&gt;               |    |                        |    |  &lt;body&gt;                |    |                        |    |   HEADING              |    |   +----------------+   |    |   |                |   |    |   +----------------+   |    |                        |    |   REPORT               |    |   +----------------+   |    |   |                |   |    |   +----------------+   |    |                        |    |   ENDING               |    |   +----------------+   |    |   |                |   |    |   +----------------+   |    |                        |    |  &lt;/body&gt;               |    |&lt;/html&gt;                 |    +------------------------+    """</span>    STATUS <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token number">0</span><span class="token punctuation">:</span> <span class="token string">'pass'</span><span class="token punctuation">,</span>    <span class="token number">1</span><span class="token punctuation">:</span> <span class="token string">'fail'</span><span class="token punctuation">,</span>    <span class="token number">2</span><span class="token punctuation">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span>    DEFAULT_TITLE <span class="token operator">=</span> <span class="token string">'Unit Test Report'</span>    DEFAULT_DESCRIPTION <span class="token operator">=</span> <span class="token string">''</span>    <span class="token comment"># ------------------------------------------------------------------------</span>    <span class="token comment"># HTML Template</span>    HTML_TMPL <span class="token operator">=</span> <span class="token triple-quoted-string string">r"""&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;&lt;head&gt;    &lt;title&gt;%(title)s&lt;/title&gt;    &lt;meta name="generator" content="%(generator)s"/&gt;    &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/&gt;    %(stylesheet)s&lt;/head&gt;&lt;body&gt;&lt;script language="javascript" type="text/javascript"&gt;&lt;!--output_list = Array();/* level - 0:Summary; 1:Failed; 2:All */function showCase(level) {    trs = document.getElementsByTagName("tr");    for (var i = 0; i &lt; trs.length; i++) {        tr = trs[i];        id = tr.id;        if (id.substr(0,2) == 'ft') {            if (level &lt; 1) {                tr.className = 'hiddenRow';            }            else {                tr.className = '';            }        }        if (id.substr(0,2) == 'pt') {            if (level &gt; 1) {                tr.className = '';            }            else {                tr.className = 'hiddenRow';            }        }    }}function showClassDetail(cid, count) {    var id_list = Array(count);    var toHide = 1;    for (var i = 0; i &lt; count; i++) {        tid0 = 't' + cid.substr(1) + '.' + (i+1);        tid = 'f' + tid0;        tr = document.getElementById(tid);        if (!tr) {            tid = 'p' + tid0;            tr = document.getElementById(tid);        }        id_list[i] = tid;        if (tr.className) {            toHide = 0;        }    }    for (var i = 0; i &lt; count; i++) {        tid = id_list[i];        if (toHide) {            document.getElementById('div_'+tid).style.display = 'none'            document.getElementById(tid).className = 'hiddenRow';        }        else {            document.getElementById(tid).className = '';        }    }}function showTestDetail(div_id){    var details_div = document.getElementById(div_id)    var displayState = details_div.style.display    // alert(displayState)    if (displayState != 'block' ) {        displayState = 'block'        details_div.style.display = 'block'    }    else {        details_div.style.display = 'none'    }}function html_escape(s) {    s = s.replace(/&amp;/g,'&amp;amp;');    s = s.replace(/&lt;/g,'&amp;lt;');    s = s.replace(/&gt;/g,'&amp;gt;');    return s;}/* obsoleted by detail in &lt;div&gt;function showOutput(id, name) {    var w = window.open("", //url                    name,                    "resizable,scrollbars,status,width=800,height=450");    d = w.document;    d.write("&lt;pre&gt;");    d.write(html_escape(output_list[id]));    d.write("\n");    d.write("&lt;a href='javascript:window.close()'&gt;close&lt;/a&gt;\n");    d.write("&lt;/pre&gt;\n");    d.close();}*/--&gt;&lt;/script&gt;%(heading)s%(report)s%(ending)s&lt;/body&gt;&lt;/html&gt;"""</span>    <span class="token comment"># variables: (title, generator, stylesheet, heading, report, ending)</span>    <span class="token comment"># ------------------------------------------------------------------------</span>    <span class="token comment"># Stylesheet</span>    <span class="token comment">#</span>    <span class="token comment"># alternatively use a &lt;link&gt; for external style sheet, e.g.</span>    <span class="token comment">#   &lt;link rel="stylesheet" href="$url" type="text/css"&gt;</span>    STYLESHEET_TMPL <span class="token operator">=</span> <span class="token triple-quoted-string string">"""&lt;style type="text/css" media="screen"&gt;body        { font-family: verdana, arial, helvetica, sans-serif; font-size: 80%; }table       { font-size: 100%; }pre         { }/* -- heading ---------------------------------------------------------------------- */h1 {font-size: 16pt;color: gray;}.heading {    margin-top: 0ex;    margin-bottom: 1ex;}.heading .attribute {    margin-top: 1ex;    margin-bottom: 0;}.heading .description {    margin-top: 4ex;    margin-bottom: 6ex;}/* -- css div popup ------------------------------------------------------------------------ */a.popup_link {}a.popup_link:hover {    color: red;}.popup_window {    display: none;    position: relative;    left: 0px;    top: 0px;    /*border: solid #627173 1px; */    padding: 10px;    background-color: #E6E6D6;    font-family: "Lucida Console", "Courier New", Courier, monospace;    text-align: left;    font-size: 8pt;    width: 500px;}}/* -- report ------------------------------------------------------------------------ */#show_detail_line {    margin-top: 3ex;    margin-bottom: 1ex;}#result_table {    width: 80%;    border-collapse: collapse;    border: 1px solid #777;}#header_row {    font-weight: bold;    color: white;    background-color: #777;}#result_table td {    border: 1px solid #777;    padding: 2px;}#total_row  { font-weight: bold; }.passClass  { background-color: #6c6; }.failClass  { background-color: #c60; }.errorClass { background-color: #c00; }.passCase   { color: #6c6; }.failCase   { color: #c60; font-weight: bold; }.errorCase  { color: #c00; font-weight: bold; }.hiddenRow  { display: none; }.testcase   { margin-left: 2em; }/* -- ending ---------------------------------------------------------------------- */#ending {}&lt;/style&gt;"""</span>    <span class="token comment"># ------------------------------------------------------------------------</span>    <span class="token comment"># Heading</span>    <span class="token comment">#</span>    HEADING_TMPL <span class="token operator">=</span> <span class="token triple-quoted-string string">"""&lt;div class='heading'&gt;&lt;h1&gt;%(title)s&lt;/h1&gt;%(parameters)s&lt;p class='description'&gt;%(description)s&lt;/p&gt;&lt;/div&gt;"""</span> <span class="token comment"># variables: (title, parameters, description)</span>    HEADING_ATTRIBUTE_TMPL <span class="token operator">=</span> <span class="token triple-quoted-string string">"""&lt;p class='attribute'&gt;&lt;strong&gt;%(name)s:&lt;/strong&gt; %(value)s&lt;/p&gt;"""</span> <span class="token comment"># variables: (name, value)</span>    <span class="token comment"># ------------------------------------------------------------------------</span>    <span class="token comment"># Report</span>    <span class="token comment">#</span>    REPORT_TMPL <span class="token operator">=</span> <span class="token triple-quoted-string string">"""&lt;p id='show_detail_line'&gt;Show&lt;a href='javascript:showCase(0)'&gt;Summary&lt;/a&gt;&lt;a href='javascript:showCase(1)'&gt;Failed&lt;/a&gt;&lt;a href='javascript:showCase(2)'&gt;All&lt;/a&gt;&lt;/p&gt;&lt;table id='result_table'&gt;&lt;colgroup&gt;&lt;col align='left' /&gt;&lt;col align='right' /&gt;&lt;col align='right' /&gt;&lt;col align='right' /&gt;&lt;col align='right' /&gt;&lt;col align='right' /&gt;&lt;/colgroup&gt;&lt;tr id='header_row'&gt;    &lt;td&gt;Test Group/Test case&lt;/td&gt;    &lt;td&gt;Count&lt;/td&gt;    &lt;td&gt;Pass&lt;/td&gt;    &lt;td&gt;Fail&lt;/td&gt;    &lt;td&gt;Error&lt;/td&gt;    &lt;td&gt;View&lt;/td&gt;&lt;/tr&gt;%(test_list)s&lt;tr id='total_row'&gt;    &lt;td&gt;Total&lt;/td&gt;    &lt;td&gt;%(count)s&lt;/td&gt;    &lt;td&gt;%(Pass)s&lt;/td&gt;    &lt;td&gt;%(fail)s&lt;/td&gt;    &lt;td&gt;%(error)s&lt;/td&gt;    &lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;"""</span> <span class="token comment"># variables: (test_list, count, Pass, fail, error)</span>    REPORT_CLASS_TMPL <span class="token operator">=</span> <span class="token triple-quoted-string string">r"""&lt;tr class='%(style)s'&gt;    &lt;td&gt;%(desc)s&lt;/td&gt;    &lt;td&gt;%(count)s&lt;/td&gt;    &lt;td&gt;%(Pass)s&lt;/td&gt;    &lt;td&gt;%(fail)s&lt;/td&gt;    &lt;td&gt;%(error)s&lt;/td&gt;    &lt;td&gt;&lt;a href="javascript:showClassDetail('%(cid)s',%(count)s)"&gt;Detail&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;"""</span> <span class="token comment"># variables: (style, desc, count, Pass, fail, error, cid)</span>    REPORT_TEST_WITH_OUTPUT_TMPL <span class="token operator">=</span> <span class="token triple-quoted-string string">r"""&lt;tr id='%(tid)s' class='%(Class)s'&gt;    &lt;td class='%(style)s'&gt;&lt;div class='testcase'&gt;%(desc)s&lt;/div&gt;&lt;/td&gt;    &lt;td colspan='5' align='center'&gt;    &lt;!--css div popup start--&gt;    &lt;a class="popup_link" onfocus='this.blur();' href="javascript:showTestDetail('div_%(tid)s')" &gt;        %(status)s&lt;/a&gt;    &lt;div id='div_%(tid)s' class="popup_window"&gt;        &lt;div style='text-align: right; color:red;cursor:pointer'&gt;        &lt;a onfocus='this.blur();' onclick="document.getElementById('div_%(tid)s').style.display = 'none' " &gt;           [x]&lt;/a&gt;        &lt;/div&gt;        &lt;pre&gt;        %(script)s        &lt;/pre&gt;    &lt;/div&gt;    &lt;!--css div popup end--&gt;    &lt;/td&gt;&lt;/tr&gt;"""</span> <span class="token comment"># variables: (tid, Class, style, desc, status)</span>    REPORT_TEST_NO_OUTPUT_TMPL <span class="token operator">=</span> <span class="token triple-quoted-string string">r"""&lt;tr id='%(tid)s' class='%(Class)s'&gt;    &lt;td class='%(style)s'&gt;&lt;div class='testcase'&gt;%(desc)s&lt;/div&gt;&lt;/td&gt;    &lt;td colspan='5' align='center'&gt;%(status)s&lt;/td&gt;&lt;/tr&gt;"""</span> <span class="token comment"># variables: (tid, Class, style, desc, status)</span>    REPORT_TEST_OUTPUT_TMPL <span class="token operator">=</span> <span class="token triple-quoted-string string">r"""%(id)s: %(output)s"""</span> <span class="token comment"># variables: (id, output)</span>    <span class="token comment"># ------------------------------------------------------------------------</span>    <span class="token comment"># ENDING</span>    <span class="token comment">#</span>    ENDING_TMPL <span class="token operator">=</span> <span class="token triple-quoted-string string">"""&lt;div id='ending'&gt;&amp;nbsp;&lt;/div&gt;"""</span><span class="token comment"># -------------------- The end of the Template class -------------------</span>TestResult <span class="token operator">=</span> unittest<span class="token punctuation">.</span>TestResult<span class="token keyword">class</span> <span class="token class-name">_TestResult</span><span class="token punctuation">(</span>TestResult<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># note: _TestResult is a pure representation of results.</span>    <span class="token comment"># It lacks the output and reporting ability compares to unittest._TextTestResult.</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> verbosity<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        TestResult<span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>self<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>stdout0 <span class="token operator">=</span> <span class="token boolean">None</span>        self<span class="token punctuation">.</span>stderr0 <span class="token operator">=</span> <span class="token boolean">None</span>        self<span class="token punctuation">.</span>success_count <span class="token operator">=</span> <span class="token number">0</span>        self<span class="token punctuation">.</span>failure_count <span class="token operator">=</span> <span class="token number">0</span>        self<span class="token punctuation">.</span>error_count <span class="token operator">=</span> <span class="token number">0</span>        self<span class="token punctuation">.</span>verbosity <span class="token operator">=</span> verbosity        <span class="token comment"># result is a list of result in 4 tuple</span>        <span class="token comment"># (</span>        <span class="token comment">#   result code (0: success; 1: fail; 2: error),</span>        <span class="token comment">#   TestCase object,</span>        <span class="token comment">#   Test output (byte string),</span>        <span class="token comment">#   stack trace,</span>        <span class="token comment"># )</span>        self<span class="token punctuation">.</span>result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">def</span> <span class="token function">startTest</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> test<span class="token punctuation">)</span><span class="token punctuation">:</span>        TestResult<span class="token punctuation">.</span>startTest<span class="token punctuation">(</span>self<span class="token punctuation">,</span> test<span class="token punctuation">)</span>        <span class="token comment"># just one buffer for both stdout and stderr</span>        self<span class="token punctuation">.</span>outputBuffer <span class="token operator">=</span> io<span class="token punctuation">.</span>StringIO<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># self.outputBuffer = StringIO.StringIO()</span>        stdout_redirector<span class="token punctuation">.</span>fp <span class="token operator">=</span> self<span class="token punctuation">.</span>outputBuffer        stderr_redirector<span class="token punctuation">.</span>fp <span class="token operator">=</span> self<span class="token punctuation">.</span>outputBuffer        self<span class="token punctuation">.</span>stdout0 <span class="token operator">=</span> sys<span class="token punctuation">.</span>stdout        self<span class="token punctuation">.</span>stderr0 <span class="token operator">=</span> sys<span class="token punctuation">.</span>stderr        sys<span class="token punctuation">.</span>stdout <span class="token operator">=</span> stdout_redirector        sys<span class="token punctuation">.</span>stderr <span class="token operator">=</span> stderr_redirector    <span class="token keyword">def</span> <span class="token function">complete_output</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""        Disconnect output redirection and return buffer.        Safe to call multiple times.        """</span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>stdout0<span class="token punctuation">:</span>            sys<span class="token punctuation">.</span>stdout <span class="token operator">=</span> self<span class="token punctuation">.</span>stdout0            sys<span class="token punctuation">.</span>stderr <span class="token operator">=</span> self<span class="token punctuation">.</span>stderr0            self<span class="token punctuation">.</span>stdout0 <span class="token operator">=</span> <span class="token boolean">None</span>            self<span class="token punctuation">.</span>stderr0 <span class="token operator">=</span> <span class="token boolean">None</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>outputBuffer<span class="token punctuation">.</span>getvalue<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">stopTest</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> test<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># Usually one of addSuccess, addError or addFailure would have been called.</span>        <span class="token comment"># But there are some path in unittest that would bypass this.</span>        <span class="token comment"># We must disconnect stdout in stopTest(), which is guaranteed to be called.</span>        self<span class="token punctuation">.</span>complete_output<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">addSuccess</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> test<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>success_count <span class="token operator">+=</span> <span class="token number">1</span>        TestResult<span class="token punctuation">.</span>addSuccess<span class="token punctuation">(</span>self<span class="token punctuation">,</span> test<span class="token punctuation">)</span>        output <span class="token operator">=</span> self<span class="token punctuation">.</span>complete_output<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>result<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> test<span class="token punctuation">,</span> output<span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>verbosity <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">:</span>            sys<span class="token punctuation">.</span>stderr<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'ok '</span><span class="token punctuation">)</span>            sys<span class="token punctuation">.</span>stderr<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span><span class="token punctuation">)</span>            sys<span class="token punctuation">.</span>stderr<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            sys<span class="token punctuation">.</span>stderr<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'../venv/Lib'</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">addError</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> test<span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>error_count <span class="token operator">+=</span> <span class="token number">1</span>        TestResult<span class="token punctuation">.</span>addError<span class="token punctuation">(</span>self<span class="token punctuation">,</span> test<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        _<span class="token punctuation">,</span> _exc_str <span class="token operator">=</span> self<span class="token punctuation">.</span>errors<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>        output <span class="token operator">=</span> self<span class="token punctuation">.</span>complete_output<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>result<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> test<span class="token punctuation">,</span> output<span class="token punctuation">,</span> _exc_str<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>verbosity <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">:</span>            sys<span class="token punctuation">.</span>stderr<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'E  '</span><span class="token punctuation">)</span>            sys<span class="token punctuation">.</span>stderr<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span><span class="token punctuation">)</span>            sys<span class="token punctuation">.</span>stderr<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            sys<span class="token punctuation">.</span>stderr<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'E'</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">addFailure</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> test<span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>failure_count <span class="token operator">+=</span> <span class="token number">1</span>        TestResult<span class="token punctuation">.</span>addFailure<span class="token punctuation">(</span>self<span class="token punctuation">,</span> test<span class="token punctuation">,</span> err<span class="token punctuation">)</span>        _<span class="token punctuation">,</span> _exc_str <span class="token operator">=</span> self<span class="token punctuation">.</span>failures<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>        output <span class="token operator">=</span> self<span class="token punctuation">.</span>complete_output<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>result<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> test<span class="token punctuation">,</span> output<span class="token punctuation">,</span> _exc_str<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>verbosity <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">:</span>            sys<span class="token punctuation">.</span>stderr<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'F  '</span><span class="token punctuation">)</span>            sys<span class="token punctuation">.</span>stderr<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span><span class="token punctuation">)</span>            sys<span class="token punctuation">.</span>stderr<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            sys<span class="token punctuation">.</span>stderr<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'F'</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">HTMLTestRunner</span><span class="token punctuation">(</span>Template_mixin<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    """</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> stream<span class="token operator">=</span>sys<span class="token punctuation">.</span>stdout<span class="token punctuation">,</span> verbosity<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> description<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>stream <span class="token operator">=</span> stream        self<span class="token punctuation">.</span>verbosity <span class="token operator">=</span> verbosity        <span class="token keyword">if</span> title <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>title <span class="token operator">=</span> self<span class="token punctuation">.</span>DEFAULT_TITLE        <span class="token keyword">else</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>title <span class="token operator">=</span> title        <span class="token keyword">if</span> description <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>description <span class="token operator">=</span> self<span class="token punctuation">.</span>DEFAULT_DESCRIPTION        <span class="token keyword">else</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>description <span class="token operator">=</span> description        self<span class="token punctuation">.</span>startTime <span class="token operator">=</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> test<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token string">"Run the given test case or test suite."</span>        result <span class="token operator">=</span> _TestResult<span class="token punctuation">(</span>self<span class="token punctuation">.</span>verbosity<span class="token punctuation">)</span>        test<span class="token punctuation">(</span>result<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>stopTime <span class="token operator">=</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>generateReport<span class="token punctuation">(</span>test<span class="token punctuation">,</span> result<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\nTime Elapsed: %s'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>stopTime<span class="token operator">-</span>self<span class="token punctuation">.</span>startTime<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># print &gt;&gt;sys.stderr, '\nTime Elapsed: %s' % (self.stopTime-self.startTime)</span>        <span class="token keyword">return</span> result    <span class="token keyword">def</span> <span class="token function">sortResult</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> result_list<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># unittest does not seems to run in any particular order.</span>        <span class="token comment"># Here at least we want to group them together by class.</span>        rmap <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>        classes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> n<span class="token punctuation">,</span>t<span class="token punctuation">,</span>o<span class="token punctuation">,</span>e <span class="token keyword">in</span> result_list<span class="token punctuation">:</span>            cls <span class="token operator">=</span> t<span class="token punctuation">.</span>__class__            <span class="token keyword">if</span> <span class="token keyword">not</span> cls <span class="token keyword">in</span> rmap<span class="token punctuation">:</span>  <span class="token comment"># if not rmap.has_key(cls):</span>                rmap<span class="token punctuation">[</span>cls<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>                classes<span class="token punctuation">.</span>append<span class="token punctuation">(</span>cls<span class="token punctuation">)</span>            rmap<span class="token punctuation">[</span>cls<span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span>t<span class="token punctuation">,</span>o<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>        r <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>cls<span class="token punctuation">,</span> rmap<span class="token punctuation">[</span>cls<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">for</span> cls <span class="token keyword">in</span> classes<span class="token punctuation">]</span>        <span class="token keyword">return</span> r    <span class="token keyword">def</span> <span class="token function">getReportAttributes</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""        Return report attributes as a list of (name, value).        Override this to add custom attributes.        """</span>        startTime <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>startTime<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">19</span><span class="token punctuation">]</span>        duration <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>stopTime <span class="token operator">-</span> self<span class="token punctuation">.</span>startTime<span class="token punctuation">)</span>        status <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> result<span class="token punctuation">.</span>success_count<span class="token punctuation">:</span> status<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'Pass %s'</span>    <span class="token operator">%</span> result<span class="token punctuation">.</span>success_count<span class="token punctuation">)</span>        <span class="token keyword">if</span> result<span class="token punctuation">.</span>failure_count<span class="token punctuation">:</span> status<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'Failure %s'</span> <span class="token operator">%</span> result<span class="token punctuation">.</span>failure_count<span class="token punctuation">)</span>        <span class="token keyword">if</span> result<span class="token punctuation">.</span>error_count<span class="token punctuation">:</span>   status<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'Error %s'</span>   <span class="token operator">%</span> result<span class="token punctuation">.</span>error_count  <span class="token punctuation">)</span>        <span class="token keyword">if</span> status<span class="token punctuation">:</span>            status <span class="token operator">=</span> <span class="token string">' '</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>status<span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            status <span class="token operator">=</span> <span class="token string">'none'</span>        <span class="token keyword">return</span> <span class="token punctuation">[</span>            <span class="token punctuation">(</span><span class="token string">'Start Time'</span><span class="token punctuation">,</span> startTime<span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token punctuation">(</span><span class="token string">'Duration'</span><span class="token punctuation">,</span> duration<span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token punctuation">(</span><span class="token string">'Status'</span><span class="token punctuation">,</span> status<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span>    <span class="token keyword">def</span> <span class="token function">generateReport</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> test<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">:</span>        report_attrs <span class="token operator">=</span> self<span class="token punctuation">.</span>getReportAttributes<span class="token punctuation">(</span>result<span class="token punctuation">)</span>        generator <span class="token operator">=</span> <span class="token string">'HTMLTestRunner %s'</span> <span class="token operator">%</span> __version__        stylesheet <span class="token operator">=</span> self<span class="token punctuation">.</span>_generate_stylesheet<span class="token punctuation">(</span><span class="token punctuation">)</span>        heading <span class="token operator">=</span> self<span class="token punctuation">.</span>_generate_heading<span class="token punctuation">(</span>report_attrs<span class="token punctuation">)</span>        report <span class="token operator">=</span> self<span class="token punctuation">.</span>_generate_report<span class="token punctuation">(</span>result<span class="token punctuation">)</span>        ending <span class="token operator">=</span> self<span class="token punctuation">.</span>_generate_ending<span class="token punctuation">(</span><span class="token punctuation">)</span>        output <span class="token operator">=</span> self<span class="token punctuation">.</span>HTML_TMPL <span class="token operator">%</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>            title <span class="token operator">=</span> saxutils<span class="token punctuation">.</span>escape<span class="token punctuation">(</span>self<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">,</span>            generator <span class="token operator">=</span> generator<span class="token punctuation">,</span>            stylesheet <span class="token operator">=</span> stylesheet<span class="token punctuation">,</span>            heading <span class="token operator">=</span> heading<span class="token punctuation">,</span>            report <span class="token operator">=</span> report<span class="token punctuation">,</span>            ending <span class="token operator">=</span> ending<span class="token punctuation">,</span>        <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>stream<span class="token punctuation">.</span>write<span class="token punctuation">(</span>output<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">_generate_stylesheet</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>STYLESHEET_TMPL    <span class="token keyword">def</span> <span class="token function">_generate_heading</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> report_attrs<span class="token punctuation">)</span><span class="token punctuation">:</span>        a_lines <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> name<span class="token punctuation">,</span> value <span class="token keyword">in</span> report_attrs<span class="token punctuation">:</span>            line <span class="token operator">=</span> self<span class="token punctuation">.</span>HEADING_ATTRIBUTE_TMPL <span class="token operator">%</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>                    name <span class="token operator">=</span> saxutils<span class="token punctuation">.</span>escape<span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span>                    value <span class="token operator">=</span> saxutils<span class="token punctuation">.</span>escape<span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span>            a_lines<span class="token punctuation">.</span>append<span class="token punctuation">(</span>line<span class="token punctuation">)</span>        heading <span class="token operator">=</span> self<span class="token punctuation">.</span>HEADING_TMPL <span class="token operator">%</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>            title <span class="token operator">=</span> saxutils<span class="token punctuation">.</span>escape<span class="token punctuation">(</span>self<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">,</span>            parameters <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>a_lines<span class="token punctuation">)</span><span class="token punctuation">,</span>            description <span class="token operator">=</span> saxutils<span class="token punctuation">.</span>escape<span class="token punctuation">(</span>self<span class="token punctuation">.</span>description<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span>        <span class="token keyword">return</span> heading    <span class="token keyword">def</span> <span class="token function">_generate_report</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">:</span>        rows <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        sortedResult <span class="token operator">=</span> self<span class="token punctuation">.</span>sortResult<span class="token punctuation">(</span>result<span class="token punctuation">.</span>result<span class="token punctuation">)</span>        <span class="token keyword">for</span> cid<span class="token punctuation">,</span> <span class="token punctuation">(</span>cls<span class="token punctuation">,</span> cls_results<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>sortedResult<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment"># subtotal for a class</span>            np <span class="token operator">=</span> nf <span class="token operator">=</span> ne <span class="token operator">=</span> <span class="token number">0</span>            <span class="token keyword">for</span> n<span class="token punctuation">,</span>t<span class="token punctuation">,</span>o<span class="token punctuation">,</span>e <span class="token keyword">in</span> cls_results<span class="token punctuation">:</span>                <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span> np <span class="token operator">+=</span> <span class="token number">1</span>                <span class="token keyword">elif</span> n <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span> nf <span class="token operator">+=</span> <span class="token number">1</span>                <span class="token keyword">else</span><span class="token punctuation">:</span> ne <span class="token operator">+=</span> <span class="token number">1</span>            <span class="token comment"># format class description</span>            <span class="token keyword">if</span> cls<span class="token punctuation">.</span>__module__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>                name <span class="token operator">=</span> cls<span class="token punctuation">.</span>__name__            <span class="token keyword">else</span><span class="token punctuation">:</span>                name <span class="token operator">=</span> <span class="token string">"%s.%s"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>cls<span class="token punctuation">.</span>__module__<span class="token punctuation">,</span> cls<span class="token punctuation">.</span>__name__<span class="token punctuation">)</span>            doc <span class="token operator">=</span> cls<span class="token punctuation">.</span>__doc__ <span class="token keyword">and</span> cls<span class="token punctuation">.</span>__doc__<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">or</span> <span class="token string">""</span>            desc <span class="token operator">=</span> doc <span class="token keyword">and</span> <span class="token string">'%s: %s'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>name<span class="token punctuation">,</span> doc<span class="token punctuation">)</span> <span class="token keyword">or</span> name            row <span class="token operator">=</span> self<span class="token punctuation">.</span>REPORT_CLASS_TMPL <span class="token operator">%</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>                style <span class="token operator">=</span> ne <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token keyword">and</span> <span class="token string">'errorClass'</span> <span class="token keyword">or</span> nf <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token keyword">and</span> <span class="token string">'failClass'</span> <span class="token keyword">or</span> <span class="token string">'passClass'</span><span class="token punctuation">,</span>                desc <span class="token operator">=</span> desc<span class="token punctuation">,</span>                count <span class="token operator">=</span> np<span class="token operator">+</span>nf<span class="token operator">+</span>ne<span class="token punctuation">,</span>                Pass <span class="token operator">=</span> np<span class="token punctuation">,</span>                fail <span class="token operator">=</span> nf<span class="token punctuation">,</span>                error <span class="token operator">=</span> ne<span class="token punctuation">,</span>                cid <span class="token operator">=</span> <span class="token string">'c%s'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>cid<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span>            rows<span class="token punctuation">.</span>append<span class="token punctuation">(</span>row<span class="token punctuation">)</span>            <span class="token keyword">for</span> tid<span class="token punctuation">,</span> <span class="token punctuation">(</span>n<span class="token punctuation">,</span>t<span class="token punctuation">,</span>o<span class="token punctuation">,</span>e<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>cls_results<span class="token punctuation">)</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>_generate_report_test<span class="token punctuation">(</span>rows<span class="token punctuation">,</span> cid<span class="token punctuation">,</span> tid<span class="token punctuation">,</span> n<span class="token punctuation">,</span> t<span class="token punctuation">,</span> o<span class="token punctuation">,</span> e<span class="token punctuation">)</span>        report <span class="token operator">=</span> self<span class="token punctuation">.</span>REPORT_TMPL <span class="token operator">%</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>            test_list <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>rows<span class="token punctuation">)</span><span class="token punctuation">,</span>            count <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>success_count<span class="token operator">+</span>result<span class="token punctuation">.</span>failure_count<span class="token operator">+</span>result<span class="token punctuation">.</span>error_count<span class="token punctuation">)</span><span class="token punctuation">,</span>            Pass <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>success_count<span class="token punctuation">)</span><span class="token punctuation">,</span>            fail <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>failure_count<span class="token punctuation">)</span><span class="token punctuation">,</span>            error <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>error_count<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span>        <span class="token keyword">return</span> report    <span class="token keyword">def</span> <span class="token function">_generate_report_test</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> rows<span class="token punctuation">,</span> cid<span class="token punctuation">,</span> tid<span class="token punctuation">,</span> n<span class="token punctuation">,</span> t<span class="token punctuation">,</span> o<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># e.g. 'pt1.1', 'ft1.1', etc</span>        has_output <span class="token operator">=</span> <span class="token builtin">bool</span><span class="token punctuation">(</span>o <span class="token keyword">or</span> e<span class="token punctuation">)</span>        tid <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">and</span> <span class="token string">'p'</span> <span class="token keyword">or</span> <span class="token string">'f'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'t%s.%s'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>cid<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>tid<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>        name <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>        doc <span class="token operator">=</span> t<span class="token punctuation">.</span>shortDescription<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token string">""</span>        desc <span class="token operator">=</span> doc <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token string">'%s: %s'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>name<span class="token punctuation">,</span> doc<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">or</span> name        tmpl <span class="token operator">=</span> has_output <span class="token keyword">and</span> self<span class="token punctuation">.</span>REPORT_TEST_WITH_OUTPUT_TMPL <span class="token keyword">or</span> self<span class="token punctuation">.</span>REPORT_TEST_NO_OUTPUT_TMPL        <span class="token comment"># o and e should be byte string because they are collected from stdout and stderr?</span>        <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment"># TODO: some problem with 'string_escape': it escape \n and mess up formating</span>            <span class="token comment"># uo = unicode(o.encode('string_escape'))</span>            uo <span class="token operator">=</span> o  <span class="token comment"># uo = o.decode('latin-1')</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            uo <span class="token operator">=</span> o<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>  <span class="token comment"># uo = o</span>        <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment"># TODO: some problem with 'string_escape': it escape \n and mess up formating</span>            <span class="token comment"># ue = unicode(e.encode('string_escape'))</span>            ue<span class="token operator">=</span>e  <span class="token comment"># ue = e.decode('latin-1')</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            ue <span class="token operator">=</span> e<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>  <span class="token comment"># ue = e</span>        script <span class="token operator">=</span> self<span class="token punctuation">.</span>REPORT_TEST_OUTPUT_TMPL <span class="token operator">%</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>            <span class="token builtin">id</span> <span class="token operator">=</span> tid<span class="token punctuation">,</span>            output <span class="token operator">=</span> saxutils<span class="token punctuation">.</span>escape<span class="token punctuation">(</span>uo<span class="token operator">+</span>ue<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span>        row <span class="token operator">=</span> tmpl <span class="token operator">%</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>            tid <span class="token operator">=</span> tid<span class="token punctuation">,</span>            Class <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">and</span> <span class="token string">'hiddenRow'</span> <span class="token keyword">or</span> <span class="token string">'none'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            style <span class="token operator">=</span> n <span class="token operator">==</span> <span class="token number">2</span> <span class="token keyword">and</span> <span class="token string">'errorCase'</span> <span class="token keyword">or</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">1</span> <span class="token keyword">and</span> <span class="token string">'failCase'</span> <span class="token keyword">or</span> <span class="token string">'none'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            desc <span class="token operator">=</span> desc<span class="token punctuation">,</span>            script <span class="token operator">=</span> script<span class="token punctuation">,</span>            status <span class="token operator">=</span> self<span class="token punctuation">.</span>STATUS<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span>        rows<span class="token punctuation">.</span>append<span class="token punctuation">(</span>row<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> has_output<span class="token punctuation">:</span>            <span class="token keyword">return</span>    <span class="token keyword">def</span> <span class="token function">_generate_ending</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>ENDING_TMPL<span class="token comment">##############################################################################</span><span class="token comment"># Facilities for running tests from the command line</span><span class="token comment">##############################################################################</span><span class="token comment"># Note: Reuse unittest.TestProgram to launch test. In the future we may</span><span class="token comment"># build our own launcher to support more specific command line</span><span class="token comment"># parameters like test title, CSS, etc.</span><span class="token keyword">class</span> <span class="token class-name">TestProgram</span><span class="token punctuation">(</span>unittest<span class="token punctuation">.</span>TestProgram<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    A variation of the unittest.TestProgram. Please refer to the base    class for command line parameters.    """</span>    <span class="token keyword">def</span> <span class="token function">runTests</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># Pick HTMLTestRunner as the default test runner.</span>        <span class="token comment"># base class's testRunner parameter is not useful because it means</span>        <span class="token comment"># we have to instantiate HTMLTestRunner before we know self.verbosity.</span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>testRunner <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>testRunner <span class="token operator">=</span> HTMLTestRunner<span class="token punctuation">(</span>verbosity<span class="token operator">=</span>self<span class="token punctuation">.</span>verbosity<span class="token punctuation">)</span>        unittest<span class="token punctuation">.</span>TestProgram<span class="token punctuation">.</span>runTests<span class="token punctuation">(</span>self<span class="token punctuation">)</span>main <span class="token operator">=</span> TestProgram<span class="token comment">##############################################################################</span><span class="token comment"># Executing this module from the command line</span><span class="token comment">##############################################################################</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span>module<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="yamlconfig"><a href="#yamlconfig" class="headerlink" title="yamlconfig"></a>yamlconfig</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- ecoding: utf-8 -*-</span><span class="token comment"># @ModuleName: yamlconfig</span><span class="token comment"># @Author: 杨天龙</span><span class="token comment"># @Time: 2022/11/11 21:42</span><span class="token keyword">import</span> os<span class="token keyword">import</span> yaml<span class="token keyword">class</span> <span class="token class-name">ReadYaml</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> config_path<span class="token punctuation">,</span> param<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>config_path <span class="token operator">=</span> config_path  <span class="token comment"># 配置文件路径</span>        self<span class="token punctuation">.</span>param <span class="token operator">=</span> param  <span class="token comment"># 不传默认获取所有数据</span>    <span class="token keyword">def</span> <span class="token function">get_data</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>config_path<span class="token punctuation">,</span>encoding<span class="token operator">=</span>encoding<span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            config_data <span class="token operator">=</span> yaml<span class="token punctuation">.</span>load<span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Loader<span class="token operator">=</span>yaml<span class="token punctuation">.</span>FullLoader<span class="token punctuation">)</span>            <span class="token keyword">if</span> self<span class="token punctuation">.</span>param <span class="token operator">==</span> <span class="token boolean">None</span><span class="token punctuation">:</span>                <span class="token keyword">return</span> config_data            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">return</span> config_data<span class="token punctuation">.</span>get<span class="token punctuation">(</span>self<span class="token punctuation">.</span>param<span class="token punctuation">)</span>  <span class="token comment"># 获取键为param的值</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    config_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'..'</span><span class="token punctuation">,</span> <span class="token string">'config/config_file'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    data <span class="token operator">=</span> ReadYaml<span class="token punctuation">(</span>config_path<span class="token punctuation">,</span> <span class="token string">'PACKAGE_NAME'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_data<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="README-md"><a href="#README-md" class="headerlink" title="README.md"></a>README.md</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 说明性文件，告诉团队成员框架需要的环境以及用法 #</span>小红书ui自动化测试，运行RUN_main<span class="token punctuation">.</span>py文件执行所有测试用例用到了<span class="token punctuation">[</span>uiautomator2<span class="token punctuation">]</span><span class="token punctuation">(</span>http<span class="token punctuation">:</span><span class="token operator">//</span>e<span class="token punctuation">.</span>betheme<span class="token punctuation">.</span>net<span class="token operator">/</span>article<span class="token operator">/</span>show<span class="token operator">-</span><span class="token number">80644.</span>html?action<span class="token operator">=</span>onClick<span class="token punctuation">)</span><span class="token punctuation">[</span>uiautomator2笔记<span class="token punctuation">]</span><span class="token punctuation">(</span>https<span class="token punctuation">:</span><span class="token operator">//</span>blog<span class="token punctuation">.</span>csdn<span class="token punctuation">.</span>net<span class="token operator">/</span>baidu_39372836<span class="token operator">/</span>article<span class="token operator">/</span>details<span class="token operator">/</span><span class="token number">122367121</span><span class="token punctuation">)</span><span class="token comment">## Uiautomator2原理介绍</span><span class="token number">1.</span>uiautomator2 是一个可以使用Python对Android设备进行UI自动化的库。其底层基于Google uiautomator，Google提供的uiautomator库可以获取屏幕上任意一个APP的任意一个控件属性，并对其进行任意操作，目前仅支持android平台的原生应用测试，<span class="token comment">## 安装uiautomator2</span>pip install uiautomator2pip install pillow  <span class="token comment"># 截图用</span>pip install weditor  <span class="token comment"># 查看元素</span>pip install unittestreport  <span class="token comment"># 生成测试报告，发邮件，数据驱动</span><span class="token comment">##  录制视频用到</span>pip3 install <span class="token operator">-</span>U <span class="token string">"uiautomator2[image]"</span> <span class="token operator">-</span>i https<span class="token punctuation">:</span><span class="token operator">//</span>pypi<span class="token punctuation">.</span>doubanio<span class="token punctuation">.</span>com<span class="token operator">/</span>simple<span class="token punctuation">[</span>comment<span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">&lt;&gt;</span> <span class="token punctuation">(</span>pip install opencv<span class="token operator">-</span>python<span class="token punctuation">)</span><span class="token punctuation">[</span>comment<span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">&lt;&gt;</span> <span class="token punctuation">(</span>pip install imageio<span class="token punctuation">)</span> <span class="token comment">## 初始化</span>部署相关的守护进程。电脑连接上一个手机或多个手机<span class="token punctuation">,</span> 确保adb已经添加到环境变量中，执行下面的命令会自动安装本库所需要的设备端程序：uiautomator<span class="token operator">-</span>server 、atx<span class="token operator">-</span>agent、openstf<span class="token operator">/</span>minicap、openstf<span class="token operator">/</span>minitouchpython <span class="token operator">-</span>m uiautomator2 init安装完成，设备上会多一个uiautomator的应用。配置手机设备参数：有两种方法，一种是通过WIFI，另一种是通过USB数据线将手机链接电脑。WiFi连接更方便一点，需要保持PC和手机使用的一个WIFI，查看手机连接WIFI的IP地址。<span class="token comment">## 测试</span><span class="token keyword">import</span> uiautomator2 <span class="token keyword">as</span> u2d <span class="token operator">=</span> u2<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>info<span class="token punctuation">)</span><span class="token comment">## adb命令logcat抓取日志</span><span class="token punctuation">[</span>链接地址<span class="token punctuation">]</span><span class="token punctuation">(</span>https<span class="token punctuation">:</span><span class="token operator">//</span>blog<span class="token punctuation">.</span>csdn<span class="token punctuation">.</span>net<span class="token operator">/</span>m0_64776928<span class="token operator">/</span>article<span class="token operator">/</span>details<span class="token operator">/</span><span class="token number">126005119</span><span class="token punctuation">)</span>adb shell ps <span class="token operator">-</span>A <span class="token operator">|</span> grep logcat  <span class="token comment"># 查看log进程(在windows下将grep换成findstr)</span>adb shell kill 进程号  <span class="token comment"># 杀死进程</span><span class="token comment">## 二者的区别是：spa</span>使用os<span class="token punctuation">.</span>popen来获取设备号，使用os<span class="token punctuation">.</span>system来启动macaca服务（<span class="token number">1</span>）os<span class="token punctuation">.</span>system<span class="token punctuation">(</span>cmd<span class="token punctuation">)</span>的返回值只会有<span class="token number">0</span><span class="token punctuation">(</span>成功<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2c</span>（<span class="token number">2</span>）os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span>cmd<span class="token punctuation">)</span>会把执行的cmd的输出做为值返回。popen此方法能够使用read、readline、readlines方法进行内容操做。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> APP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动化测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux里面安装Mysql</title>
      <link href="/2022/08/18/linux-li-mian-an-zhuang-mysql/"/>
      <url>/2022/08/18/linux-li-mian-an-zhuang-mysql/</url>
      
        <content type="html"><![CDATA[<p>熟悉linux<br>虚拟机、镜像iso下载地址及说明：<a href="https://blog.csdn.net/m0_61481871/article/details/123493436">https://blog.csdn.net/m0_61481871/article/details/123493436</a></p><h2 id="在linux里面安装mysql"><a href="#在linux里面安装mysql" class="headerlink" title="在linux里面安装mysql"></a>在linux里面安装mysql</h2><h4 id="1-检查linux版本"><a href="#1-检查linux版本" class="headerlink" title="1.检查linux版本"></a>1.检查linux版本</h4><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">cat /etc/centos-release<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="2-检查网络是否ping通"><a href="#2-检查网络是否ping通" class="headerlink" title="2.检查网络是否ping通"></a>2.检查网络是否ping通</h4><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">ping www.baidu.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-mysql官网找到对应得rpm包复制链接"><a href="#3-mysql官网找到对应得rpm包复制链接" class="headerlink" title="3.mysql官网找到对应得rpm包复制链接"></a>3.mysql官网找到对应得rpm包复制链接</h4><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">https://dev.mysql.com/get/mysql80-community-release-el7-6.noarch.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>说明：提示权限不够得话切到root权限。# sudo -s #输入密码进入root用户模式，此时仍在原目录下，注意不要执行su -root命令，会进入root目录;</p><h4 id="3-liunx下载rpm包"><a href="#3-liunx下载rpm包" class="headerlink" title="3.liunx下载rpm包"></a>3.liunx下载rpm包</h4><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">wget https://dev.mysql.com/get/mysql80-community-release-el7-6.noarch.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>说明：wget工具如果没有得话 下载：yum install wget</p><h4 id="4-安装rpm"><a href="#4-安装rpm" class="headerlink" title="4.安装rpm"></a>4.安装rpm</h4><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">rpm -ivh mysql80-community-release-el7-6<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="5-安装mysql"><a href="#5-安装mysql" class="headerlink" title="5.安装mysql"></a>5.安装mysql</h4><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">yum install mysql-community-server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>说明：如果提示获取 GPG 密钥失败：就修改：</p><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">vim /etc/yum.repos.d/mysql-community.repo <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>把gpgcheck=1改为gpgcheck=0<br>shift+:wq!保存退出</p><h4 id="6-设置mysql"><a href="#6-设置mysql" class="headerlink" title="6.设置mysql"></a>6.设置mysql</h4><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">mysql_secure_installation<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>说明：报错不急 先启动mysql如下第7不</p><h4 id="7-启动mysql服务"><a href="#7-启动mysql服务" class="headerlink" title="7.启动mysql服务"></a>7.启动mysql服务</h4><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">service mysqld restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="8-查看sql自动生成得初始密码"><a href="#8-查看sql自动生成得初始密码" class="headerlink" title="8.查看sql自动生成得初始密码"></a>8.查看sql自动生成得初始密码</h4><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">grep 'passwor' /var/log/mysqld.log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="9-修改密码"><a href="#9-修改密码" class="headerlink" title="9.修改密码"></a>9.修改密码</h4><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">alter user 'root'@'localhost' identified by '532689.Aawer';<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="10-退出"><a href="#10-退出" class="headerlink" title="10.退出"></a>10.退出</h4><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">exit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="11-重新进"><a href="#11-重新进" class="headerlink" title="11.重新进"></a>11.重新进</h4><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">mysql -uroot -pmysql -h 需要连接得ip地址 -P 端口号一般是3306 -u 用户名 -p 密码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="12-查看信息"><a href="#12-查看信息" class="headerlink" title="12.查看信息"></a>12.查看信息</h4><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">help 'create database';<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql questions</title>
      <link href="/2022/08/01/sql-questions/"/>
      <url>/2022/08/01/sql-questions/</url>
      
        <content type="html"><![CDATA[<p>sql常用试题</p><h2 id="一、试题一"><a href="#一、试题一" class="headerlink" title="一、试题一"></a>一、试题一</h2><p>现有关系数据库如下：<br>数据库名：我班同学数据库<br>同学表(学号 char(6), 姓名, 性别, 年龄, 民族, 身份证, 宿舍号)<br>宿舍表(宿舍号 char(6), 宿舍电话)<br>用SQL语言实现下列功能的sql语句代码：</p><h3 id="1-创建数据库-我班同学数据库-代码"><a href="#1-创建数据库-我班同学数据库-代码" class="headerlink" title="1.创建数据库[我班同学数据库]代码"></a>1.创建数据库[我班同学数据库]代码</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">databases</span> 我班同学数据库<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-创建数据表-宿舍表-代码"><a href="#2-创建数据表-宿舍表-代码" class="headerlink" title="2.创建数据表[宿舍表]代码"></a>2.创建数据表[宿舍表]代码</h3><p>宿舍表(宿舍号 char(6), 宿舍电话)<br>要求使用：主键(宿舍号)、宿舍电话：以633开头的7位电话号码</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> 宿舍表<span class="token punctuation">(</span>宿舍号 <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>宿舍电话 <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span> <span class="token keyword">check</span><span class="token punctuation">(</span>宿舍电话 <span class="token operator">like</span> <span class="token string">'633[0-9][0-9][0-9][0-9]'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-创建数据表-同学表-代码"><a href="#3-创建数据表-同学表-代码" class="headerlink" title="3.创建数据表[同学表]代码"></a>3.创建数据表[同学表]代码</h3><p>同学表(学号 char(6), 姓名, 性别, 年龄, 民族, 身份证, 宿舍号)<br>要求使用：主键(学号)、外键(宿舍号)、默认(民族)、非空(民族、性别、年龄)、唯一(身份证号)、检查(性别)</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> 同学表<span class="token punctuation">(</span>学号 <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>姓名 <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>性别 <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>年龄 <span class="token keyword">int</span><span class="token punctuation">,</span>民族 <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">'汉族'</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>身份证 <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span> <span class="token keyword">unique</span><span class="token punctuation">,</span>宿舍号 <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token keyword">references</span> 宿舍表<span class="token punctuation">(</span>宿舍号<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-将下列宿舍信息添加到宿舍表的代码"><a href="#4-将下列宿舍信息添加到宿舍表的代码" class="headerlink" title="4.将下列宿舍信息添加到宿舍表的代码"></a>4.将下列宿舍信息添加到宿舍表的代码</h3><p>宿舍号 宿舍电话<br>101 6331157<br>102 6331777<br>修改宿舍号为101的宿舍电话：6331158<br>删除宿舍号为102的宿舍信息</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> 宿舍表 <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'101'</span><span class="token punctuation">,</span><span class="token string">'6331157'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> 宿舍表 <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'102'</span><span class="token punctuation">,</span><span class="token string">'6331777'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">update</span> 宿舍表 <span class="token keyword">set</span> 宿舍电话<span class="token operator">=</span><span class="token string">'6331158'</span> <span class="token keyword">where</span> 宿舍号<span class="token operator">=</span><span class="token string">'101'</span><span class="token punctuation">;</span><span class="token keyword">delete</span> <span class="token keyword">from</span> 宿舍表 <span class="token keyword">where</span> 宿舍号<span class="token operator">=</span><span class="token string">'102'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-创建视图-同学表视图-代码"><a href="#5-创建视图-同学表视图-代码" class="headerlink" title="5.创建视图[同学表视图]代码"></a>5.创建视图[同学表视图]代码</h3><p>同学表视图(学号,姓名,性别,年龄,民族,身份证,宿舍号,宿舍电话)</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">view</span> 同学表视图 <span class="token keyword">as</span> <span class="token keyword">select</span> 学号<span class="token punctuation">,</span>姓名<span class="token punctuation">,</span>性别<span class="token punctuation">,</span>年龄<span class="token punctuation">,</span>民族<span class="token punctuation">,</span>身份证<span class="token punctuation">,</span>同学表<span class="token punctuation">.</span>宿舍号<span class="token punctuation">,</span>宿舍电话 <span class="token keyword">from</span> 同学表<span class="token punctuation">,</span>宿舍表 <span class="token keyword">where</span> 同学表<span class="token punctuation">.</span>宿舍号<span class="token operator">=</span>宿舍表<span class="token punctuation">.</span>宿舍号<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-从同学表视图中查询性张的女同学的姓名、性别、宿舍电话"><a href="#6-从同学表视图中查询性张的女同学的姓名、性别、宿舍电话" class="headerlink" title="6.从同学表视图中查询性张的女同学的姓名、性别、宿舍电话"></a>6.从同学表视图中查询性张的女同学的姓名、性别、宿舍电话</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> 姓名<span class="token punctuation">,</span>性别<span class="token punctuation">,</span>宿舍电话 <span class="token keyword">from</span> 同学表视图 <span class="token keyword">where</span> 姓名 <span class="token operator">like</span> <span class="token string">'张%'</span> <span class="token operator">and</span> 性别<span class="token operator">=</span><span class="token string">'女'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="7-从同学表中查询女同学的最大年龄、最小年龄、平均年龄"><a href="#7-从同学表中查询女同学的最大年龄、最小年龄、平均年龄" class="headerlink" title="7.从同学表中查询女同学的最大年龄、最小年龄、平均年龄"></a>7.从同学表中查询女同学的最大年龄、最小年龄、平均年龄</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">max</span><span class="token punctuation">(</span>年龄<span class="token punctuation">)</span> <span class="token keyword">as</span> 最大年龄<span class="token punctuation">,</span><span class="token function">min</span><span class="token punctuation">(</span>年龄<span class="token punctuation">)</span> <span class="token keyword">as</span> 最小年龄<span class="token punctuation">,</span><span class="token function">avg</span><span class="token punctuation">(</span>年龄<span class="token punctuation">)</span> <span class="token keyword">as</span> 平均年龄 <span class="token keyword">from</span> 同学表 <span class="token keyword">where</span> 性别<span class="token operator">=</span><span class="token string">'女'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>说明as可以省略</p><h3 id="8-创建带参数的存储过程-某宿舍同学-：姓名-性别-宿舍电话"><a href="#8-创建带参数的存储过程-某宿舍同学-：姓名-性别-宿舍电话" class="headerlink" title="8.创建带参数的存储过程[某宿舍同学]：姓名,性别,宿舍电话"></a>8.创建带参数的存储过程[某宿舍同学]：姓名,性别,宿舍电话</h3><p>执行此过程，查询’101’宿舍的情况</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">procedure</span> 某宿舍同学 @宿舍号 <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token keyword">select</span> 姓名<span class="token punctuation">,</span>性别<span class="token punctuation">,</span>宿舍电话 <span class="token keyword">from</span> 同学表视图 <span class="token keyword">where</span> 宿舍号<span class="token operator">=</span>@宿舍号 go <span class="token keyword">execute</span> 某宿舍同学 <span class="token string">'101'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="9-设置-SQL身份验证的用户账户："><a href="#9-设置-SQL身份验证的用户账户：" class="headerlink" title="9.设置-SQL身份验证的用户账户："></a>9.设置-SQL身份验证的用户账户：</h3><p>登录名：U班主任，密码：888<br>数据库用户名：U读者，权限：可查询本数据库中所有表、视图、内嵌表值函数的数据、执行所有的存储过程。<br>请写出账户、权限设置的T_SQL脚本</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">exec</span> sp_addlogin <span class="token string">'U班主任'</span><span class="token punctuation">,</span><span class="token string">'888'</span><span class="token punctuation">,</span><span class="token string">'我班同学数据库'</span><span class="token punctuation">;</span><span class="token keyword">exec</span> sp_grantdbaccess <span class="token string">'U班主任'</span><span class="token punctuation">,</span><span class="token string">'读者'</span><span class="token punctuation">;</span>exce sp_addrolemember <span class="token string">'db_datareader'</span><span class="token punctuation">,</span><span class="token string">'U读者'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="二、试题2"><a href="#二、试题2" class="headerlink" title="二、试题2"></a>二、试题2</h2><p>现有关系数据库如下：<br>数据库名：学生成绩数据库<br>学生信息表(学号 char(6), 姓名, 性别, 民族, 身份证)<br>课程信息表(课号 char(6), 名称)<br>成绩信息表(ID,学号，课号,分数)<br>用SQL语言实现下列功能的sql语句代码：</p><h3 id="1-创建数据库-学生成绩数据库-代码"><a href="#1-创建数据库-学生成绩数据库-代码" class="headerlink" title="1.创建数据库[学生成绩数据库]代码"></a>1.创建数据库[学生成绩数据库]代码</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">database</span> 学生成绩数据库<span class="token punctuation">;</span><span class="token keyword">use</span> 学生成绩数据库<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="2-创建数据表-学生信息表-代码"><a href="#2-创建数据表-学生信息表-代码" class="headerlink" title="2.创建数据表[学生信息表]代码"></a>2.创建数据表[学生信息表]代码</h3><p>学生信息表(学号 char(6), 姓名, 性别, 民族, 身份证)<br>要求使用：主键(学号)、默认(民族)、非空(民族、姓名)、唯一(身份证)、检查(性别)</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> 学生信息表<span class="token punctuation">(</span>学号 <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>姓名 <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>性别 <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">check</span><span class="token punctuation">(</span>性别 <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'女'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>民族 <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">'汉族'</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>身份证 <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span> <span class="token keyword">unique</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-创建数据表-课程信息表-代码"><a href="#3-创建数据表-课程信息表-代码" class="headerlink" title="3.创建数据表[课程信息表]代码"></a>3.创建数据表[课程信息表]代码</h3><p>课程信息表(课号 char(6),名称)<br>要求使用：主键(课号)、非空(名称)</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> 课程信息表<span class="token punctuation">(</span>课号 <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>名称 <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-创建数据表-成绩信息表-代码"><a href="#4-创建数据表-成绩信息表-代码" class="headerlink" title="4.创建数据表[成绩信息表]代码"></a>4.创建数据表[成绩信息表]代码</h3><p>成绩信息表(ID,学号，课号,分数)<br>要求使用：外键(学号、课号)、检查(分数),自动编号(ID)</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> 成绩信息表<span class="token punctuation">(</span>ID <span class="token keyword">int</span> <span class="token keyword">identity</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>学号 <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token keyword">references</span> 学生信息表<span class="token punctuation">(</span>学号<span class="token punctuation">)</span><span class="token punctuation">,</span>课号 <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token keyword">references</span> 课程信息表<span class="token punctuation">(</span>课号<span class="token punctuation">)</span><span class="token punctuation">,</span>分数 <span class="token keyword">int</span> <span class="token keyword">check</span><span class="token punctuation">(</span>分数 <span class="token operator">between</span> <span class="token number">0</span> <span class="token operator">and</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>说明：<br>1.identity(1,1)该列自动增长，由1开始每次增加是1。<br>2.sql中integer的意思为“整数、整型数”，代表整数类型，包含负整数、零和正整数，允许介于“-32,768”到“32,767”之间的数字；可用于指定数据表中某一字段的数据类型，例“create table test (id integer);”。<br>3.CHECK 约束用于限制列中的值的范围。<br>如果对单个列定义 CHECK 约束，那么该列只允许特定的值。<br>如果对一个表定义 CHECK 约束，那么此约束会基于行中其他列的值在特定的列中对值进行限制。<br>4.BETWEEN 操作符选取介于两个值之间的数据范围内的值</p><h3 id="5-蒋下列课程信息添加到课程信息表代码"><a href="#5-蒋下列课程信息添加到课程信息表代码" class="headerlink" title="5.蒋下列课程信息添加到课程信息表代码"></a>5.蒋下列课程信息添加到课程信息表代码</h3><p>课程名称<br>100101 西班牙语<br>100102 大学英语<br>修改课号为100102的课号名称：专业英语<br>删除课号为100101的课程信息</p><h3 id="6-创建视图-成绩信息表视图-的代码"><a href="#6-创建视图-成绩信息表视图-的代码" class="headerlink" title="6.创建视图[成绩信息表视图]的代码"></a>6.创建视图[成绩信息表视图]的代码</h3><p>成绩信息表视图(学号,姓名,课号,课程名称,分数)</p><h3 id="7-从学生信息表中查询性刘的女同学的情况：姓名、性别、民族"><a href="#7-从学生信息表中查询性刘的女同学的情况：姓名、性别、民族" class="headerlink" title="7.从学生信息表中查询性刘的女同学的情况：姓名、性别、民族"></a>7.从学生信息表中查询性刘的女同学的情况：姓名、性别、民族</h3><h3 id="8-查询一门或一门以上课程成绩小于60分的所有学生信息，包括学号、姓名"><a href="#8-查询一门或一门以上课程成绩小于60分的所有学生信息，包括学号、姓名" class="headerlink" title="8.查询一门或一门以上课程成绩小于60分的所有学生信息，包括学号、姓名"></a>8.查询一门或一门以上课程成绩小于60分的所有学生信息，包括学号、姓名</h3><h3 id="9-创建带参数的存储过程-某门课程高低均分-、执行该过程的代码"><a href="#9-创建带参数的存储过程-某门课程高低均分-、执行该过程的代码" class="headerlink" title="9.创建带参数的存储过程[某门课程高低均分]、执行该过程的代码"></a>9.创建带参数的存储过程[某门课程高低均分]、执行该过程的代码</h3><p>存储过程功能、查询某门课程的最高分、最低分、平均分<br>执行改过程，查询所有修‘专业英语’这门学生的最高分、最低分、平均分</p><h3 id="10-设置一SQL身份验证的用户账户"><a href="#10-设置一SQL身份验证的用户账户" class="headerlink" title="10.设置一SQL身份验证的用户账户"></a>10.设置一SQL身份验证的用户账户</h3><p>登入名：U院长，密码：888，<br>数据库用户名：U读者<br>权限：可查询本数据库中所有表、视图、内嵌表值函数的数据、执行所有的存储过程。<br>请写出账户、权限设置的T_SQL脚本</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python App</title>
      <link href="/2022/05/10/pythonapp/"/>
      <url>/2022/05/10/pythonapp/</url>
      
        <content type="html"><![CDATA[<p>python编写app自动化脚本</p><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>python 3.8<br>uiautomator2<br>unittestreport</p><h2 id="使用文档"><a href="#使用文档" class="headerlink" title="使用文档"></a>使用文档</h2><p>unittestreport 官方使用文档：<a href="https://unittestreport.readthedocs.io/en/latest/">https://unittestreport.readthedocs.io/en/latest/</a><br>unittestreport资料网址：<a href="https://www.cnblogs.com/nmb-musen/p/13596241.html">https://www.cnblogs.com/nmb-musen/p/13596241.html</a><br>断言方法：<a href="https://www.cnblogs.com/syw20170419/p/11015962.html">https://www.cnblogs.com/syw20170419/p/11015962.html</a><br>fiddler抓包设置：<a href="https://www.cnblogs.com/nmb-musen/p/10621430.html">https://www.cnblogs.com/nmb-musen/p/10621430.html</a></p><h2 id="开始编写代码"><a href="#开始编写代码" class="headerlink" title="开始编写代码"></a>开始编写代码</h2><pre class="line-numbers language-py" data-language="py"><code class="language-py"># coding: utf-8#import unittestimport osimport timeimport uiautomator2 as u2from unittestreport import TestRunner, rerunclass MyTestCase(unittest.TestCase):  @classmethod  def setUpClass(self):    print("整个测试用例的前置条件")    self.devicesSerial = os.popen('adb devices').read().split()[-2]  # 获取设备序列号    print(self.devicesSerial)    self.d = u2.connect(self.devicesSerial)  # 连接序列号    self.d.implicitly_wait(10)  @classmethod  def tearDownClass(self):    print("整个测试用例的后置条件")  def setUp(self):    print("每条用例的前置条件")    self.d.app_stop_all()  def tearDown(self):    print("每条用例的后置条件")  # @rerun(count=2, interval=2)  # 装饰器测试用例运行失败重运行4，每次间隔2秒  def test_something(self):    """测试软件商店"""    self.d(text="软件商店").click()    self.d(text="我的").click()    a = self.d(text="首页").exists(timeout=5)    print(a)    self.assertIsNotNone(a)    try:      # assert expected in result or result in expected      # self.assertEqual(b, a)      self.assertTrue(a)    except Exception as e:      now = time.time()  # 现在的时间      now_time = time.strftime("%Y%m%d_%H%M%S", time.localtime(now))  # 当前时间      error_screenshot_name = f'错误截图{now_time}.png'      self.d.screenshot(f"../images/{error_screenshot_name}")  # 错误截图保存路径      msg = f'&lt;img src="../images/{error_screenshot_name}" width="400" height="800" title="{error_screenshot_name}" alt="错误截图"/&gt;'      print(msg)      raise e    else:      print("执行成功")if __name__ == '__main__':  #  unittest.main()  suite = unittest.TestSuite()  # 实例化一个测试套件  suite.addTest(unittest.makeSuite(MyTestCase))  # 加载MyTestCase里面所有带test*的测试用例  now = time.time()  # 现在的时间  now_time = time.strftime("%Y%m%d_%H%M%S", time.localtime(now))  # 当前时间  report_name = f"测试报告{now_time}.html"  # 报告名后面加当前时间  report_path = os.path.join(os.path.abspath(os.path.dirname(os.getcwd())), "report")  print(report_path)  runner = TestRunner(suite,                      filename=report_name,                      report_dir=report_path,                      title="报告名",                      tester="ytl",                      desc="ytl执行的测试报告",                      templates=1                      )  # runner.run()  runner.rerun_run(count=0, interval=2)  # count：用来指定用例失败重运行的次数 interval：指定每次重运行的时间间隔  # 邮件发送测试报告  '''  runner.send_email(host="smtp.qq.com",  # smtp-mail.outlook.com                  port=465,  # 587                  user="1766842398@qq.com",                  password="robtftuxckfvdcci",                  to_addrs=["tlyang@qq.com", "1766842398@qq.com"])  '''  """  参数介绍  host： smtp服务器地址  port：端口  user：邮箱账号  password：smtp服务授权码  to_addrs：收件人邮箱地址（一个收件人传字符串，多个收件人传列表）  """<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 自动化测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动化测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django的模板</title>
      <link href="/2021/10/12/django-de-mo-ban/"/>
      <url>/2021/10/12/django-de-mo-ban/</url>
      
        <content type="html"><![CDATA[<h1 id="Django的模板介绍"><a href="#Django的模板介绍" class="headerlink" title="Django的模板介绍"></a>Django的模板介绍</h1><ul>    <li>作为Web框架，Django需要一种很便利的方法来动态生成HTML。常见做法是使用模板</li>    <li>模板包括所需HTML输出的静态部分，以及一些特殊的语法，描述如何将动态内容插入</li>    <li>模板输出就是输出数据，输出方法：直接输出，过滤输出、判断输出，循环输出</li></ul><h2 id="Django框架中如何使用模板："><a href="#Django框架中如何使用模板：" class="headerlink" title="Django框架中如何使用模板："></a>Django框架中如何使用模板：</h2><p>1.在项目的settings.py配置文件中配置模板目录</p><pre class="line-numbers language-settings.py" data-language="settings.py"><code class="language-settings.py">'DIRS': [os.path.join(BASE_DIR, "templates")],<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2.在应用的视图文件加载模板，并放置要输出的数据</p><pre class="line-numbers language-views.py" data-language="views.py"><code class="language-views.py">return render(request,"目录/模板文件.html",{放置字典数据})<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3.在模板文件中使用变量、标签何过滤器等输出信息</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">{{ 变量 }} {% 标签 %} {{ 变量|过滤器 }}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="模板语法"><a href="#模板语法" class="headerlink" title="模板语法"></a>模板语法</h2><h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><p>for标签</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">{% for i in data %}    循环逻辑{% endfor %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>if 标签</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">{% if ... %}    逻辑1{% elif ... %}    逻辑2{% else ... %}    逻辑3{% endif %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>comment标签</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">{% comment %}    多行注释{% endcomment %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>include: 加载模板并以标签内的参数渲染</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">{ % include “目录/模板名.html” % }<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>url: 反向解析</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">{ % url 'name' p1 p2 % }<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>csrf_token: 这个标签用于跨站请求伪造保护</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">{% csrf_token %}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h3><p>语法：使用管道符“|”来应用过滤器<br>通过使用过滤器来改变变量的计算结果</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">{{ 变量|过滤器 }}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>例如: 将变量name的值变为小写输出</p><pre class="line-numbers language-none"><code class="language-none">{{ name|lower }}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>关闭HTML自动转义</p><pre class="line-numbers language-none"><code class="language-none">{{ data|safe }}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以在if标签中使用过滤器结合运算符</p><pre class="line-numbers language-none"><code class="language-none">if listl|length &gt; 1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>过滤器能够被“串联”，构成过滤器链</p><pre class="line-numbers language-none"><code class="language-none">name|lower|upper<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>过滤器可以传递参数，参数使用引号包起来</p><pre class="line-numbers language-none"><code class="language-none">list|join:":"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>default: 如果一个变量没有被提供，或者值为false或空，则使用默认值，否则使用变量的值</p><pre class="line-numbers language-none"><code class="language-none">value|default:"什么也没有"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>date: 根据给定格式对一个date变量格式化,输出年月日时分秒，w：第几周</p><pre class="line-numbers language-none"><code class="language-none">value|date:'Y-m-d H:i:s w'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="模板注释：查看源代码看不到的"><a href="#模板注释：查看源代码看不到的" class="headerlink" title="模板注释：查看源代码看不到的"></a>模板注释：查看源代码看不到的</h2><p>单行注释</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">{# 注释 #}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>多行注释</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">{% comment %}    多行注释{% endcomment %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="模板运算"><a href="#模板运算" class="headerlink" title="模板运算"></a>模板运算</h2><p>加</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">{{ value|add:10 }}note:value=5,则结果返回15<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>减</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">{{ value|add:-10 }}note:value=5,则结果返回-5,加一个负数就是减法了<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>乘</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">{% widthratio 5 1 100 %}note:等同于：(5/1)*100, 结果返回500widthratio需要三个参数，它会使用参数1/参数2*参数3的方式进行运算，进行乘法运算，使[参数2]=1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>除</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">{% widthratio 5 100 1 %}note:等同于：(5/100)*1，测结果返回0.05，和乘法一样是[参数3]=1就是除法 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="模板继承"><a href="#模板继承" class="headerlink" title="模板继承"></a>模板继承</h2><p>模板继承可以减少页面内容的重复定义，实现页面内容的重用<br>典型应用：网站的头部、尾部是一样的，这些内容可以定义在父模板中，子模版不需要重复定义<br>block标签：在父模板中预留区域，在子模板中填充<br>extends继承：继承，写在模板文件的第一行<br>定义父模块parent_template.html</p><pre class="line-numbers language-parent_template.html" data-language="parent_template.html"><code class="language-parent_template.html">{% block block_name %}{% endblock %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>定义子模块sub_template.html</p><pre class="line-numbers language-sub_template.html" data-language="sub_template.html"><code class="language-sub_template.html">{% extends 'base.html' %}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在子模块中使用block填充预留区域<br>例：<br>父模板</p><pre class="line-numbers language-parent_template.html" data-language="parent_template.html"><code class="language-parent_template.html">&lt;!DOCTYPE html&gt;&lt;html lang="zh-hans"&gt;&lt;head&gt;    &lt;meta charset="UTF-8"&gt;    &lt;title&gt;{% block title1 %}父模板标题{% endblock %}&lt;/title&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no"/&gt;&lt;/head&gt;&lt;body&gt;&lt;h2&gt;{% block title2 %}父模板标题{% endblock %}&lt;/h2&gt;&lt;p&gt;{% block mycontent %}此处预留内容区域{% endblock %}&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>子模版继承父模板</p><pre class="line-numbers language-sub_template.html" data-language="sub_template.html"><code class="language-sub_template.html">{% extends "myapp/inherit/parent_template.html"%}{% block title2 %}Django的模板继承实例{% endblock %}{% block mycontent %}    模板继承的应用场景&lt;br/&gt;    通常一个网站的某几个页面都有一些公共的布局，如导航栏、侧边栏和页脚的一些地方，如果将这些公共的部分抽离出来，放在一个单独的 html 页面中用于给其他页面继承，就称它为父版，而继承父版的页面就称为子版，同一个父版可以被多个子版继承。&lt;br/&gt;    子版中可以继承父版的内容和属性，这样可以使得页面更加简洁，而且在子版中可以修改母版中的部分内容。&lt;br/&gt;{% endblock %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="文件上传操作"><a href="#文件上传操作" class="headerlink" title="文件上传操作"></a>文件上传操作</h2><p>1.添加form表单模板</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh-hans<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>文件上次<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width,initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>文件上传实例<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{% url <span class="token punctuation">'</span>doUpload<span class="token punctuation">'</span> %}<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token attr-name">enctype</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>multipart/form-data<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        {% csrf_token %}        标题名称：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>        上传文件：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pic<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>上传<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.在urls,py文件里添加路由路径</p><pre class="line-numbers language-urls.py" data-language="urls.py"><code class="language-urls.py">urlpatterns = [    path('', views.index, name="index"),  # 首页    path('doUpload/', views.do_upload, name="doUpload"),  # 执行文件上传处理]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>3.在视图里面自定义函数</p><pre class="line-numbers language-views.py" data-language="views.py"><code class="language-views.py">def do_upload(request):    myFile = request.FILES.get("pic", None)    print(myFile)    print(request.POST.get("title"))    if not myFile:        return HttpResponse("没有上传的文件信息")    fileName = str(time.time())+'.'+myFile.name.split('.').pop()    destination = open(f"./static/pics/{fileName}", "wb+")  # w读取b二进制，图片音频都属于二进制    for chunk in myFile.chunks():  # 分块读取上传文件内容并写入目标文件        destination.write(chunk)    destination.close()  # 打开写入之后我们要关闭，用.close()这个方法关闭写入的文件    # # 执行图片缩放    # im = Image.open("./static/pics/"+fileName)    # # 缩放到75*75(缩放后的宽高比例不变)    # im.thumbnail((75, 75))    # # 把缩放后的图像用jpeg格式保存    # im.save("./static/pics/s_"+fileName, None)    return HttpResponse("上传的文件："+fileName)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="分页操作"><a href="#分页操作" class="headerlink" title="分页操作"></a>分页操作</h2><style type="text/css">    p{text-indent:2em;}    .time1{        color: red;    }</style><ul>    <li>Django提供了一些实现管理数据分页，这些类位于django/core/paginator.py中</li>    <li><span class="time1">Paginator对象</span>        <p><span class="time1" style="color: red;">Paginator(列表,int)</span>：返回分页对象，参数为列表数据，每页数据的条数</p></li>    <li>属性        <p><sapn class="time1">count</sapn>: 对象总数</p>        <p><sapn class="time1">num_pages</sapn>: 页面总数</p>        <p><sapn class="time1">page_range</sapn>: 页码列表，从1开始，例如[1,2,3,4]</p></li>    <li>方法        <p><sapn class="time1">page(num)</sapn>: 下标以1开始，如果提供的页面不存在，抛出InvalidPage异常</p></li></ul><h3 id="导入模块-Paginator"><a href="#导入模块-Paginator" class="headerlink" title="导入模块 Paginator"></a>导入模块 Paginator</h3><p>&nbsp; 空格</p><pre class="line-numbers language-views.py" data-language="views.py"><code class="language-views.py">from django.core.paginator import Paginator<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyDjangoServer</title>
      <link href="/2021/09/13/pydjangoserver/"/>
      <url>/2021/09/13/pydjangoserver/</url>
      
        <content type="html"><![CDATA[<h1 id="这是一个使用python语言，Django框架编写的一个web服务"><a href="#这是一个使用python语言，Django框架编写的一个web服务" class="headerlink" title="这是一个使用python语言，Django框架编写的一个web服务"></a>这是一个使用python语言，Django框架编写的一个web服务</h1><h2 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h2><ul type="circle">    <li>python：3.8.2</li>    <li>django：3.2.7</li>    <li>mysqlclient：2.0.3</li></ul>查看pip已安装的插件：pip list<h2 id="Django安装"><a href="#Django安装" class="headerlink" title="Django安装"></a>Django安装</h2><p>django安装命令：pip install django==3.2.*<br>默认会安装：Django==3.2.7、sqlparse==0.4.1 和 pytz==2021.1<br>检查当前是否安装Django及版本：python -m django –version</p><h2 id="开始快速创建项目及app应用"><a href="#开始快速创建项目及app应用" class="headerlink" title="开始快速创建项目及app应用"></a>开始快速创建项目及app应用</h2><h3 id="一、创建项目"><a href="#一、创建项目" class="headerlink" title="一、创建项目"></a>一、创建项目</h3><p>cmd终端输入命令：django-admin startproject myweb</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">django-admin startproject myweb<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>进入你要做项目的目录输入命令，当然myweb是项目名，可自定义<br>查看目录：dir</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">dir<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>会在当前目录创建myweb目录，目录里面也有一个同名的目录，你可以把他当成外面的目录当成项目容器，里面的目录当成项目，还有一些项目文件。<br>文件介绍：</p><ul type="circle">    <li>manage.py：一个命令行实用程序，可以让你以各种方式与此Django项目进行交互</li>    <li>manage.py：一个命令行实用程序，可以让你以各种方式与此Django项目进行交互</li>    <li>init.py：一个空文件，告示你Python这个目录应该被任务是一个Python包</li>    <li>settings.py：这个是Django项目的设置/配置，Django设置会告诉你所有关于设置的工作原理</li>    <li>urls.py：这个是Django项目的URL声明，你的Django动态网站的"目录"</li>    <li>wsgi.py：WSGI兼容的Web服务器为你的项目提供服务的入口点，做服务搭建的时候涉及</li></ul>在cd进入myweb项目目录输入命令启动服务启动服务：python manage.py runserver<pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">python manage.py runserver<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>当然这个只是启动本地服务，<br>启动远程服务：python manage.py runserver 本地ip地址:端口<br>如：python manage.py runserver 192.168.43.136:8002</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">python manage.py runserver 192.168.43.136:8002<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里会报：无效的 HTTP_HOST 标头：“192.168.43.136:8002”。您可能需要将“192.168.43.136”添加到 ALLOWED_HOSTS。<br>所以要在settings.py 文件里面把地址添加进去或者直接添加*表示所有ip地址都可以访问<br>如：</p><pre class="line-numbers language-settings.py" data-language="settings.py"><code class="language-settings.py">ALLOWED_HOSTS = ["192.168.43.136"] 或 ALLOWED_HOSTS = ["*"]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样在同一网络下别人也可以访问你的服务了</p><h3 id="二、创建app：python-manage-py-startapp-myapp"><a href="#二、创建app：python-manage-py-startapp-myapp" class="headerlink" title="二、创建app：python manage.py startapp myapp"></a>二、创建app：python manage.py startapp myapp</h3><p>cd到myweb即项目目录执行命令</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">python manage.py startapp myapp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>会在当前目录下创建一个myapp目录即app即项目应用<br>在views.py函数里面添加试图函数：<br>如：</p><pre class="line-numbers language-views.py" data-language="views.py"><code class="language-views.py">from django.shortcuts import renderfrom django.http import HttpResponsedef index(request):    return HttpResponse("Hello World!")<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在当前目录创建urls.py文件,并设置路由<br>如：</p><pre class="line-numbers language-myapp/urls.py" data-language="myapp/urls.py"><code class="language-myapp/urls.py">from django.urls import pathfrom . import viewsurlpatterns = [    path('', views.index, name='index'),]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>再在主路由myweb/urls.py文件配置一下路由：<br>如：</p><pre class="line-numbers language-myweb/urls.py" data-language="myweb/urls.py"><code class="language-myweb/urls.py">from django.contrib import adminfrom django.urls import path, includeurlpatterns = [    path('admin/', admin.site.urls),    path('myapp/', include('myapp.urls'))]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在运行服务查看就可以在网页显示Hello World<br>也可以在myapp项目应用views.py再创建一个函数来增加另外一个网页显示<br>如：</p><pre class="line-numbers language-myapp/viewa.py" data-language="myapp/viewa.py"><code class="language-myapp/viewa.py">def app02(request):    return HttpResponse("app02")<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>再在项目路由myapp/urls.py设置网页路径<br>如：</p><pre class="line-numbers language-myapp/urls.py" data-language="myapp/urls.py"><code class="language-myapp/urls.py">urlpatterns = [    path('', views.index, name='index'),    path('app02', views.app02, name='app02'),]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>在下面多加一个path路径’app02’表示网页地址路径，views.app02表示展示调用项目应用里面的函数，name=’app02’表示给该路径取个名字自己定义，可以用来反向获取URL</p><h3 id="三、项目的模型"><a href="#三、项目的模型" class="headerlink" title="三、项目的模型"></a>三、项目的模型</h3><p>1、连接数据库<br>在settings.py文件里面配置一下我们需要连接的数据库<br>如：</p><pre class="line-numbers language-settings.py" data-language="settings.py"><code class="language-settings.py">DATABASES = {    'default': {        'ENGINE': 'django.db.backends.sqlite3',        'NAME': BASE_DIR / 'db.sqlite3',    }}把这个替换成DATABASES = {    'default': {        'ENGINE': 'django.db.backends.mysql',        'NAME': 'mydemo',        'USER': 'root',        'PASSWORD' 'ytl',        'HOST': 'localhost',        'PORT': '3306',    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2、下载mysqlclient，执行mysql需要用到，一个加载模块</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">pip install mysqlclient<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>把之前的pymysql改成mysqlclient<br>3、在models.py文件里面创建数据类<br>如：</p><pre class="line-numbers language-models.py" data-language="models.py"><code class="language-models.py">class Stu(models.Model):    '''自定义Stu表对应的Model类'''    # 定义属性：默认主键自增id字段可不写    id = models.AutoField(primary_key=True)    name = models.CharField('姓名', max_length=16)    age = models.SmallIntegerField('年龄', )    sex = models.CharField('性别', max_length=1)    classid = models.CharField('班级', max_length=8, blank=True)  # blank=True 表示可以为空 默认不能为空    # 定义默认输出格式    def __str__(self):        return "%d:%s:%d:%s:%s:"%(self.id,self.name,self.age,seek.sex,self.classid)    # 自定义对应的表明，默认表名：myapp_stu        class Meta:        db_table="stu"        verbose_name = '杨天龙样机表'  # 自定义表名        verbose_name_plural = '杨天龙样机管理'  # 自定义库名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4、在settings.p配置文件里面把myapp应用添加进去<br>如：</p><pre class="line-numbers language-settings.py" data-language="settings.py"><code class="language-settings.py">INSTALLED_APPS = [    'django.contrib.admin',    'django.contrib.auth',    'django.contrib.contenttypes',    'django.contrib.sessions',    'django.contrib.messages',    'django.contrib.staticfiles',    'myapp',]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、启动网站admin管理"><a href="#四、启动网站admin管理" class="headerlink" title="四、启动网站admin管理"></a>四、启动网站admin管理</h3><p>先介绍一下在settings.py文件里面有添加自己的app</p><pre class="line-numbers language-myweb/settings.py" data-language="myweb/settings.py"><code class="language-myweb/settings.py">INSTALLED_APPS = [    'django.contrib.admin', # 管理网站    'django.contrib.auth', # 认证系统    'django.contrib.contenttypes',  # 内容类型的框架    'django.contrib.sessions',  # 会话框架    'django.contrib.messages',  # 消息框架    'django.contrib.staticfiles',  # 管理静态文件的框架    'myapp',  # 自己增加的app]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>利用models.py文件生成数据库表之前，是需要手动创建数据库<br>create database mysite<br>创建完mysite库之后，我们在终端执行如下命令，他们的作用就是将models文件生成一个迁移文件<br>python manage.py makemigrations<br>迁移文件生成完毕，执行<br>python manage.py migrate<br>会将迁移文件的内容作用到数据库中，生成表或者修改字段熟悉</p><h4 id="1、数据迁移：python-manage-py-migrate"><a href="#1、数据迁移：python-manage-py-migrate" class="headerlink" title="1、数据迁移：python manage.py migrate"></a>1、数据迁移：python manage.py migrate</h4><p>出现这个说明成功：</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">Operations to perform:      Apply all migrations: admin, auth, contenttypes, sessions    Running migrations:      Applying contenttypes.0001_initial... OK      Applying auth.0001_initial... OK      Applying admin.0001_initial... OK      Applying admin.0002_logentry_remove_auto_add... OK      Applying admin.0003_logentry_add_action_flag_choices... OK      Applying contenttypes.0002_remove_content_type_name... OK      Applying auth.0002_alter_permission_name_max_length... OK      Applying auth.0003_alter_user_email_max_length... OK      Applying auth.0004_alter_user_username_opts... OK      Applying auth.0005_alter_user_last_login_null... OK      Applying auth.0006_require_contenttypes_0002... OK      Applying auth.0007_alter_validators_add_error_messages... OK      Applying auth.0008_alter_user_username_max_length... OK      Applying auth.0009_alter_user_last_name_max_length... OK      Applying auth.0010_alter_group_name_max_length... OK      Applying auth.0011_update_proxy_permissions... OK      Applying auth.0012_alter_user_first_name_max_length... OK      Applying sessions.0001_initial... OK<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2、创建超级用户：python-manage-py-createsuperuser"><a href="#2、创建超级用户：python-manage-py-createsuperuser" class="headerlink" title="2、创建超级用户：python manage.py createsuperuser"></a>2、创建超级用户：python manage.py createsuperuser</h4><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">Username (leave blank to use 'administrator'): admin # 输入用户名Email address: 1766842398@qq.com  # 邮箱Password:  # 密码Password (again): # 确认密码The password is too similar to the username.This password is too common.Bypass password validation and create user anyway? [y/N]: y # 是否跳过密码验证并创建用户？选择是就行Superuser created successfully. # 创建超级用户成功<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3、设置中文"><a href="#3、设置中文" class="headerlink" title="3、设置中文"></a>3、设置中文</h4><p>上面创建完成超级用户登录进去之后会发现都是英文，这里也可以设中文，在settings.py配置文件里面修改一下就行了。<br>如：</p><pre class="line-numbers language-myweb/settings.py" data-language="myweb/settings.py"><code class="language-myweb/settings.py">LANGUAGE_CODE = 'zh-hans'TIME_ZONE = 'Asia/Shanghai'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>在访问就成中文了</p><h4 id="4、配置静态文件"><a href="#4、配置静态文件" class="headerlink" title="4、配置静态文件"></a>4、配置静态文件</h4><pre class="line-numbers language-none"><code class="language-none">STATIC_URL = '/static/'STATICFILES_DIRS = [    os.path.join(BASE_DIR, 'static')]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5、将我们自定义的应用程序加入到后台管理"><a href="#5、将我们自定义的应用程序加入到后台管理" class="headerlink" title="5、将我们自定义的应用程序加入到后台管理"></a>5、将我们自定义的应用程序加入到后台管理</h4><p>打开myapp/admin.py 文件，导入自己定义好的数据类，在添加到管理员里面</p><pre class="line-numbers language-myapp/admin.py" data-language="myapp/admin.py"><code class="language-myapp/admin.py">from myapp.models import Stuadmin.site.register(Stu)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="6、更深入设计后台管理"><a href="#6、更深入设计后台管理" class="headerlink" title="6、更深入设计后台管理"></a>6、更深入设计后台管理</h4><p>因为直接用的话后台管理不太美观所有我们自己设计一下<br>再次打开myapp/admin.py 文件，在添加自定义管理员界面<br>如：</p><pre class="line-numbers language-myapp/admin.py" data-language="myapp/admin.py"><code class="language-myapp/admin.py">@admin.register(Stu)class StuAdmin(admin.ModelAdmin):    # listdisplay设置要显示在列表中的字段(id字段是Django模型的默认主键)    list_display = ('id', 'name', 'sex', 'age', 'classid')    # 设置哪些字段可以点击进入编辑界面    list_display_links = ('id', 'name')    # list_per_page设置每页显示多少条记录，默认是100条    list_per_page = 10    # ordering设置默认排序字段，负号表示降序排序    ordering = ('id',)  # -id降序    # list_editable 设置默认可编辑字段    # list_editable = ['age', 'sex', 'classid']<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HtmlStudy</title>
      <link href="/2021/09/08/htmlstudy/"/>
      <url>/2021/09/08/htmlstudy/</url>
      
        <content type="html"><![CDATA[<h1 id="认识并学习HTML标签"><a href="#认识并学习HTML标签" class="headerlink" title="认识并学习HTML标签"></a>认识并学习<a href="https://www.w3school.com.cn/html/index.asp">HTML</a>标签</h1><h2 id="HTML格式"><a href="#HTML格式" class="headerlink" title="HTML格式"></a>HTML格式</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">HTML</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">leng</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh-CN<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>HTML格式<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token style"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>        /*样式*/        body {            width: 10%;            background: #ccc;            border-collapse: collapse;/*borrder-collapse合并内外边距(去除表格单元格默认的两个像素内外边距)*/            height: 25px;            line-height: 25px;  /*边距*/            #text-align: center;  /*剧中*/        }<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{{ next_url }}<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>Login<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>user<span class="token punctuation">'</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>required<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>用户名<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>pwd<span class="token punctuation">'</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>required<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>密码<span class="token punctuation">"</span></span> <span class="token attr-name">maxlength</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>6<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>登入<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token keyword">return</span> <span class="token function">checkuser</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reset<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>next<span class="token punctuation">'</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>next_url<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{{ next_url }}<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>{{login_status}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>HTML5 移动页面自适应手机屏幕四<br>使用meta标签：viewport</p><pre class="line-numbers language-none"><code class="language-none">&lt;meta name="viewport" content="width=device-width,initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no"/&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>每个属性的详细介绍：</p><p>属性名    取值    描述<br>width    正整数 或 device-width    定义视口的宽度，单位为像素<br>height    正整数 或 device-height    定义视口的高度，单位为像素，一般不用<br>initial-scale    [0.0-10.0]    定义初始缩放值<br>minimum-scale    [0.0-10.0]    定义缩小最小比例，它必须小于或等于maximum-scale设置<br>maximum-scale    [0.0-10.0]    定义放大最大比例，它必须大于或等于minimum-scale设置<br>user-scalable    yes/no    定义是否允许用户手动缩放页面，默认值yes</p><h2 id="认识HTML标签"><a href="#认识HTML标签" class="headerlink" title="认识HTML标签"></a>认识HTML标签</h2><h3 id="文本标签"><a href="#文本标签" class="headerlink" title="文本标签"></a>文本标签</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">HTML</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">leng</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh-CN<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>文本标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">        <span class="token comment">/*样式*/</span>        <span class="token selector">body</span> <span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> 10%<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">;</span>            <span class="token property">border-collapse</span><span class="token punctuation">:</span> collapse<span class="token punctuation">;</span><span class="token comment">/*borrder-collapse合并内外边距(去除表格单元格默认的两个像素内外边距)*/</span>            <span class="token property">height</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>            <span class="token property">line-height</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>  <span class="token comment">/*边距*/</span>            #<span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token comment">/*剧中*/</span>        <span class="token punctuation">}</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>H1标题标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>H1标题标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>H1标题标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">&gt;</span></span>H1标题标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">&gt;</span></span>H1标题标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h6</span><span class="token punctuation">&gt;</span></span>H1标题标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h6</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>u</span><span class="token punctuation">&gt;</span></span>u下划线标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>u</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>del</span><span class="token punctuation">&gt;</span></span>del删除线标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>del</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>b加粗标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>strong强调加粗标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">&gt;</span></span>i斜体标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">&gt;</span></span>em强调斜体标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cite</span><span class="token punctuation">&gt;</span></span>请明上河图<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cite</span><span class="token punctuation">&gt;</span></span>是我国十大传世名画之一 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>    水分子：H<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sub</span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sub</span><span class="token punctuation">&gt;</span></span>O <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>    2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sup</span><span class="token punctuation">&gt;</span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sup</span><span class="token punctuation">&gt;</span></span>=16<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="格式化标签"><a href="#格式化标签" class="headerlink" title="格式化标签"></a>格式化标签</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">HTML</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">leng</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh-CN<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>格式化标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>HTML格式化标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">/&gt;</span></span>  <span class="token comment">&lt;!-- 水平分割线 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span>600px</span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 常用于组合块级元素，以便通过CSS来对这些元素进行格式化 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 换段 --&gt;</span>            【学习进行时】党的十八大以来，党中央部署了多次集中教育，习近平总书记对此都作出了重要指示。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span> <span class="token comment">&lt;!-- 换行 --&gt;</span>            历次集中教育，虽侧重点不同，但有一个要求贯穿始终——切实为群众办实事解难题，习近平对此高度重视。            新华社《学习进行时》原创品牌栏目“讲习所”今天推出文章，为您解读。        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>            党的十八大以来，党中央部署了多次集中教育。尽管每次的主题和侧重有所不同，但强化宗旨意识和为民情怀是            一个共同的目的，都是为了教育广大党员干部解决群众最急最忧最盼的问题。        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    你的爱好：    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>circle<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 无序列表 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>看书<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 列表项 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>上网<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>爬山<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>唱歌<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 有序列表，其中type类型值：Aali start属性表示起始值 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>看书<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>上网<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>爬山<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>唱歌<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>circle<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 自定义列表 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">&gt;</span></span>问：HTML是什么<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 自定义列表头 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">&gt;</span></span>答：超文本标记语言<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 自定义列表内容 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">&gt;</span></span>问：CSS是什么<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">&gt;</span></span>答：层叠样式表<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>aaaaa<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>bbbbb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>ccccc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>ddddd<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 常用于包含的文本，你可以使用CSS对他定义样式，或者使用JavaScript对他进行操作 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="图片标签：img"><a href="#图片标签：img" class="headerlink" title="图片标签：img"></a>图片标签：img</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">HTML</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">leng</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh-CN<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>图片标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>HTML图片img标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/11.jog<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>图片不显示时显示这个<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 相对路径"."指当前路径 border:指定边框 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>百度图标<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>百度图片鼠标放图片上就会显示<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 绝对路径 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.taobao.com<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>淘宝<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- 超文本标签，target:指定打开方式，跳转新页面打开 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="超链接标签：a"><a href="#超链接标签：a" class="headerlink" title="超链接标签：a"></a>超链接标签：a</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">HTML</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">leng</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh-CN<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>图片标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>HTML实例-超链接a标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 锚点链接 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#mv1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>超链接1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#mv2<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>超链接2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token comment">&lt;!-- 普通超链接 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https:www.baidu.com<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>百度链接<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>百度本页面链接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https:www.baidu.com<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>百度跳新页面链接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./h3图片img标签.html<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>跳转本地链接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mv1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">&gt;</span></span>图片1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/11.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>图片1<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mv2<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">&gt;</span></span>图片2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/22.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>图片2<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="表格标签：table"><a href="#表格标签：table" class="headerlink" title="表格标签：table"></a>表格标签：table</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">HTML</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">leng</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh-CN<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>图片标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>HTML实例-表格标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>500<span class="token punctuation">"</span></span> <span class="token attr-name">cellspacing</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">cellpadding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- table:一个表格，border:表格边框，cellspacing:边距为0，cellpadding:字体离单元格边的距离大小 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>caption</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>学生信息表<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>caption</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- caption:表格标题 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- 表头 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 行标签 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>学号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 列头标签 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>年龄<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>班级<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 表体 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>1001<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 列标签，跨行属性:rowspan,跨列属性:colspan --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>张三<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>20<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">rowspan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span> <span class="token attr-name">valign</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>1班<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- rowspan:从上往下合并2个单元格，align:center左右居中显示 valign:top在单元格上边显示 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>1002<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>李四<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>23<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- &lt;td&gt;2班&lt;/td&gt; --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>1003<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>王五<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>22<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>3班<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>1004<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>赵六<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>25<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- colspan:从左往右合并2个单元格 --&gt;</span><span class="token comment">&lt;!-- &lt;td&gt;4班&lt;/td&gt; --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tfoot</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 表尾 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>1111<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>表尾<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>25<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>表尾<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tfoot</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="表单标签：form"><a href="#表单标签：form" class="headerlink" title="表单标签：form"></a>表单标签：form</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">HTML</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">leng</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh-CN<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>表单标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>HTML实例-表单标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>h3图片img标签.html<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>账号：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uname<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>upass<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>登入<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>h1.html<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>姓名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">disabled</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uname<span class="token punctuation">"</span></span> <span class="token attr-name">maxlength</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>8<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lisi<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>upass<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>性别：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>女<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>爱好：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>likes<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>看书<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>likes<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>爬山<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>likes<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>游泳<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>likes<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>唱歌<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>头像：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pic<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>邮箱：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入你的邮箱<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pic<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>年龄：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>80<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pic<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>指数：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>range<span class="token punctuation">"</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>80<span class="token punctuation">"</span></span><span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pic<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>网址：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.baidu.com<span class="token punctuation">"</span></span> <span class="token attr-name">readonly</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pic<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>日期：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>date<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pic<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>颜色：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>color<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pic<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>学历：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>education<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>大专<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token attr-name">selected</span> <span class="token punctuation">&gt;</span></span>本科<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>研究生<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>博士<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>简介：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>contents<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Hello Worls<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reset<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>重置<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>普通按钮<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/reg.gif<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo_form.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span>300px</span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>搜索：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span> <span class="token attr-name">list</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>namelist<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>datalist</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>namelist<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zhangsan<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zhangsanfeng<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zhangwuji<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lisi<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lixiaolong<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>datalist</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>城市：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>city<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optgroup</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>河北省<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">&gt;</span></span>石家庄<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">&gt;</span></span>保定<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">&gt;</span></span>廊坊<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optgroup</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optgroup</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>河南省<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">&gt;</span></span>郑州<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">&gt;</span></span>安阳<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">&gt;</span></span>周口<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optgroup</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fieldset</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>legend</span><span class="token punctuation">&gt;</span></span>个人信息：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>legend</span><span class="token punctuation">&gt;</span></span>姓名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>年龄：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type"text"</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fieldset</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fieldset</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>legend</span><span class="token punctuation">&gt;</span></span>健康信息：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>legend</span><span class="token punctuation">&gt;</span></span>身高：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>体重：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type"text"</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fieldset</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="内联框架标签：iframe"><a href="#内联框架标签：iframe" class="headerlink" title="内联框架标签：iframe"></a>内联框架标签：iframe</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">HTML</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">leng</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh-CN<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>表单标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>HTML实例-框架标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>h6表单标签-form<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myframe<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>表单标签实例<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>h5表格标签-table.html<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myframe<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>表格标签实例<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>h3图片标签-img.html<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myframe<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>图片标签实例<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>h4超链接标签-a.html<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myframe<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>80%<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>500<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="多媒体标签：audio"><a href="#多媒体标签：audio" class="headerlink" title="多媒体标签：audio"></a>多媒体标签：audio</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">HTML</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">leng</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh-CN<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>多媒体标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>HTML实例-多媒体标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/beidahuang.mp3<span class="token punctuation">"</span></span> <span class="token attr-name">controls</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>controls<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>你的浏览器不支持audio音频标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">controls</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/beidahuang.mp3<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>audio/mpeg<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>你的浏览器不支持audio音频标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/fun.mp4<span class="token punctuation">"</span></span> <span class="token attr-name">controls</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>controls<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>400<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>400<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>你的浏览器不支持video视频标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span>  <span class="token attr-name">controls</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>controls<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>400<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>400<span class="token punctuation">"</span></span> <span class="token attr-name">poster</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/11.jpg<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/fun.mp4<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vodeo/mp4<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>你的浏览器不支持video视频标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>embed</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/haowan.swf<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="CSS语法"><a href="#CSS语法" class="headerlink" title="CSS语法"></a>CSS语法</h2><p>格式：选择器{属性:值; 属性:值; ……}<br>案例如下：其中选择器也叫选择符<br>p{color:red; text-align:center;}</p><h3 id="CSS样式基础语法实例"><a href="#CSS样式基础语法实例" class="headerlink" title="CSS样式基础语法实例"></a>CSS样式基础语法实例</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">HTML</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">leng</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh-CN<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>CSS样式基础语法实例<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token comment">/* 自定义css样式 */</span><span class="token selector">h3</span><span class="token punctuation">{</span><span class="token property">font-size</span><span class="token punctuation">:</span>30px<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">li</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- CSS样式基础语法实例 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>什么是CSS<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>CSS 指层叠样式表(Cascading Style Sheets)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>样式定义如何显示控制 HTML 元素，从而实现美化HTML网页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>样式通常存储在样式表中，目的也是为了解决内容与表现分离的问题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>外部样式(CSS文件)可以极大提高工作效率<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>多个样式定义可层叠为一，后者可以覆盖前置样式<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="CSS样式的使用方法"><a href="#CSS样式的使用方法" class="headerlink" title="CSS样式的使用方法"></a>CSS样式的使用方法</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">HTML</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">leng</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh-CN<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>CSS样式的使用方法<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./my.css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 外部样式 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">h4</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>green<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span>16px<span class="token punctuation">;</span><span class="token property">line-height</span><span class="token punctuation">:</span>30px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">li</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span>16px<span class="token punctuation">;</span><span class="token property">line-height</span><span class="token punctuation">:</span>30px<span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 内部样式 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>CSS样式的使用方法<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">&gt;</span></span>插入样式表的方法有三种：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>外部样式表(External style sheet)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>内部样式表(Internal style sheet)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span>#f0c</span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>内联样式(Inline style)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="CSS样式的常用选择器-选择符"><a href="#CSS样式的常用选择器-选择符" class="headerlink" title="CSS样式的常用选择器(选择符)"></a>CSS样式的常用选择器(选择符)</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">HTML</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">leng</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh-CN<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>c3CSS样式的常用选择器(选择符)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./my.css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 外部样式 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token comment">/*1.HTML 选择器*/</span><span class="token comment">/*h1{color:red;font-size:16px;line-height:30px;}h3{color:aqua;font-size:16px;line-height:30px;}li{color:#00ff00}*/</span><span class="token comment">/*2.类选择器*/</span><span class="token selector">.CC</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">}</span><span class="token selector">LI.CC</span><span class="token punctuation">{</span><span class="token property">background-color</span><span class="token punctuation">:</span>#DDDDDD<span class="token punctuation">}</span><span class="token selector">LI.dd</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>blue<span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 内部样式 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cc<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>CSS样式的常用选择器(选择符)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hid<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>什么是CSS？<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>CSS 指层叠样式表(Cascading Style Sheets)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cc<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>样式定义如何显示控制 HTML 元素，从而实现美化HTML网页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>样式通常存储在样式表中，目的也是为了解决内部与表现分离的问题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cc dd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>外部样式表(CSS 文件)可以极大提高工作效率<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>多个样式定义可以层叠为一，后者可以覆盖前置样式<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sc<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sid<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>CSS的常用选择器<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">&gt;</span></span>插入样式表的三种方法：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>外部样式表<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>内部样式表<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>内联样式<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>c1CSS样式基础语法实例.html?id=1111<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>CSS语法实例<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>c2CSS样式的使用方法.html<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>CSS样式使用方法<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Html </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pythonweb端UI自动化测试</title>
      <link href="/2021/07/27/pythonweb-duan-ui-zi-dong-hua-ce-shi/"/>
      <url>/2021/07/27/pythonweb-duan-ui-zi-dong-hua-ce-shi/</url>
      
        <content type="html"><![CDATA[<p>ytl用python做web端自动化测试</p><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>1.安装<a href="https://www.google.cn/chrome/">谷歌浏览器</a><br>2.安装对应的<a href="http://chromedriver.storage.googleapis.com/index.html">谷歌驱动</a><br>解压后,将chromedriver.exe放置到python的Scripts目录下<br>3.安装selenium<br>一般python自带也可用<code>pip install selenium</code>安装</p><h2 id="开始编写代码"><a href="#开始编写代码" class="headerlink" title="开始编写代码"></a>开始编写代码</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver  <span class="token comment"># 从`selenium`导入`webdriver`网络驱动</span><span class="token keyword">import</span> time  <span class="token comment"># 导入时间`time`</span>driver <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 打开浏览器</span>url <span class="token operator">=</span> driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>  <span class="token comment"># 输入网址</span>driver<span class="token punctuation">.</span>implictitly_wait<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>  <span class="token comment"># 设置隐性等待时间10秒，当然时间自己定义</span>driver<span class="token punctuation">.</span>set_window_size<span class="token punctuation">(</span>width<span class="token operator">=</span><span class="token punctuation">,</span>height<span class="token operator">=</span><span class="token punctuation">)</span>  <span class="token comment"># 设置窗口大小</span>title <span class="token operator">=</span> <span class="token keyword">print</span><span class="token punctuation">(</span>driver<span class="token punctuation">.</span>title<span class="token punctuation">)</span>  <span class="token comment"># 获取标题方法</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="定位元素方法"><a href="#定位元素方法" class="headerlink" title="定位元素方法"></a>定位元素方法</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">driver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">"13612341234"</span><span class="token punctuation">)</span> <span class="token comment">#输入账号</span>driver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">"passwordSso"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">"123456"</span><span class="token punctuation">)</span> <span class="token comment">#输入密码</span>driver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">"subnitButton"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#点击登入</span>driver<span class="token punctuation">.</span>find_element_by_xpath<span class="token punctuation">(</span><span class="token string">'//[@id="layout-custom"]/div[2]/div[1]/div/a'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#点击退出</span>driver<span class="token punctuation">.</span>find_element_by_name<span class="token punctuation">(</span><span class="token string">"wd"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">"自动化"</span><span class="token punctuation">)</span> <span class="token comment">#通过name定位</span>driver<span class="token punctuation">.</span>find_element_by_class_name<span class="token punctuation">(</span><span class="token string">"s_ipt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">"selenium"</span><span class="token punctuation">)</span> <span class="token comment">#通过class定位</span>driver<span class="token punctuation">.</span>find_element_by_tag_name<span class="token punctuation">(</span><span class="token string">"ifrane"</span><span class="token punctuation">)</span> <span class="token comment">#通过tag标签定位绝大多数重复，偶尔iframe可能唯一</span>driver<span class="token punctuation">.</span>find_element_by_link_text<span class="token punctuation">(</span><span class="token string">"hao123"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#通过link_text链接文本定位</span>driver<span class="token punctuation">.</span>find_element_by_partial_link_text<span class="token punctuation">(</span><span class="token string">"hao123"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#通过partial_link_text部分链接文本定位</span>driver<span class="token punctuation">.</span>find_element_by_css_selector<span class="token punctuation">(</span><span class="token string">"#kw"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">"css定位"</span><span class="token punctuation">)</span> <span class="token comment">#通过css_selector css选择器定位</span>driver<span class="token punctuation">.</span>find_element_by_class_name<span class="token punctuation">(</span><span class="token string">"mnav"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 清理内容</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 点击</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 输入内容</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="内联框架标签"><a href="#内联框架标签" class="headerlink" title="内联框架标签"></a>内联框架标签</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>switch_to_frame<span class="token punctuation">(</span><span class="token string">"oppoRtcAsIframe"</span><span class="token punctuation">)</span> <span class="token comment"># 要先切换到iframe 先定位到iframe元素默认以iframe的id或者name定位</span><span class="token comment"># 如果该框架没有id或name，可以通过其他定位方式找到该框架在切到该框架，</span><span class="token comment"># 如：</span>el <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_element_by_xpath<span class="token punctuation">(</span><span class="token string">'//*[@id="oppoRtcAsIframe"]'</span><span class="token punctuation">)</span>driver<span class="token punctuation">.</span>switch_to<span class="token punctuation">.</span>frame<span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token comment"># 在定位它下面的元素，</span><span class="token comment"># 内联框架完成相关操作之后可以用下方法跳出iframe</span>driver<span class="token punctuation">.</span>switch_to<span class="token punctuation">.</span>parent_frame<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 跳出该框架</span>driver<span class="token punctuation">.</span>switch_to<span class="token punctuation">.</span>default_content<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 跳到最外层页面</span>driver<span class="token punctuation">.</span>switch_to_window<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token comment"># 切换到新的窗口在进行其他操作</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ui自动化框架unittest"><a href="#ui自动化框架unittest" class="headerlink" title="ui自动化框架unittest"></a>ui自动化框架<code>unittest</code></h2><p>先看一下目录结构<br><img src="http://ytlgithub.github.io/medias/ytlimg/ui%E8%87%AA%E5%8A%A8%E5%8C%96%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png" alt="目录结构"><br>说明：<br>common  # 编写公共类方法目录<br>conf  # 配置的信息<br>imgaes  # 错误截图保存目录<br>product_info  # 自动获取的产品信息<br>records  # 脚本录制视频保存目录<br>report  # 生成报告保存目录<br>scripts  # 编写脚本目录<br>run  # 总运行入口，运行测试脚本生成测试报告</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token keyword">import</span> unittest<span class="token keyword">import</span> yaml<span class="token keyword">import</span> os<span class="token keyword">import</span> time<span class="token keyword">from</span> common<span class="token punctuation">.</span>configTime <span class="token keyword">import</span> <span class="token operator">*</span>configure_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"configure.yml"</span><span class="token punctuation">)</span>  <span class="token comment"># 配置文件路径，后面直接调用这些配置就行</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>configure_path<span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>  <span class="token comment"># yaml方法获取配置信息</span>    data <span class="token operator">=</span> yaml<span class="token punctuation">.</span>load<span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># print(data["URL"])</span><span class="token keyword">class</span> <span class="token class-name">MyTest</span><span class="token punctuation">(</span>unittest<span class="token punctuation">.</span>TestCase<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>driver <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 定义驱动</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>maximize_window<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 窗口最大化</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>implicitly_wait<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>  <span class="token comment"># 设置隐性等待时间</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">"URL"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 输入网址</span>    <span class="token decorator annotation punctuation">@classmethod</span>    <span class="token keyword">def</span> <span class="token function">setUpClass</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""整个测试用例的前置条件"""</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"开始 自动化测试"</span><span class="token punctuation">)</span>    <span class="token decorator annotation punctuation">@classmethod</span>    <span class="token keyword">def</span> <span class="token function">tearDownClass</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""print("所有用例的后置条件")"""</span>    <span class="token keyword">def</span> <span class="token function">setUp</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""print("每条用例的前置条件")"""</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">tearDown</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""print("每条用例的后置条件")"""</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">test01</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>find_element_by_link_text<span class="token punctuation">(</span><span class="token string">'Sign In'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 点击你好,请登入</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">'fm-login-id'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">'name01'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 输入账号</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">'fm-login-password'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">'password01'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 输入密码</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">'fm-login-submit'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 点击登入</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"成功"</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">test02</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>find_element_by_link_text<span class="token punctuation">(</span><span class="token string">'Sign In'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 点击你好,请登入</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">'fm-login-id'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">'name02'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 输入账号</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">'fm-login-password'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">'password02'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 输入密码</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">'fm-login-submit'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 点击登入</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"成功"</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">testN</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>find_element_by_link_text<span class="token punctuation">(</span><span class="token string">'Sign In'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 点击你好,请登入</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">'fm-login-id'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">'nameN'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 输入账号</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">'fm-login-password'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">'passwordN'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 输入密码</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">'fm-login-submit'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 点击登入</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    unittest<span class="token punctuation">.</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="生成测试报告"><a href="#生成测试报告" class="headerlink" title="生成测试报告"></a>生成测试报告</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> unittest<span class="token keyword">from</span> unittestreport <span class="token keyword">import</span> TestRunner<span class="token keyword">from</span> common<span class="token punctuation">.</span>configTime <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> product_info<span class="token punctuation">.</span>info <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">class</span> <span class="token class-name">AllTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span>    <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""运行脚本用例生成测试报告"""</span>        a <span class="token operator">=</span> config_report_time_path<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 配置包名时间和路径</span>        case_push <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment"># 用例路径</span>        report_name <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token comment"># 报告名</span>        report_push <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>  <span class="token comment"># 报告路径</span>        suite <span class="token operator">=</span> unittest<span class="token punctuation">.</span>defaultTestLoader<span class="token punctuation">.</span>discover<span class="token punctuation">(</span>case_push<span class="token punctuation">)</span>  <span class="token comment"># 加载测试用例</span>        TestRunner<span class="token punctuation">(</span>suite<span class="token punctuation">,</span>                   filename<span class="token operator">=</span>report_name<span class="token punctuation">,</span>                   report_dir<span class="token operator">=</span>report_push<span class="token punctuation">,</span>                   title<span class="token operator">=</span><span class="token string">"测试报告"</span><span class="token punctuation">,</span>                   tester<span class="token operator">=</span><span class="token string">"你自己的名字"</span><span class="token punctuation">,</span>                   desc<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">f"报告信息"</span></span><span class="token punctuation">,</span>                   templates<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rerun_run<span class="token punctuation">(</span>count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> interval<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>  <span class="token comment"># 失败重运行次数</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    run <span class="token operator">=</span> AllTest<span class="token punctuation">(</span><span class="token punctuation">)</span>    run<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 自动化测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动化测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>部署个人博客</title>
      <link href="/2021/07/27/blog/"/>
      <url>/2021/07/27/blog/</url>
      
        <content type="html"><![CDATA[<p>欢迎来到部署个人博客<a href="https://ytlgithub.github.io/">ytlBlog</a></p><h2 id="部署个人博客"><a href="#部署个人博客" class="headerlink" title="部署个人博客"></a>部署个人博客</h2><h3 id="一-安装环境"><a href="#一-安装环境" class="headerlink" title="一.安装环境"></a>一.安装环境</h3><p>1.安装<a href="https://git-scm.com/">Git</a><br>2.安装<a href="https://nodejs.org/en/">node.js</a><br>3.当然你要有一个<a href="https://github.com/">github</a>账号，没有的话赶快去注册一个吧</p><h3 id="二-配置Github"><a href="#二-配置Github" class="headerlink" title="二.配置Github"></a>二.配置Github</h3><p>1.建立Repository,建立与你用户名对应的仓库，仓库名必须为【your_user_name.github.io】<br>2.配置SSH-Key<br>3.创建密钥方法<br>创建密钥：在你的博客目录下右键弹框点击Git Bash Here 打开Git命令仓库输入如下命令<br>创建密钥命令：ssh-keygen -t rsa -C “<a href="mailto:1766842398@qq.com">1766842398@qq.com</a>“  注释：这里的邮箱输入你自己的<br>查看创建的密钥命令：cat ~/.ssh/id_rsa.pub  注释：复制这些密钥到GitHub ssh里面 头像点击设置里面添加ssh<br>会产生两个密钥一个id_esa 是私钥一个id_rsa.pub 是公钥</p><h3 id="三-安装Hexo"><a href="#三-安装Hexo" class="headerlink" title="三.安装Hexo"></a>三.安装Hexo</h3><p>1.打开Git命令行，执行如下命令<br>$ npm install -g hexo</p><h3 id="四-开始部署前提条件"><a href="#四-开始部署前提条件" class="headerlink" title="四.开始部署前提条件"></a>四.开始部署前提条件</h3><p>1.在电脑中建立一个名字叫「Hexo」的文件夹（比如我建在了D:\Hexo），然后在此文件夹中右键打开Git Bash。执行下面的命令<br>$ hexo init<br>Hexo随后会自动在目标文件夹建立网站所需要的文件<br>2.然后（在 /D/Hexo下）执行npm install<br>$ npm install<br>会在D:\Hexo目录中安装 node_modules</p><h3 id="五-生成博客"><a href="#五-生成博客" class="headerlink" title="五.生成博客"></a>五.生成博客</h3><p>1.启动在浏览器访问<a href="http://localhost:4000/">http://localhost:4000/</a> # 这时可以看到Hexo已为你生成了一篇blog<br>$ hexo server<br>可以简化<br>$ hexo s  生成本地浏览静态码<br>按Ctrl+C 停止Server<br>2.新建一个文章<br>$ hexo new “文章名”<br>刷新本地网页<a href="http://localhost:4000/">http://localhost:4000/</a> 可以发现已生成了一篇新文章 “文章名”<br>3.删除生成的public<br>$ hexo clean<br>4.生成静态网页<br>$ hexo generate<br>可以简化<br>$ hexo g<br>该命令执行完后，会在 D:\Hexo\public\ 目录下生成一系列html、css等文件<br>5.编辑文章<br>hexo new “文章名”会在D:\Hexo\source_posts目录下生成一个markdown文件：My-New-Post.md<br>可以使用一个支持markdown语法的编辑器（比如 Sublime Text 2）来编辑该文件。</p><h3 id="六-部署到Github"><a href="#六-部署到Github" class="headerlink" title="六.部署到Github"></a>六.部署到Github</h3><p>1.安装hexo-deployer-git插件，在站点目录下输入下面命令安装插件就好了，后在使用Hexo d命令就可以推送了<br>$ npm hexo-deployer-git<br>2.部署到Github前需要配置_config.yml文件，首先找到下面的内容<br>deploy:<br>    type:<br>然后将它们修改为<br>deploy:<br>    type: git<br>    repository: <a href="mailto:git@github.com">git@github.com</a>:YtlGitHub/YtlGitHub.github.io.git  注释：这个是输入你自己的SSH密钥地址<br>    branch: main  注释：main是你自己的分支<br>3.把代码文件推送到Github上<br>$ hexo deploy<br>4.测试<br>当部署完成后，在浏览器中打开<a href="https://ytlgithuborganization.github.io/YtlGitHub.github.io/">https://YtlGitHuborganization.github.io/YtlGitHub.github.io/</a> ，正常显示网页，表明部署成功。<br>本地静态网页：<a href="http://localhost:4000/">http://localhost:4000</a></p><h3 id="七-生成漂亮的主题"><a href="#七-生成漂亮的主题" class="headerlink" title="七.生成漂亮的主题"></a>七.生成漂亮的主题</h3><h4 id="1-下载主题"><a href="#1-下载主题" class="headerlink" title="1.下载主题"></a>1.下载主题</h4><p>前言：我们知道它自己默认主题是非常难看的，所以我们就要下载一个漂亮的主题，网上有很多主题可以下载，这里我以<a href="https://github.com/blinkfox/hexo-theme-matery">hexo-theme-matery</a>主题作为演示<br>(1).点击<a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master">这里</a>下载最新稳定版代码的master分支。解压后，将hexo-theme-matery文件夹复制到你themes的Hexo博客项目文件夹中，并重命名为matery，名字自己可以随便定义与下面配置主题名字一致就行。<br>(2).当然，您可以使用git clone下载到您的themes文件夹中。<br>git clone <a href="https://github.com/blinkfox/hexo-theme-matery.git">https://github.com/blinkfox/hexo-theme-matery.git</a></p><h4 id="2-配置主题"><a href="#2-配置主题" class="headerlink" title="2.配置主题"></a>2.配置主题</h4><p>(1).修改你博客路径下_config.yml文件里面theme: 的值，后面的值修改为matery，注意matery就是上面主题自定义的名字</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">theme</span><span class="token punctuation">:</span> matery<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>(2).修改主题显示自己的信息_config.yml博客路径里面的_config.yml，如果您是中国用户，建议将language的值改为zh-CN。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> YtlBlog<span class="token key atrule">subtitle</span><span class="token punctuation">:</span> <span class="token string">'欢迎来到Ytl的博客'</span><span class="token key atrule">description</span><span class="token punctuation">:</span> <span class="token string">'网站描述'</span><span class="token key atrule">keywords</span><span class="token punctuation">:</span> <span class="token string">'您网站的关键字,支持多个值'</span><span class="token key atrule">author</span><span class="token punctuation">:</span> Ytl<span class="token key atrule">language</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>CN  <span class="token comment"># en</span><span class="token key atrule">timezone</span><span class="token punctuation">:</span> <span class="token string">''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>(3).其他修改建议_config.yml博客路径里面的_config.yml<br>请修改的价值url的_config.yml，以你的网站的主URL(例如<a href="http://xxx.github.io/">http://xxx.github.io</a>)<br>我们建议修改这两个值per_page是的倍数6，如：12，18等等，以便可在每个屏幕下显示良好的职位列表。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">index_generator</span><span class="token punctuation">:</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">''</span>  <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token number">12</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date<span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token number">12</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>(4).其他配置请参考<a href="https://github.com/YtlGitHub/ytlblog/tree/main/themes/matery">这里</a><br>你下载的主题下面的README_CN.md有详细介绍<br>hexo\themes\matery\README_CN.md</p><h3 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h3><!-- 来必力City版安装代码 --><div id="lv-container" data-id="city" data-uid="MTAyMC81MzYzNy8zMDExMA==">    <script type="text/javascript">   (function(d, s) {       var j, e = d.getElementsByTagName(s)[0];       if (typeof LivereTower === 'function') { return; }       j = d.createElement(s);       j.src = 'https://cdn-city.livere.com/js/embed.dist.js';       j.async = true;       e.parentNode.insertBefore(j, e);   })(document, 'script');    </script><noscript> 为正常使用来必力评论功能请激活JavaScript</noscript></div><!-- City版安装代码已完成 -->]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-theme-matery主题设置</title>
      <link href="/2021/07/27/hexo-theme-matery-zhu-ti-she-zhi/"/>
      <url>/2021/07/27/hexo-theme-matery-zhu-ti-she-zhi/</url>
      
        <content type="html"><![CDATA[<p>hexo-theme-matery</p><p><a href="http://hits.dwyl.io/blinkfox/hexo-theme-matery"><img src="http://hits.dwyl.io/blinkfox/hexo-theme-matery.svg" alt="HitCount"></a> <a href="https://gitter.im/hexo-theme-matery/Lobby?utm_source=badge"><img src="https://img.shields.io/gitter/room/blinkfox/hexo-theme-matery.svg" alt="Gitter"></a> <a href="https://github.com/blinkfox/hexo-theme-matery/issues"><img src="https://img.shields.io/github/issues/blinkfox/hexo-theme-matery.svg" alt="GitHub issues"></a> <a href="https://github.com/blinkfox/hexo-theme-matery/blob/master/LICENSE"><img src="https://img.shields.io/github/license/blinkfox/hexo-theme-matery.svg" alt="GitHub license"></a> <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master"><img src="https://img.shields.io/badge/downloads-master-green.svg" alt="Download"></a> <a href="http://hexo.io/"><img src="https://img.shields.io/badge/hexo-%3E%3D%205.0.0-blue.svg" alt="Hexo Version"></a> <a href="https://github.com/blinkfox/hexo-theme-matery/network"><img src="https://img.shields.io/github/forks/blinkfox/hexo-theme-matery.svg" alt="GitHub forks"></a> <a href="https://github.com/blinkfox/hexo-theme-matery/stargazers"><img src="https://img.shields.io/github/stars/blinkfox/hexo-theme-matery.svg" alt="GitHub stars"></a><br><a href="README.md">🇺🇸English Document</a> | <a href="http://blinkfox.com/">国内访问示例 (http://blinkfox.com)</a> | <a href="https://blinkfox.github.io/">Github 部署演示示例 (https://blinkfox.github.io)</a> | QQ 交流群1（已满）: <a href="https://jq.qq.com/?_wv=1027&amp;k=5zMDYHT"><code>926552981</code></a> | QQ 交流群2（推荐）: <a href="https://jq.qq.com/?_wv=1027&amp;k=53q2Ayp"><code>971887688</code></a></p><blockquote><p>这是一个采用 <code>Material Design</code> 和响应式设计的 Hexo 博客主题。</p></blockquote><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li>简单漂亮，文章内容美观易读</li><li><a href="https://material.io/">Material Design</a> 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 <code>Banner</code> 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 <code>MathJax</code></li><li><code>TOC</code> 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li><a href="https://gitalk.github.io/">Gitalk</a>、<a href="https://imsun.github.io/gitment/">Gitment</a>、<a href="https://valine.js.org/">Valine</a> 和 <a href="https://disqus.com/">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li><li>集成了<a href="http://busuanzi.ibruce.info/">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li><li>支持<code>emoji</code>表情，用<code>markdown emoji</code>语法书写直接生成对应的能<strong>跳跃</strong>的表情。</li><li>支持 <a href="http://www.daovoice.io/">DaoVoice</a>、<a href="https://www.tidio.com/">Tidio</a> 在线聊天功能。</li></ul><h2 id="贡献者"><a href="#贡献者" class="headerlink" title="贡献者"></a>贡献者</h2><p>感谢下面列出的贡献者，没有他们，hexo-theme-matery 不会这么完美。</p><ul><li><a href="https://github.com/HarborZeng">@HarborZeng</a></li><li><a href="https://github.com/shw2018">@shw2018</a></li><li><a href="https://github.com/L1cardo">@L1cardo</a></li><li><a href="https://github.com/Five-great">@Five-great</a></li></ul><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>本主题<strong>推荐你使用 Hexo 5.0.0 及以上的版本</strong>。如果，你已经有一个自己的 <a href="https://hexo.io/zh-cn/">Hexo</a> 博客了，建议你将 Hexo 升级到最新稳定的版本。</p><p>点击 <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master">这里</a> 下载 <code>master</code> 分支的最新稳定版的代码，解压缩后，将 <code>hexo-theme-matery</code> 的文件夹复制到你 Hexo 的 <code>themes</code> 文件夹中即可。</p><p>当然你也可以在你的 <code>themes</code> 文件夹下使用 <code>git clone</code> 命令来下载:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/blinkfox/hexo-theme-matery.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h3><p>修改 Hexo 根目录下的 <code>_config.yml</code> 的  <code>theme</code> 的值：<code>theme: hexo-theme-matery</code></p><h4 id="config-yml-文件的其它修改建议"><a href="#config-yml-文件的其它修改建议" class="headerlink" title="_config.yml 文件的其它修改建议:"></a><code>_config.yml</code> 文件的其它修改建议:</h4><ul><li>请修改 <code>_config.yml</code> 的 <code>url</code> 的值为你的网站主 <code>URL</code>（如：<code>http://xxx.github.io</code>）。</li><li>建议修改两个 <code>per_page</code> 的分页条数值为 <code>6</code> 的倍数，如：<code>12</code>、<code>18</code> 等，这样文章列表在各个屏幕下都能较好的显示。</li><li>如果你是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</li></ul><h3 id="新建分类-categories-页"><a href="#新建分类-categories-页" class="headerlink" title="新建分类 categories 页"></a>新建分类 categories 页</h3><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"categories"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> categories<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="新建标签-tags-页"><a href="#新建标签-tags-页" class="headerlink" title="新建标签 tags 页"></a>新建标签 tags 页</h3><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"tags"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> tags<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 18:23:38</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="新建关于我-about-页"><a href="#新建关于我-about-页" class="headerlink" title="新建关于我 about 页"></a>新建关于我 about 页</h3><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"about"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> about<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="新建留言板-contact-页（可选的）"><a href="#新建留言板-contact-页（可选的）" class="headerlink" title="新建留言板 contact 页（可选的）"></a>新建留言板 contact 页（可选的）</h3><p><code>contact</code> 页是用来展示<strong>留言板</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>contact/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"contact"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> contact<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"contact"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"contact"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>注</strong>：本留言板功能依赖于第三方评论系统，请<strong>激活</strong>你的评论系统才有效果。并且在主题的 <code>_config.yml</code> 文件中，第 <code>19</code> 至 <code>21</code> 行的“<strong>菜单</strong>”配置，取消关于留言板的注释即可。</p></blockquote><h3 id="新建友情链接-friends-页（可选的）"><a href="#新建友情链接-friends-页（可选的）" class="headerlink" title="新建友情链接 friends 页（可选的）"></a>新建友情链接 friends 页（可选的）</h3><p><code>friends</code> 页是用来展示<strong>友情链接</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"friends"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> friends<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-12-12 21:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">[</span><span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/1_qq_27922023.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"码酱"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"我不是大佬，只是在追寻大佬的脚步"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://luokangyuan.com/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/4027734.jpeg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"闪烁之狐"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://blinkfox.github.io/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/avatar.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"ja_rome"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"平凡的脚步也可以走出伟大的行程"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://me.csdn.net/jlh912008548"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="新建-404-页"><a href="#新建-404-页" class="headerlink" title="新建 404 页"></a>新建 404 页</h3><p>如果在你的博客 <code>source</code> 目录下还没有 <code>404.md</code> 文件，那么你就需要新建一个</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token number">404</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/404/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token number">404</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"404"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"404"</span><span class="token key atrule">description</span><span class="token punctuation">:</span> <span class="token string">"Oops～，我崩溃了！找不到你想要的页面 :("</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="菜单导航配置"><a href="#菜单导航配置" class="headerlink" title="菜单导航配置"></a>菜单导航配置</h3><h4 id="配置基本菜单导航的名称、路径url和图标icon"><a href="#配置基本菜单导航的名称、路径url和图标icon" class="headerlink" title="配置基本菜单导航的名称、路径url和图标icon."></a>配置基本菜单导航的名称、路径url和图标icon.</h4><p>1.菜单导航名称可以是中文也可以是英文(如：<code>Index</code>或<code>主页</code>)<br>2.图标icon 可以在<a href="https://fontawesome.com/icons">Font Awesome</a> 中查找   </p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">Index</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>home  <span class="token key atrule">Tags</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /tags    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>tags  <span class="token key atrule">Categories</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /categories    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>bookmark  <span class="token key atrule">Archives</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /archives    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>archive  <span class="token key atrule">About</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /about    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>user<span class="token punctuation">-</span>circle  <span class="token key atrule">Friends</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /friends    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>address<span class="token punctuation">-</span>book<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="二级菜单配置方法"><a href="#二级菜单配置方法" class="headerlink" title="二级菜单配置方法"></a>二级菜单配置方法</h4><p>如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作</p><ol><li>在需要添加二级菜单的一级菜单下添加<code>children</code>关键字(如:<code>About</code>菜单下添加<code>children</code>)     </li><li>在<code>children</code>下创建二级菜单的 名称name,路径url和图标icon.      </li><li>注意每个二级菜单模块前要加 <code>-</code>.     </li><li>注意缩进格式  </li></ol><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">Index</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>home  <span class="token key atrule">Tags</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /tags    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>tags  <span class="token key atrule">Categories</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /categories    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>bookmark  <span class="token key atrule">Archives</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /archives    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>archive  <span class="token key atrule">About</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /about    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>user<span class="token punctuation">-</span>circle<span class="token punctuation">-</span>o  <span class="token key atrule">Friends</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /friends    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>address<span class="token punctuation">-</span>book  <span class="token key atrule">Medias</span><span class="token punctuation">:</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>list    <span class="token key atrule">children</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Music        <span class="token key atrule">url</span><span class="token punctuation">:</span> /music        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>music      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Movies        <span class="token key atrule">url</span><span class="token punctuation">:</span> /movies        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>film      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Books        <span class="token key atrule">url</span><span class="token punctuation">:</span> /books        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>book      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Galleries        <span class="token key atrule">url</span><span class="token punctuation">:</span> /galleries        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>image<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后就可以在文章中对应位置看到你用<code>emoji</code>语法写的表情了。</p><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>从 Hexo5.0 版本开始自带了 <code>prismjs</code> 代码语法高亮的支持，本主题对此进行了改造支持。</p><p>如果你的博客中曾经安装过 <code>hexo-prism-plugin</code> 的插件，那么你须要执行 <code>npm uninstall hexo-prism-plugin</code> 来卸载掉它，否则生成的代码中会有 <code>&amp;#123;</code> 和 <code>&amp;#125;</code> 的转义字符。</p><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并将 <code>prismjs.enable</code> 的值设置为 <code>true</code>，主要配置如下：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">auto_detect</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span>  <span class="token key atrule">wrap</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">hljs</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">prismjs</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">preprocess</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>主题中默认的 <code>prismjs</code> 主题是 <code>Tomorrow Night</code>，如果你想定制自己的主题，可以前往 <a href="https://prismjs.com/download.html">prismjs 下载页面</a> 定制下载自己喜欢的主题 <code>css</code> 文件，然后将此 css 主题文件取名为 <code>prism.css</code>，替换掉 <code>hexo-theme-matery</code> 主题文件夹中的 <code>source/libs/prism/prism.css</code> 文件即可。</p><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">search</span><span class="token punctuation">:</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> search.xml  <span class="token key atrule">field</span><span class="token punctuation">:</span> post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="中文链接转拼音（建议安装）"><a href="#中文链接转拼音（建议安装）" class="headerlink" title="中文链接转拼音（建议安装）"></a>中文链接转拼音（建议安装）</h3><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i hexo-permalink-pinyin --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span> <span class="token comment"># default: '-'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>注</strong>：除了此插件外，<a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p></blockquote><h3 id="文章字数统计插件（建议安装）"><a href="#文章字数统计插件（建议安装）" class="headerlink" title="文章字数统计插件（建议安装）"></a>文章字数统计插件（建议安装）</h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a>插件。</p><p>安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-wordcount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">postInfo</span><span class="token punctuation">:</span>  <span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">update</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">wordCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 设置文章字数统计为 true.</span>  <span class="token key atrule">totalCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 设置站点文章总字数统计为 true.</span>  <span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 阅读时长.</span>  <span class="token key atrule">readCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 阅读次数.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="添加emoji表情支持（可选的）"><a href="#添加emoji表情支持（可选的）" class="headerlink" title="添加emoji表情支持（可选的）"></a>添加emoji表情支持（可选的）</h3><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <a href="https://npm.taobao.org/package/hexo-filter-github-emojis">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown emoji</code>语法（<code>::</code>,例如：<code>:smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-filter-github-emojis --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">githubEmojis</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">className</span><span class="token punctuation">:</span> github<span class="token punctuation">-</span>emoji  <span class="token key atrule">inject</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">styles</span><span class="token punctuation">:</span>  customEmojis<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="添加-RSS-订阅支持（可选的）"><a href="#添加-RSS-订阅支持（可选的）" class="headerlink" title="添加 RSS 订阅支持（可选的）"></a>添加 RSS 订阅支持（可选的）</h3><p>本主题中还使用到了 <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-feed --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">feed</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> atom  <span class="token key atrule">path</span><span class="token punctuation">:</span> atom.xml  <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token key atrule">hub</span><span class="token punctuation">:</span>  <span class="token key atrule">content</span><span class="token punctuation">:</span>  <span class="token key atrule">content_limit</span><span class="token punctuation">:</span> <span class="token number">140</span>  <span class="token key atrule">content_limit_delim</span><span class="token punctuation">:</span> <span class="token string">' '</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h3 id="添加-DaoVoice-在线聊天功能（可选的）"><a href="#添加-DaoVoice-在线聊天功能（可选的）" class="headerlink" title="添加 DaoVoice 在线聊天功能（可选的）"></a>添加 <a href="http://www.daovoice.io/">DaoVoice</a> 在线聊天功能（可选的）</h3><p>前往 <a href="http://www.daovoice.io/">DaoVoice</a> 官网注册并且获取 <code>app_id</code>，并将 <code>app_id</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="添加-Tidio-在线聊天功能（可选的）"><a href="#添加-Tidio-在线聊天功能（可选的）" class="headerlink" title="添加 Tidio 在线聊天功能（可选的）"></a>添加 <a href="https://www.tidio.com/">Tidio</a> 在线聊天功能（可选的）</h3><p>前往 <a href="https://www.tidio.com/">Tidio</a> 官网注册并且获取 <code>Public Key</code>，并将 <code>Public Key</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="修改页脚"><a href="#修改页脚" class="headerlink" title="修改页脚"></a>修改页脚</h3><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p><h3 id="修改社交链接"><a href="#修改社交链接" class="headerlink" title="修改社交链接"></a>修改社交链接</h3><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱等的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">&lt;% if (theme.socialLink.github) { %&gt;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&lt;%= theme.socialLink.github %&gt;<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tooltipped<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">data-tooltip</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>访问我的GitHub<span class="token punctuation">"</span></span> <span class="token attr-name">data-position</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-delay</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fab fa-github<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>&lt;% } %&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中，社交图标（如：<code>fa-github</code>）你可以在 <a href="https://fontawesome.com/icons">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供你参考：</p><ul><li>Facebook: <code>fab fa-facebook</code></li><li>Twitter: <code>fab fa-twitter</code></li><li>Google-plus: <code>fab fa-google-plus</code></li><li>Linkedin: <code>fab fa-linkedin</code></li><li>Tumblr: <code>fab fa-tumblr</code></li><li>Medium: <code>fab fa-medium</code></li><li>Slack: <code>fab fa-slack</code></li><li>Sina Weibo: <code>fab fa-weibo</code></li><li>Wechat: <code>fab fa-weixin</code></li><li>QQ: <code>fab fa-qq</code></li><li>Zhihu: <code>fab fa-zhihu</code></li></ul><blockquote><p><strong>注意</strong>: 本主题中使用的 <code>Font Awesome</code> 版本为 <code>5.11.0</code>。</p></blockquote><h3 id="修改打赏的二维码图片"><a href="#修改打赏的二维码图片" class="headerlink" title="修改打赏的二维码图片"></a>修改打赏的二维码图片</h3><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h3 id="配置音乐播放器（可选的）"><a href="#配置音乐播放器（可选的）" class="headerlink" title="配置音乐播放器（可选的）"></a>配置音乐播放器（可选的）</h3><p>要支持音乐播放，在主题的 <code>_config.yml</code> 配置文件中激活music配置即可：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 是否在首页显示音乐</span><span class="token key atrule">music</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span>         <span class="token comment"># 非吸底模式有效</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">show</span><span class="token punctuation">:</span> 听听音乐  <span class="token key atrule">server</span><span class="token punctuation">:</span> netease     <span class="token comment"># require music platform: netease, tencent, kugou, xiami, baidu</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> playlist    <span class="token comment"># require song, playlist, album, search, artist</span>  <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">6879270518</span>     <span class="token comment"># require song id / playlist id / album id / search keyword</span>  <span class="token key atrule">fixed</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>      <span class="token comment"># 开启吸底模式</span>  <span class="token key atrule">autoplay</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>   <span class="token comment"># 是否自动播放</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'#42b983'</span>  <span class="token key atrule">loop</span><span class="token punctuation">:</span> <span class="token string">'all'</span>       <span class="token comment"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>  <span class="token key atrule">order</span><span class="token punctuation">:</span> <span class="token string">'random'</span>   <span class="token comment"># 音频循环顺序, 可选值: 'list', 'random'</span>  <span class="token key atrule">preload</span><span class="token punctuation">:</span> <span class="token string">'auto'</span>   <span class="token comment"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  <span class="token key atrule">volume</span><span class="token punctuation">:</span> <span class="token number">0.7</span>       <span class="token comment"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  <span class="token key atrule">listFolded</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># 列表默认折叠</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>server</code>可选<code>netease</code>（网易云音乐），<code>tencent</code>（QQ音乐），<code>kugou</code>（酷狗音乐），<code>xiami</code>（虾米音乐），</p><p><code>baidu</code>（百度音乐）。</p><p><code>type</code>可选<code>song</code>（歌曲），<code>playlist</code>（歌单），<code>album</code>（专辑），<code>search</code>（搜索关键字），<code>artist</code>（歌手）</p><p><code>id</code>获取方法示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，浏览器地址栏后面会有一串数字，<code>playlist</code>的<code>id</code></p><p>即为这串数字。</p></blockquote><h2 id="文章-Front-matter-介绍"><a href="#文章-Front-matter-介绍" class="headerlink" title="文章 Front-matter 介绍"></a>文章 Front-matter 介绍</h2><h3 id="Front-matter-选项详解"><a href="#Front-matter-选项详解" class="headerlink" title="Front-matter 选项详解"></a>Front-matter 选项详解</h3><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code> 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><blockquote><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2">开源中国在线工具</a>、<a href="http://encode.chahuo.com/">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx">站长工具</a>。</li><li>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li></ol></blockquote><p>以下为文章的 <code>Front-matter</code> 示例。</p><h3 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token key atrule">author</span><span class="token punctuation">:</span> 赵奇<span class="token key atrule">img</span><span class="token punctuation">:</span> /source/images/xxx.jpg<span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">cover</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">coverImg</span><span class="token punctuation">:</span> /images/1.jpg<span class="token key atrule">password</span><span class="token punctuation">:</span> 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92<span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">summary</span><span class="token punctuation">:</span> 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要<span class="token key atrule">categories</span><span class="token punctuation">:</span> Markdown<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Typora  <span class="token punctuation">-</span> Markdown<span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="效果截图"><a href="#效果截图" class="headerlink" title="效果截图"></a>效果截图</h2><p><img src="http://static.blinkfox.com/matery-20181202-1.png" alt="首页"></p><p><img src="http://static.blinkfox.com/matery-20181202-2.png" alt="首页推荐文章"></p><p><img src="http://static.blinkfox.com/matery-20181202-3.png" alt="首页文章列表"></p><p><img src="http://static.blinkfox.com/matery-20181202-7.png" alt="首页文章列表"></p><p><img src="http://static.blinkfox.com/matery-20181202-8.png" alt="首页文章列表"></p><h2 id="自定制修改"><a href="#自定制修改" class="headerlink" title="自定制修改"></a>自定制修改</h2><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p><ul><li>菜单</li><li>我的梦想</li><li>首页的音乐播放器和视频播放器配置</li><li>是否显示推荐文章名称和按钮配置</li><li><code>favicon</code> 和 <code>Logo</code></li><li>个人信息</li><li>TOC 目录</li><li>文章打赏信息</li><li>复制文章内容时追加版权信息</li><li>MathJax</li><li>文章字数统计、阅读时长</li><li>点击页面的’爱心’效果</li><li>我的项目</li><li>我的技能</li><li>我的相册</li><li><code>Gitalk</code>、<code>Gitment</code>、<code>Valine</code> 和 <code>disqus</code> 评论配置</li><li><a href="http://busuanzi.ibruce.info/">不蒜子统计</a>和谷歌分析（<code>Google Analytics</code>）</li><li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 <code>hashcode</code> 值取余，来选择展示对应的特色图</li></ul><p><strong>我认为个人博客应该都有自己的风格和特色</strong>。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 <code>_config.yml</code> 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：</p><h3 id="修改主题颜色"><a href="#修改主题颜色" class="headerlink" title="修改主题颜色"></a>修改主题颜色</h3><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */</span><span class="token selector">.bg-color</span> <span class="token punctuation">{</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span> #4cbf30 0%<span class="token punctuation">,</span> #0f9d58 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@-webkit-keyframes</span> rainbow</span> <span class="token punctuation">{</span>   <span class="token comment">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@keyframes</span> rainbow</span> <span class="token punctuation">{</span>    <span class="token comment">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改-banner-图和文章特色图"><a href="#修改-banner-图和文章特色图" class="headerlink" title="修改 banner 图和文章特色图"></a>修改 banner 图和文章特色图</h3><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.bg-cover'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background-image'</span><span class="token punctuation">,</span> <span class="token string">'url(/medias/banner/'</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.jpg)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p><h2 id="版本变更记录"><a href="#版本变更记录" class="headerlink" title="版本变更记录"></a>版本变更记录</h2><p>参见 <a href="https://github.com/blinkfox/hexo-theme-matery/blob/master/README.md">CHANGELOG.md</a></p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>五种状态码</title>
      <link href="/2021/07/25/wu-chong-zhuang-tai-ma/"/>
      <url>/2021/07/25/wu-chong-zhuang-tai-ma/</url>
      
        <content type="html"><![CDATA[<h2 id="状态码"><a href="#状态码" class="headerlink" title="状态码"></a>状态码</h2><h3 id="一、100-状态码"><a href="#一、100-状态码" class="headerlink" title="一、100 状态码"></a>一、100 状态码</h3><p>101 - 网页本身的错误<br>104 - 未知错误 - 应该是这种吧!curl:OpenSSL SSL_read: 连接被对方重设, errno 104 应该可以理解成链接过期了吧! 为了防止DDoS攻击,很多下载链接都带有时效了!变成临时链接</p><h3 id="二、200-状态码：成功-2××：成功处理了请求的状态码"><a href="#二、200-状态码：成功-2××：成功处理了请求的状态码" class="headerlink" title="二、200 状态码：成功 2××：成功处理了请求的状态码"></a>二、200 状态码：成功 2××：成功处理了请求的状态码</h3><p>200 - 服务器成功返回网页<br>204 - 服务器成功处理了请求，但没有返回任何内容</p><h3 id="三、300-状态码：重定向3××：每次请求中使用重定向不要超过-5-次"><a href="#三、300-状态码：重定向3××：每次请求中使用重定向不要超过-5-次" class="headerlink" title="三、300 状态码：重定向3××：每次请求中使用重定向不要超过 5 次"></a>三、300 状态码：重定向3××：每次请求中使用重定向不要超过 5 次</h3><p>301 - 请求的网页已永久移动到新位置。当URLs发生变化时，使用301代码。搜索引擎索引中保存新的URL<br>302 - 请求的网页临时移动到新位置。搜索引擎索引中保存原来的URL<br>304 - 客户端已经执行了GET，但文件变化 - 如果网页自请求者上次请求后没有更新，则用304代码告诉搜索引擎机器人，可节省带宽和开销</p><h3 id="四、400-状态码：客户端错误4××-：表示请求可能出错，妨碍了服务器的处理"><a href="#四、400-状态码：客户端错误4××-：表示请求可能出错，妨碍了服务器的处理" class="headerlink" title="四、400 状态码：客户端错误4×× ：表示请求可能出错，妨碍了服务器的处理"></a>四、400 状态码：客户端错误4×× ：表示请求可能出错，妨碍了服务器的处理</h3><p>400 - 服务器不理解请求的语法<br>403 - 服务器拒绝请求<br>404 - 请求的网页不存在 - 服务器找不到请求的网页。服务器上不存在的网页经常会返回此代码<br>410 - 请求的资源永久删除后，服务器返回此响应。该代码与404（未找到）代码相似，但在资源以前存在而现在不存在的情况下，有时用来替代404 页面代码。如果资源已永久删除，应当使用 301 指定资源的新位置</p><h3 id="五、500-状态码：服务器错误5××-：表示服务器在处理请求时发生内部错误。这些错误可能是服务器本身的错误，而不是请求出错。"><a href="#五、500-状态码：服务器错误5××-：表示服务器在处理请求时发生内部错误。这些错误可能是服务器本身的错误，而不是请求出错。" class="headerlink" title="五、500 状态码：服务器错误5×× ：表示服务器在处理请求时发生内部错误。这些错误可能是服务器本身的错误，而不是请求出错。"></a>五、500 状态码：服务器错误5×× ：表示服务器在处理请求时发生内部错误。这些错误可能是服务器本身的错误，而不是请求出错。</h3><p>500 - 服务器遇到错误，无法完成请求<br>502 - 错误网关；无效网关；在互联网中表示一种网络错误。表现在WEB浏览器中给出的页面反馈<br>503 - 服务器超时 - 服务器目前无法使用（由于超载或停机维护）</p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github</title>
      <link href="/2021/07/25/github/"/>
      <url>/2021/07/25/github/</url>
      
        <content type="html"><![CDATA[<p><img src="http://ytlgithub.github.io/medias/ytlimg/en.jpg" alt="首页"></p>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git</title>
      <link href="/2021/07/25/git/"/>
      <url>/2021/07/25/git/</url>
      
        <content type="html"><![CDATA[<h2 id="git命令"><a href="#git命令" class="headerlink" title="git命令"></a>git命令</h2><h3 id="一-安装git"><a href="#一-安装git" class="headerlink" title="一.安装git"></a>一.安装git</h3><h4 id="Linux上安装："><a href="#Linux上安装：" class="headerlink" title="Linux上安装："></a>Linux上安装：</h4><p>命令：yum install git<br>验证安装是否成功命令:git –version</p><h4 id="Windows上安装："><a href="#Windows上安装：" class="headerlink" title="Windows上安装："></a>Windows上安装：</h4><p><a href="https://git-scm.com/">Git</a>官网直接下载安装程序，然后默认安装即可<br>安装完之后桌面右击会出现两个图标分别是：Git GUIhere 和 Git Bash Here<br>一般习惯性用git bash here<br>最后一步设置标识，输入如下命令：<br>git config –global user.name “你的名字”<br>git config –global user.email “你的邮箱”</p><h3 id="二-git流程"><a href="#二-git流程" class="headerlink" title="二.git流程"></a>二.git流程</h3><pre class="line-numbers language-text" data-language="text"><code class="language-text">Remote---pull-------------------------------------------------&gt;workspaceRemote---fetch/clone---&gt;Repository---checkout-----------------&gt;workspaceRemote&lt;--push-----------Repository&lt;---commit---index&lt;---add&lt;---workspace* workspace:工作区* index/stage:暂存区* repository：本地仓库* remote；远程仓库<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三-如何使用"><a href="#三-如何使用" class="headerlink" title="三.如何使用"></a>三.如何使用</h3><h4 id="1-创建或者获取版本库"><a href="#1-创建或者获取版本库" class="headerlink" title="1.创建或者获取版本库"></a>1.创建或者获取版本库</h4><p>创建本地库，选择一个文件目录，然后右击git bash命令行窗口，执行如下命令初始化一个本地仓库</p><pre class="line-numbers language-gitbash" data-language="gitbash"><code class="language-gitbash">git init  # 在当前目录初始化git init "新仓库名"  # 创建一个新的文件夹做仓库<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="2-获取远程仓库至本地仓库"><a href="#2-获取远程仓库至本地仓库" class="headerlink" title="2.获取远程仓库至本地仓库"></a>2.获取远程仓库至本地仓库</h4><pre class="line-numbers language-gitbash" data-language="gitbash"><code class="language-gitbash">git clone git://github.com/YtlGitHub/YtlGit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里获取远程仓库我用的是ssh密钥的方式，获取密钥方式如下</p><pre class="line-numbers language-gitbash" data-language="gitbash"><code class="language-gitbash">ssh-keygen -t rsa -C "176@qq.com"  # 这里输入你自己的邮箱cat ~/.ssh/id_rsa.pub  # 查看生产的密钥<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>id_esa 是私钥<br>id_rsa.pub 是公钥<br>在GitHub 头像点击设置里面添加ssh</p><h4 id="3-检查当前文件状态"><a href="#3-检查当前文件状态" class="headerlink" title="3.检查当前文件状态"></a>3.检查当前文件状态</h4><pre class="line-numbers language-gitbash" data-language="gitbash"><code class="language-gitbash">git status<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="4-把更改的内容添加到暂存区"><a href="#4-把更改的内容添加到暂存区" class="headerlink" title="4.把更改的内容添加到暂存区"></a>4.把更改的内容添加到暂存区</h4><p>三种方式添加</p><pre class="line-numbers language-gitbash" data-language="gitbash"><code class="language-gitbash">git add filename  # (指定文件名)git add *  # (所有文件)git add *.txt  # (支持通配符，所有.txt文件)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>此时，暂存区的内容和工作区的内容一致</p><h4 id="5-提交到本地仓库"><a href="#5-提交到本地仓库" class="headerlink" title="5.提交到本地仓库"></a>5.提交到本地仓库</h4><pre class="line-numbers language-gitbash" data-language="gitbash"><code class="language-gitbash">git commit -m "代码提交信息"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意：每次提交前，先用git status看下，是不是都已暂存起来了，然后在执行提交命令</p><h4 id="6、跳过暂存区域的提交方法"><a href="#6、跳过暂存区域的提交方法" class="headerlink" title="6、跳过暂存区域的提交方法"></a>6、跳过暂存区域的提交方法</h4><pre class="line-numbers language-gitbash" data-language="gitbash"><code class="language-gitbash">git commit -a -m "代码提交信息"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>git commit 加上-a 选项，git 就会把自动把所有已经跟踪过的文件暂存起来一并提交。从而跳过add</p><h4 id="7-查看工作区和版本库里面最新版本的区"><a href="#7-查看工作区和版本库里面最新版本的区" class="headerlink" title="7.查看工作区和版本库里面最新版本的区"></a>7.查看工作区和版本库里面最新版本的区</h4><pre class="line-numbers language-gitbash" data-language="gitbash"><code class="language-gitbash">git diff HEAD -- filename<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="8-移除文件："><a href="#8-移除文件：" class="headerlink" title="8.移除文件："></a>8.移除文件：</h4><pre class="line-numbers language-gitbash" data-language="gitbash"><code class="language-gitbash">git rm filename<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="9-对文件重命名"><a href="#9-对文件重命名" class="headerlink" title="9.对文件重命名"></a>9.对文件重命名</h4><pre class="line-numbers language-gitbash" data-language="gitbash"><code class="language-gitbash">git mv README.*** README<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>(这个命令相当于 mv README.*** README、git rm README.***、git add README 这三条命令的集合)</p><h4 id="10-查看提交历史"><a href="#10-查看提交历史" class="headerlink" title="10.查看提交历史"></a>10.查看提交历史</h4><pre class="line-numbers language-gitbash" data-language="gitbash"><code class="language-gitbash">git loggit log --pretty=oneline<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="11-版本回退"><a href="#11-版本回退" class="headerlink" title="11.版本回退"></a>11.版本回退</h4><pre class="line-numbers language-gitbash" data-language="gitbash"><code class="language-gitbash">git reaet --hard HEAD^  # 回退到上一个版本git reaet --hard HEAD^^  # 回退到上上版本git reaet --hard HEAD~100  # 回退到前100个版本git reaet --hare HEAD 版本号  # 回退到固定版本号git reflog  # 记录每一次命令(可查看版本号)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="12-与远程仓库建立连接"><a href="#12-与远程仓库建立连接" class="headerlink" title="12.与远程仓库建立连接"></a>12.与远程仓库建立连接</h4><pre class="line-numbers language-gitbash" data-language="gitbash"><code class="language-gitbash">git remote add origin git@github.com:YtlGitHub/YtlGit.git  # 自己仓库的ssh路径<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="13-如果已经关联了远程仓库，可以使用下述命令查看远程仓库是哪个"><a href="#13-如果已经关联了远程仓库，可以使用下述命令查看远程仓库是哪个" class="headerlink" title="13.如果已经关联了远程仓库，可以使用下述命令查看远程仓库是哪个"></a>13.如果已经关联了远程仓库，可以使用下述命令查看远程仓库是哪个</h4><pre class="line-numbers language-gitbash" data-language="gitbash"><code class="language-gitbash">git remote -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="14-然后将本地的改动提交到远程仓库"><a href="#14-然后将本地的改动提交到远程仓库" class="headerlink" title="14.然后将本地的改动提交到远程仓库"></a>14.然后将本地的改动提交到远程仓库</h4><pre class="line-numbers language-gitbash" data-language="gitbash"><code class="language-gitbash">git push origin 分支名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="其他分支提交方法"><a href="#其他分支提交方法" class="headerlink" title="其他分支提交方法"></a>其他分支提交方法</h4><pre class="line-numbers language-gitbash" data-language="gitbash"><code class="language-gitbash">15、创建一个分支dev    git branch dev    git branch 后面不加分支的名字就是查看当前分支16、切换到当前分支    git checkout dev17、创建并切换分支    git checkout -b dev18、切换到主分支    git checkout master19、合并dev分支到master(可能会有冲突)    git merge dev 或git merge dev --allow-unrelated-histories20、把刚才新建的分支删除    git branch -d dev21、将分支推送到远端仓库（推送成功后其他人可见）    git push origin 分支名    git remote set-url origin https://github.com/YtlGitHub/YtlGit.git    git push origin main22、如果push失败了，那就先pull一下，在push    git pull<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ytljava</title>
      <link href="/2021/07/25/ytljava/"/>
      <url>/2021/07/25/ytljava/</url>
      
        <content type="html"><![CDATA[<h2 id="java"><a href="#java" class="headerlink" title="java"></a>java</h2><h3 id="—JAVA格式—"><a href="#—JAVA格式—" class="headerlink" title="—JAVA格式—"></a>—JAVA格式—</h3><p>public class HelloWorld {<br>    public static void main(String[] args){<br>        System.out.println(“HelloWorld”);<br>    }<br>}</p><h3 id="IDEA安装地址："><a href="#IDEA安装地址：" class="headerlink" title="IDEA安装地址："></a>IDEA安装地址：</h3><p><a href="https://www.jetbrains.com/idea/">https://www.jetbrains.com/idea/</a></p><h3 id="IDEA项目结构："><a href="#IDEA项目结构：" class="headerlink" title="IDEA项目结构："></a>IDEA项目结构：</h3><p>1 创建一个空项目(javaSE_Code)<br>2 创建一个新模块(ide_test)<br>3 在idea_test模块下的src下创建一个包(com.itheima)<br>4 在com.itheima包下新建一个类(HelloWorld)<br>5 在HelloWorld类中编写代码<br>6 在idea中执行程序</p><h3 id="IDEA中内容辅助键和快捷键"><a href="#IDEA中内容辅助键和快捷键" class="headerlink" title="IDEA中内容辅助键和快捷键"></a>IDEA中内容辅助键和快捷键</h3><p>1 快速生成语句<br>    psvm：快速生成main(方法)<br>    sout：快速生成输出语句<br>2 内容辅助快捷键<br>    Ctrl+Alt+space: 内容提示，代码补全<br>3 快捷键<br>    注释：<br>        Ctrl+/: 选中代码单行注释<br>        Ctrl+Shift+/：选中多行代码注释</p><h3 id="IDEA中模块操作分类"><a href="#IDEA中模块操作分类" class="headerlink" title="IDEA中模块操作分类"></a>IDEA中模块操作分类</h3><p>1 新建模块<br>    “File”<del>“Project Structure”</del>“Modules”<del>“+”</del>“New Module”<del>“java”</del>“JDK自己选”<del>“Next”</del>“修改模块名”<del>“Finish”</del>“OK”<br>2 删除模块<br>    “选中要删除的模块右键”<del>“Remove Module”</del>“Remove” 注意这里只是移除，模块文件是还在的，要想彻底清除，就要找到路径下删除。<br>3 快捷打开模块目录路径<br>    “随便选中一个模块右键”<del>“Open in”</del>“Explorer”<br>4 导入模块<br>    “File”<del>“Project Structure”</del>“Modules”<del>“+”</del>“Import Module”<del>“选择你要导入的模块”</del>“OK”<del>“Next”</del>“Next”<del>“Next”</del>“Finish”~”OK”</p><h3 id="java-1"><a href="#java-1" class="headerlink" title="java"></a>java</h3><h4 id="一-注释"><a href="#一-注释" class="headerlink" title="一.注释"></a>一.注释</h4><p>1.单行注释：//注释信息<br>2.多行注释：/<em>注释信息</em>/<br>3.文档注释：/*<em>注释信息</em>/</p><h4 id="二-关键字"><a href="#二-关键字" class="headerlink" title="二.关键字"></a>二.关键字</h4><p>1.关键字的字母全部小写<br>2.常用的代码编辑器，针对关键字有特殊的颜色标记，非常直观</p><h4 id="三-常量"><a href="#三-常量" class="headerlink" title="三.常量"></a>三.常量</h4><p>常量定义：在程序运行过程中，其值不可以发生改变的量<br>常量分类：<br>    1.字符串常量 说明(用双引号括起来的内容) 举例(“HelloWorld”,”黑马程序员”)<br>    2.整数常量   说明(不带小数的数字)       举例(666,-88)<br>    3.小数常量   说明(带小数的数字)         举例(13.14,-5.21)<br>    4.字符常量   说明(用单引号括起来的内容) 举例(‘A’,’0’,’我’)<br>    5.布尔常量   说明(布尔值，表示真假)     举例(只有两个值：true,false)<br>    6.空常量     说明(一个特殊的值，空值)   举例(值是：null)</p><h4 id="四-数据类型"><a href="#四-数据类型" class="headerlink" title="四.数据类型"></a>四.数据类型</h4><p>1.计算机存储单元，计算机存储设备的最小信息单元叫”位(bit)”，称之为”比特位”，通常用小写字母”b”表示<br>                计算机中最小的存储存储单元叫”字节(byte)”,用大写字母”B”表示，字节是由连续的8个位组成<br>    除了字节外还有一些常用的存储单位<br>    1B(字节) = 8bit<br>    1KB = 1024B<br>    1MB = 1024KB<br>    1GB = 1024MB<br>    1TB = 1024GB<br>2.数据类型内存占用和取值范围<br>    (1)整数4个关键字分别为<br>        byte    内存(1) 取值范围(-128<del>127)<br>        short   内存(2) 取值范围(-32768</del>32767)<br>        int     内存(4) 取值范围(-2的31次方到2的31次方-1)<br>        long    内存(8) 取值范围(-2的63次方到2的63次方-1)<br>    (2)浮点数2个关键字<br>        float   内存(4) 取值范围(负数：-3.402823E+38到-1.401298E-45 正数：1.101298E-45到3.402828E+38)<br>        double  内存(8) 取值范围(负数：-1.797693E+308到-4.9000000E-324 正数：4.9000000E-324到1.797693E+308)<br>    (3)字符1个关键字<br>        char    内存(2) 取值范围(0-65535)<br>    (4)布尔1个关键字<br>        boolean 内存(1) 取值范围(true,false)<br>    (说明：E+38表示是乘以10的38次方，同样，E-45表示乘以10的负45次方)<br>    (细节：如果给一个整数默认的是int类型的，给一个浮点数默认的是double类型的)</p><h4 id="五-变量"><a href="#五-变量" class="headerlink" title="五.变量"></a>五.变量</h4><p>变量定义：<br>    格式：数据类型变量名 = 变量值;<br>    范例：int a = 10;<br>变量的使用：<br>    取值格式：变量名<br>    范例：a<br>    修改值格式：变量名 = 变量值;<br>    范例：a = 20;<br>注意事项：<br>    (1)变量名不能重复<br>        范例：<br>            int a = 10;<br>            int a = 20;<br>    (2)变量未赋值，不能使用<br>        范例：<br>            int a;<br>    (3)long类型的变量定义时，为了防止整数过大，后面需要L/l<br>        范例：<br>            long b = 10000000000l;<br>            System.out.println(b);<br>    (4)float类型的变量定义的时候，为了防止类型不兼容，后面需要加F/f<br>        范例：<br>            float c = 13.14F;<br>            System.out.println(c);</p><h4 id="六-标识符"><a href="#六-标识符" class="headerlink" title="六.标识符"></a>六.标识符</h4><p>标识符概述：就是给类，方法，变量等起名的符号<br>1.标识符定义规则<br>    (1)由数字、字母、下划线(_)、和美元符($)组成<br>    (2)不能以数字开头<br>    (3)不能是关键字<br>    (4)区分大小写<br>    判断：<br>        bj(符合)    b2(符合)    2b(不符合)<br>        class(不符合) _2b(符合)   #itheima(不符合)<br>        ak47(符合)  Class(符合) helloworld(符合)<br>        aaaaaa(符合但不规范不利于名字区分)<br>        aaaaaaa(符合但不规范不利于名字区分)<br>2.常见命名约定<br>    (1)小驼峰命名法：方法、变量<br>        * 约定1：标识符是一个单词的时候，首字母小写<br>        * 范例1：name<br>        * 约定2：标识符由多个字母单词组成的时候，第一个单词首字母小写，其他单词首字母大写<br>        * 范例1：firstName<br>    (2)大驼峰命名法：类<br>        * 约定1：标识符是一个单词的时候，首字大母<br>        * 范例1：Student<br>        * 约定2：标识符由多个字母单词组成的时候，每个单词的首字母大写<br>        * 范例2：GoodStudent</p><h4 id="七-类型转换"><a href="#七-类型转换" class="headerlink" title="七.类型转换"></a>七.类型转换</h4><p>1.自动类型转换：把一个表示数据范围小的数值或者变量赋值给另一个表示数据范围大的变量<br>    范例1：double d = 10;<br>    数据范围从小到大：<br>        byte &lt; short &lt; int &lt; long &lt; float &lt; double<br>                char &lt; int &lt; long &lt; float &lt; double<br>2.强制类型转换：把一个表示数据范围大的数值或者变量赋值给另一个表示数据范围小的变量<br>    * 格式：目标数据类型 变量名 = (目标数据类型)值或者变量<br>    * 范例1：int k = (int)88.88;</p><h4 id="八-算术运算符"><a href="#八-算术运算符" class="headerlink" title="八.算术运算符"></a>八.算术运算符</h4><p>1.运算符和表达式<br>    * 运算符：对常量或者变量进行操作的符号<br>    * 表达式：用运算符把常量或者变量连接起来符号java语法的式子就可以称为表达式<br>              不同运算符连接起来的表达式体现的是不同类型的表达式<br>    * 举例说明：<br>                int a = 10;<br>                int b = 20;<br>                int c = a + b;<br>                +；是运算符，并且是算术运算符<br>                a+b：是表达式，由于+是算术运算符，所以这个表达式叫算术表达式<br>2.算术运算符<br>    符号    作用    说明<br>    +       加<br>    -        减<br>    *        乘<br>    /        除<br>    %        取余    获取两个数据做除法的余数<br>    注意事项：<br>        /和%的区别：两个数据做除法，/取结果的商，%取结果的余数<br>        整数操作只能的到整数，要想得到小数，必须有浮点数参与运算<br>3.字符+的操作<br>    拿字符在计算机底层对应的数值来进行计算的<br>        ‘A’ == 65  A-Z是连续的<br>        ‘a’ == 97  a-z是连续的<br>        ‘0’ == 48  0-9是连续的<br>    算术表达式中包含多个基本数据类型的值的时候。整个算术表达式的类型会自动进行提升<br>    提升规则：<br>        * byte类型，short类型和char类型将被提升到int类型<br>        * 整个表达式的类型自动提升到表达式中最高等级操作同样的类型<br>            等级顺序：byte,short,char -&gt; int -&gt; long -&gt; float -&gt; double</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ytlpython</title>
      <link href="/2021/07/25/ytlpython/"/>
      <url>/2021/07/25/ytlpython/</url>
      
        <content type="html"><![CDATA[<p>ytlpython</p><h2 id="一-代码"><a href="#一-代码" class="headerlink" title="一.代码"></a>一.代码</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> time<span class="token keyword">import</span> os<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"hello word"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ytlmysql</title>
      <link href="/2021/07/25/ytlmysql/"/>
      <url>/2021/07/25/ytlmysql/</url>
      
        <content type="html"><![CDATA[<h2 id="ytlmysql"><a href="#ytlmysql" class="headerlink" title="ytlmysql"></a>ytlmysql</h2><h3 id="一-连接MySQL服务-MySQL数据库-的指令-查询电脑ip命令-ipconfig"><a href="#一-连接MySQL服务-MySQL数据库-的指令-查询电脑ip命令-ipconfig" class="headerlink" title="一.连接MySQL服务(MySQL数据库)的指令,查询电脑ip命令(ipconfig)"></a>一.连接MySQL服务(MySQL数据库)的指令,查询电脑ip命令(ipconfig)</h3><p>mysql - h 主机IP -P 端口 -u 用户名 -p密码<br>提醒:<br>(1)-p密码不要有空格,<br>(2)-p后面没有输入密码,回车会要求输入密码<br>(3)如果没有写-h 主机ip,默认就是主机<br>(4)如果没有写-p 端口,默认就是3306<br>(5)在实际工作中,3306一般会修改<br>(6)登入之前确保MySQL服务是启动状态 net start mysql 启动服务 net stop mysql 停止服务</p><h3 id="二-查看数据"><a href="#二-查看数据" class="headerlink" title="二.查看数据:"></a>二.查看数据:</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">show databasesuse mysqlshow tables;select * from user;  # 查询user表<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三-创建数据库"><a href="#三-创建数据库" class="headerlink" title="三.创建数据库:"></a>三.创建数据库:</h3><p>create database db02;  # 创建db02数据库,并设置自增，设置id为主键<br>use db02<br>create table users (id int primary key auto_increment not null, name varchar(255), address varchar(255));  # 创建表格<br>insert into users values(1,’tom’,’bj’);  # 插入数据<br>insert into users values(2,’jack’,’sh’);  # 插入数据<br>insert into users values(3,’shunping’,’gz’);  # 插入数据<br>select * from users;  # 查询users表格数据<br>指令创建表,格式如下:注意(字体变蓝说明是个关键字,我们应该加个反引号``这个引起来)</p><pre class="line-numbers language-MySQL" data-language="MySQL"><code class="language-MySQL">CREATE TABLE `表名`(指定列名1 指定列类型(字段类型),id int primary key auto_increment not null,`password` VARCHAR(255),`birthday` DATE)CHARACTER SET utf8 COLLATE utf8_bin ENGINE INNODB;character set:字符集,如不指定测为所在数据库字符集,].collate:校对规则,如不指定则为所在数据库校对规则.engine:存储引擎,涉及内容较多.id        整形(int)name      字符串(varchar(225))password  字符串(varchar(255))birthday  日期(date)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-MySQL" data-language="MySQL"><code class="language-MySQL">CREATE TABLE `user02`(id INT primary key auto_increment not null,`name` VARCHAR(255),`password` VARCHAR(255),`birthday` DATE)CHARACTER SET utf8 COLLATE utf8_bin ENGINE INNODB;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>删除主键</p><pre class="line-numbers language-MySQL" data-language="MySQL"><code class="language-MySQL">ALTER TABLE `table_name` DROP PRIMARY KEY;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在已有得表里添加主键</p><pre class="line-numbers language-MySQL" data-language="MySQL"><code class="language-MySQL">ALTER TABLE `table_name` ADD PRIMARY KEY(id);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>添加自动递增AUTO_INCREMENT</p><pre class="line-numbers language-MySQL" data-language="MySQL"><code class="language-MySQL">alter table table_name add column `id` bigint(20) NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '自增id' first;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>增加两个字段</p><pre class="line-numbers language-MySQL" data-language="MySQL"><code class="language-MySQL">alter table table_name add age int,add address varchar(11);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在指定的一个字段后面添加一个字段</p><pre class="line-numbers language-MySQL" data-language="MySQL"><code class="language-MySQL">alert table 表名  add 新列名 类型 comment '添加备注' after  要跟随的字段名 (可写可不写)alter table user add sex int comment '性别' after nickname;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>删除字段</p><pre class="line-numbers language-MySQL" data-language="MySQL"><code class="language-MySQL">alter table table_name drop column id;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改字段</p><pre class="line-numbers language-MySQL" data-language="MySQL"><code class="language-MySQL">alter table table_name modify `字段` varchar(25);  # 修改一个字段的类型alter table table_name change `字段` `字段新名` int;  # 修改一个字段的名称，此时一定要重新指定该字段的类型<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="四-备份恢复数据库或者表"><a href="#四-备份恢复数据库或者表" class="headerlink" title="四.备份恢复数据库或者表:"></a>四.备份恢复数据库或者表:</h3><p>(1)备份数据库(注意:在DOS执行,后面不带分号)</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">mysqldump -u 用户名 -p -B 数据库1 数据库2 数据库n &gt; d:\\path文件名.sql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>(2)备份库的表:(注意:备份表不要-B)</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">mysqldump -u 用户名 -p密码 数据库名 表名1 表名2 表名n &gt; d:\\path文件名.sql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>(3)恢复数据库(注意:进入mysql里面在执行,先创建新的数据库名,在在这个库名下面备份数据)</p><pre class="line-numbers language-MySQL" data-language="MySQL"><code class="language-MySQL">create database 新库名;use 新库名;Source d:\\path文件名.sql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><a href="https://www.cnblogs.com/gslgb/p/13210800.html">误删或者吴修改日志找回链接</a></p><h3 id="五-删除数据库里面的表"><a href="#五-删除数据库里面的表" class="headerlink" title="五.删除数据库里面的表:"></a>五.删除数据库里面的表:</h3><pre class="line-numbers language-MySQL" data-language="MySQL"><code class="language-MySQL">drop table 表名:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="六-删除数据库-注意-进入mysql在执行-慎重使用"><a href="#六-删除数据库-注意-进入mysql在执行-慎重使用" class="headerlink" title="六.删除数据库(注意:进入mysql在执行,慎重使用.)"></a>六.删除数据库(注意:进入mysql在执行,慎重使用.)</h3><pre class="line-numbers language-MySQL" data-language="MySQL"><code class="language-MySQL">drop database 库名;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="七-数据库的增删改查"><a href="#七-数据库的增删改查" class="headerlink" title="七.数据库的增删改查"></a>七.数据库的增删改查</h3><h4 id="1-增"><a href="#1-增" class="headerlink" title="1.增"></a>1.增</h4><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">1、向所有列插入数据--into关键字可以省略insert    into    表名  values（列值1，列值2，……）insert    into  studentinfo  values（‘004’，‘张鑫’，19，‘北京海淀’）2、向指定列插入数据--into关键字可以省略，不提供值的列一定是可以为空的列（null），列名的顺序可以与表结构中的顺序不同，只要列值的顺序与之对应就行insert    studentinfo（姓名，学号）  values（‘王强’，‘006’）insert  into  表名（列名1，列名2，……） values（列值1，列值2，……）insert    into  studentinfo（学号，姓名）  values（‘005’，‘李清’identity--相同：对于标识列，因为是自动增长的，所以不能指定值default--系统设定值：具有缺省值的列，可以使用default关键字来替代插入的数据<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-删"><a href="#2-删" class="headerlink" title="2.删"></a>2.删</h4><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">删除表中数据--from关键字可以省略，如果不指定where条件，将把表中所有记录都删除掉（很危险！），如果使用where指定条件，则满足条件的记录被删除不能只删除半行或某几列数据delete-删除   from   Tab1delete   book  where  bid='s0000'truncate-删除所有   table 表名--不能指定条件，只能删除所有数据，所以功能等价于“delate  表名”的语句 优点：速度更快，使用的系统资源和事务日志资源更少缺点：不会将删除每一条记录的操作记录到日志中，所以一旦删除，则无法通过日志恢复删除的数据drop-删除    database-数据库 表名--删除数据库名drop table-表 表名--删除表结构<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-改"><a href="#3-改" class="headerlink" title="3.改"></a>3.改</h4><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">update--更新 表名 set--日落 列名1=该列新值，列名2=该列新值，......where 条件update 表名 set salary=salary+100--表述每行工资都加100update book set pub='新华出版社'   where    Bname='娱乐天地‘--更新指定的记录update book set author2='江泽民',numinput=100,numstore=100 where author1='邓小平'--同时更新多个字段<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-查"><a href="#4-查" class="headerlink" title="4.查"></a>4.查</h4><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">select * from 表名--查询所有记录select 列名1，列名2，…… from 表名--查询指定的列，列的顺序可以与表结构的顺序不同，列之间使用逗号分隔select Cid, address, Cname, Phone  from  customerselect 列名1 as 列别名1，列名2 as 列别名2，…… from 表名--重新为列指定列名，as关键字可以省略select Bname as 书名,Author1 as 作者,Pub as 出版社 from bookselect cid 学号,cname 姓名, address ,phone as 电话 from customerselect 列别名1=列名1，列别名2=列名2 ，…… from 表名--使用等于号重新为列指定列名select 书名=bname,书号=bid,pub from bookselect 列名1 +列名1 as 列别名，…… from 表名--可以把多列合并成一列显示select 列别名=列名1 +列名1 ,…… from 表名select 列名1 ，列名2 ，常量值 as 列名 from 表名--使用常量select * from 表名 order by age asc--升序，salary desc--降序select * from 表名 where address like '深圳%'在mysql数据库中要查询前10条数据，不再使用top n语句，top n语句主要用在sqlserver数据库系统中，在mysql中一般使用 select * from 表名 limit 0,10 order by 字段 desc,如在学生表中查询年龄比较大的前10个学生，则这样写，select * from 学生表 limit 0,10 order by 年龄 desc。（一般使用这个 在后面加 limit 0,10）select top 5 * from customer （这个在sqlserver数据库中使用，在cmd使用无效）select * from table_name limit 0,10 (0代表从第几行开始，10代表显示多少行)select * from book where numstore between 20 and 30 select * from book where id in （'a0001','a0002'）合函数方便进行数据统计聚合函数不能在 where 中使用 常用聚合函数 count(): 查询总记录数 ：查询学生总数 select count(*) from students;max(): 查询最大值 ：查询女生的最大年龄 select max(age) from students where sex='女'; min(): 查询最小值 ：查询1班的最小年龄 select min(age) from students;sum(): 求和 ：查询北京学生的年龄总和 select sum(age) from students where hometown='北京';avg(): 求平均值：查询女生的平均年龄 select avg(age) from students where sex='女' <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ytlmysql安装教程</title>
      <link href="/2021/07/24/ytlmysql-an-zhuang-jiao-cheng/"/>
      <url>/2021/07/24/ytlmysql-an-zhuang-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h2 id="ytlmysql安装"><a href="#ytlmysql安装" class="headerlink" title="ytlmysql安装"></a>ytlmysql安装</h2><h3 id="一-下载MySQL"><a href="#一-下载MySQL" class="headerlink" title="一.下载MySQL"></a>一.下载MySQL</h3><p>1.点击<a href="https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.19-winx64.zip">这里</a>下载mysql-5.7.19-winx64.zip压缩包<br>2.下载完之后解压到D:\ytlmysql\mysql-5.7.19-winx64目录下</p><h3 id="二-配置用户环境变量"><a href="#二-配置用户环境变量" class="headerlink" title="二.配置用户环境变量"></a>二.配置用户环境变量</h3><p>1.右击此电脑选择属性点击高级系统设置，点击高级最下面的环境变量<br>2.选择用户变量把路径配置到path：D:\ytlmysql\mysql-5.7.19-winx64\bin里面，之后点击确定关闭即可</p><h3 id="三-在本机配置MySQL"><a href="#三-在本机配置MySQL" class="headerlink" title="三.在本机配置MySQL"></a>三.在本机配置MySQL</h3><p>1.新建My.ini文件放到D:\ytlmysql\mysql-5.7.19-winx64\目录下<br>内容结构如下复制到My.ini文件里面就行</p><pre class="line-numbers language-My.ini" data-language="My.ini"><code class="language-My.ini">[client]port=3306  # 端口default-character-set=utf8  # 编码格式[mysqld]# 设置为自己的安装目录basedir=D:\ytlmysql\mysql-5.7.19-winx64\# 设置为MySQL的数据目录,这个目录是系统创建datadir=D:\ytlmysql\mysql-5.7.19-winx64\data\port=3306character_set_server=utf8# 开启日志server_id = 1log_bin = D:\ytlmysql\mysql-5.7.19-winx64\mysql-bin# 跳过安全检查# skip-grant-tables<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.以管理员的身份打开cmd,并切换到 cd /d D:\ytlmysql\mysql-5.7.19-winx64\bin\ 目录下,执行如下命令</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mysqld -install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如是新装的win10系统执行这个命令会报错，需另外安装<a href="https://github.com/YtlGitHub/YtlMySQL/blob/main/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/%E5%AE%89%E8%A3%85mysql%E5%87%BA%E9%94%99%E6%97%B6%E5%AE%89%E8%A3%85%E5%90%8E%E7%BD%AE%E5%B8%A6dll/vcredist_x64.exe">vcredist_x64.exe</a>插件，在执行这个命令就成功了<br>3.初始化数据库</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mysqld --initialize-insecure --user<span class="token operator">=</span>mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4.启动数据库</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">net start mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>5.停止数据库,这个先不关最后不用了在关</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">net stop mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="四-修改root密码"><a href="#四-修改root密码" class="headerlink" title="四.修改root密码"></a>四.修改root密码</h3><p>1.进入mysql管理终端:mysql -u root -p (当前root用户密码为空),不需要输入密码直接回车就可以进入mysql</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mysql -u root -p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2.修改root密码</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">use mysql<span class="token punctuation">;</span>update user <span class="token builtin class-name">set</span> <span class="token assign-left variable">authentication_string</span><span class="token operator">=</span>password<span class="token punctuation">(</span><span class="token string">"ytl"</span><span class="token punctuation">)</span>where <span class="token assign-left variable">user</span><span class="token operator">=</span><span class="token string">"root"</span> and <span class="token assign-left variable">Host</span><span class="token operator">=</span><span class="token string">"localhost"</span><span class="token punctuation">;</span>flush privileges<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>上面语句就行修改root用户的密码为ytl<br>注意在后面需要带’;’分号,回车执行指令<br>在执行flush privileges;刷新权限<br>最后退出quit,注意这里只是退出终端,但是MySQL服务是还在运行的.<br>3.回到D:\ytlmysql\mysql-5.7.19-winx64\目录下打开my.ini文件注销里面的# skip-grant-tables,注意修改完之后记得要重新启动才能生效.<br>4.注销后再执行net stop mysql停止MySQL,在执行net start mysql启动MySQL服务<br>5.安装完成</p><h3 id="五-进入本地mysql"><a href="#五-进入本地mysql" class="headerlink" title="五.进入本地mysql"></a>五.进入本地mysql</h3><p>现在重新进入MySQL,输入正确的用户和密码</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mysql -u root -p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="六-修改权限让其他用户也可以连接你的mysql"><a href="#六-修改权限让其他用户也可以连接你的mysql" class="headerlink" title="六.修改权限让其他用户也可以连接你的mysql"></a>六.修改权限让其他用户也可以连接你的mysql</h3><h4 id="1-改表法"><a href="#1-改表法" class="headerlink" title="1.改表法"></a>1.改表法</h4><p>可能是你的帐号不允许从远程登陆，只能在localhost。这个时候只要在localhost的那台电脑，登入mysql后，更改 “mysql” 数据库里的 “user” 表里的 “host” 项，从”localhost”改称”%”</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mysql -u root -pmysql<span class="token operator">&gt;</span>use mysql<span class="token punctuation">;</span>mysql<span class="token operator">&gt;</span>update user <span class="token builtin class-name">set</span> <span class="token function">host</span> <span class="token operator">=</span> <span class="token string">'%'</span> where user <span class="token operator">=</span> <span class="token string">'root'</span><span class="token punctuation">;</span>mysql<span class="token operator">&gt;</span>select host, user from user<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-授权法"><a href="#2-授权法" class="headerlink" title="2.授权法"></a>2.授权法</h4><p>(1)例如，你想用户’ytluser’使用密码’ytl’从任何主机连接到mysql服务器的话。</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">GRANT ALL PRIVILEGES ON *.* TO <span class="token string">'ytluser'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'ytl'</span> WITH GRANT OPTION<span class="token punctuation">;</span>FLUSH PRIVILEGES<span class="token punctuation">;</span>如果是新版mysql授权用户时报错问题：当我们新装的mysql，输入创建用户的命令后，提示语法错误，报错如下：mysql<span class="token operator">&gt;</span> grant all privileges on *.* to xma@<span class="token string">'%'</span> identified by <span class="token string">'myslag123!@#'</span><span class="token punctuation">;</span>ERROR <span class="token number">1064</span> <span class="token punctuation">(</span><span class="token number">42000</span><span class="token punctuation">)</span>: You have an error <span class="token keyword">in</span> your SQL syntax<span class="token punctuation">;</span> check the manual that corresponds to your MySQL server version <span class="token keyword">for</span> the right syntax to use near <span class="token string">'identified by '</span>myslag123<span class="token operator">!</span>@<span class="token comment">#'' at line 1</span>原因：因为新版的的mysql版本已经将创建用户和赋予权限的操作分开了，我们可以分两步进行操作。解决办法<span class="token number">1</span>.创建用户create user <span class="token string">'ytluser'</span>@<span class="token string">'%'</span> identified by <span class="token string">'ytl'</span><span class="token punctuation">;</span><span class="token number">2</span>.赋予授权grant all privileges on *.* to <span class="token string">'ytl'</span>@<span class="token string">'%'</span><span class="token punctuation">;</span><span class="token operator">&lt;</span>br<span class="token operator">&gt;</span><span class="token number">3</span>.刷新权限FLUSH PRIVILEGES<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>(2)如果你想允许用户ytluser从ip为10.127.56.177的主机连接到mysql服务器，并使用ytl作为密码</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">GRANT ALL PRIVILEGES ON *.* TO <span class="token string">'ytluser'</span>@<span class="token string">'10.127.56.177'</span> IDENTIFIED BY <span class="token string">'ytl'</span> WITH GRANT OPTION<span class="token punctuation">;</span>FLUSH PRIVILEGES<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>(3)如果你想允许用户ytluser从ip为192.168.1.6的主机连接到mysql服务器的db(库名)数据库，并使用ytl作为密码</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">GRANT ALL PRIVILEGES ON db.* TO <span class="token string">'ytluser'</span>@<span class="token string">'192.168.1.3'</span> IDENTIFIED BY <span class="token string">'ytl'</span> WITH GRANT OPTION<span class="token punctuation">;</span>FLUSH PRIVILEGES<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/07/19/hello-world/"/>
      <url>/2021/07/19/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hello World </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
