<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>github</title>
      <link href="/2021/07/25/github/"/>
      <url>/2021/07/25/github/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git</title>
      <link href="/2021/07/25/git/"/>
      <url>/2021/07/25/git/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ytljava</title>
      <link href="/2021/07/25/ytljava/"/>
      <url>/2021/07/25/ytljava/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ytlpython</title>
      <link href="/2021/07/25/ytlpython/"/>
      <url>/2021/07/25/ytlpython/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ytlmysql</title>
      <link href="/2021/07/25/ytlmysql/"/>
      <url>/2021/07/25/ytlmysql/</url>
      
        <content type="html"><![CDATA[<h2 id="ytlmysql"><a href="#ytlmysql" class="headerlink" title="ytlmysql"></a>ytlmysql</h2><h3 id="一-连接MySQL服务-MySQL数据库-的指令-查询电脑ip命令-ipconfig"><a href="#一-连接MySQL服务-MySQL数据库-的指令-查询电脑ip命令-ipconfig" class="headerlink" title="一.连接MySQL服务(MySQL数据库)的指令,查询电脑ip命令(ipconfig)"></a>一.连接MySQL服务(MySQL数据库)的指令,查询电脑ip命令(ipconfig)</h3><p>mysql - h 主机IP -P 端口 -u 用户名 -p密码<br>提醒:<br>(1)-p密码不要有空格,<br>(2)-p后面没有输入密码,回车会要求输入密码<br>(3)如果没有写-h 主机ip,默认就是主机<br>(4)如果没有写-p 端口,默认就是3306<br>(5)在实际工作中,3306一般会修改<br>(6)登入之前确保MySQL服务是启动状态 net start mysql 启动服务 net stop mysql 停止服务</p><h3 id="二-查看数据"><a href="#二-查看数据" class="headerlink" title="二.查看数据:"></a>二.查看数据:</h3><p>show databases<br>use mysql<br>show tables;<br>select * from user;  # 查询user表</p><h3 id="三-创建数据库"><a href="#三-创建数据库" class="headerlink" title="三.创建数据库:"></a>三.创建数据库:</h3><p>create database db02;  # 创建db02数据库<br>use db02<br>create table users (id int, name varchar(255), address varchar(255));  # 创建表格<br>insert into users values(1,’tom’,’bj’);  # 插入数据<br>insert into users values(2,’jack’,’sh’);  # 插入数据<br>insert into users values(3,’shunping’,’gz’);  # 插入数据<br>select * from users;  # 查询users表格数据<br>指令创建表,格式如下:注意(字体变蓝说明是个关键字,我们应该加个反引号``这个引起来)</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `表名`(</span><br><span class="line">指定列名1 指定列类型(字段类型),</span><br><span class="line">id int,</span><br><span class="line">`password` VARCHAR(255),</span><br><span class="line">`birthday` DATE)</span><br><span class="line">CHARACTER SET utf8 COLLATE utf8_bin ENGINE INNODB;</span><br><span class="line">character set:字符集,如不指定测为所在数据库字符集,].</span><br><span class="line">collate:校对规则,如不指定则为所在数据库校对规则.</span><br><span class="line">engine:存储引擎,涉及内容较多.</span><br><span class="line">id        整形(int)</span><br><span class="line">name      字符串(varchar(225))</span><br><span class="line">password  字符串(varchar(255))</span><br><span class="line">birthday  日期(date)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `user02`(</span><br><span class="line">id INT,</span><br><span class="line">`name` VARCHAR(255),</span><br><span class="line">`password` VARCHAR(255),</span><br><span class="line">`birthday` DATE)</span><br><span class="line">CHARACTER SET utf8 COLLATE utf8_bin ENGINE INNODB;</span><br></pre></td></tr></tbody></table></figure><h3 id="四-备份恢复数据库或者表"><a href="#四-备份恢复数据库或者表" class="headerlink" title="四.备份恢复数据库或者表:"></a>四.备份恢复数据库或者表:</h3><p>(1)备份数据库(注意:在DOS执行,后面不带分号)<br>mysqldump -u 用户名 -p -B 数据库1 数据库2 数据库n &gt; d:\path文件名.sql<br>(2)备份库的表:(注意:备份表不要-B)<br>mysqldump -u 用户名 -p密码 数据库名 表名1 表名2 表名n &gt; d:\path文件名.sql<br>(3)恢复数据库(注意:进入mysql里面在执行,先创建新的数据库名,在在这个库名下面备份数据)<br>create database 新库名;<br>use 新库名;<br>Source d:\path文件名.sql</p><h3 id="五-删除数据库里面的表"><a href="#五-删除数据库里面的表" class="headerlink" title="五.删除数据库里面的表:"></a>五.删除数据库里面的表:</h3><p>drop table 表名:</p><h3 id="六-删除数据库-注意-进入mysql在执行-慎重使用"><a href="#六-删除数据库-注意-进入mysql在执行-慎重使用" class="headerlink" title="六.删除数据库(注意:进入mysql在执行,慎重使用.)"></a>六.删除数据库(注意:进入mysql在执行,慎重使用.)</h3><p>drop database 库名;</p><h3 id="七-数据库的增删改查"><a href="#七-数据库的增删改查" class="headerlink" title="七.数据库的增删改查"></a>七.数据库的增删改查</h3><h4 id="1-增"><a href="#1-增" class="headerlink" title="1.增"></a>1.增</h4><p>1、向所有列插入数据–into关键字可以省略<br>insert    into    表名  values（列值1，列值2，……）<br>insert    into  studentinfo  values（‘004’，‘张鑫’，19，‘北京海淀’）<br>2、向指定列插入数据–into关键字可以省略<br>，不提供值的列一定是可以为空的列（null），<br>列名的顺序可以与表结构中的顺序不同，只要列值的顺序与之对应就行<br>insert    studentinfo（姓名，学号）  values（‘王强’，‘006’）<br>insert  into  表名（列名1，列名2，……） values（列值1，列值2，……）<br>insert    into  studentinfo（学号，姓名）  values（‘005’，‘李清’<br>identity–相同：对于标识列，因为是自动增长的，所以不能指定值<br>default–系统设定值：具有缺省值的列，可以使用default关键字来替代插入的数据</p><h4 id="2-删"><a href="#2-删" class="headerlink" title="2.删"></a>2.删</h4><p>删除表中数据–from关键字可以省略，如果不指定where条件，将把表中所有记录都删除掉（很危险！），<br>如果使用where指定条件，则满足条件的记录被删除<br>不能只删除半行或某几列数据<br>delete-删除   from   Tab1<br>delete   book  where  bid=’s0000’<br>truncate-删除所有   table 表名–不能指定条件，只能删除所有数据，所以功能等价于“delate  表名”的语句<br>优点：速度更快，使用的系统资源和事务日志资源更少<br>缺点：不会将删除每一条记录的操作记录到日志中，所以一旦删除，则无法通过日志恢复删除的数据<br>drop-删除    database-数据库 表名–删除数据库名<br>drop table-表 表名–删除表结构</p><h4 id="3-改"><a href="#3-改" class="headerlink" title="3.改"></a>3.改</h4><p>update–更新 表名 set–日落 列名1=该列新值，列名2=该列新值，……where 条件<br>update 表名 set salary=salary+100–表述每行工资都加100<br>update book set pub=’新华出版社’   where    Bname=’娱乐天地‘–更新指定的记录<br>update book set author2=’江泽民’,numinput=100,numstore=100 where author1=’邓小平’–同时更新多个字段</p><h4 id="4-查"><a href="#4-查" class="headerlink" title="4.查"></a>4.查</h4><p>select * from 表名–查询所有记录<br>select 列名1，列名2，…… from 表名–查询指定的列，列的顺序可以与表结构的顺序不同，列之间使用逗号分隔<br>select Cid, address, Cname, Phone  from  customer</p><p>select 列名1 as 列别名1，列名2 as 列别名2，…… from 表名–重新为列指定列名，as关键字可以省略<br>select Bname as 书名,Author1 as 作者,Pub as 出版社 from book</p><p>select cid 学号,cname 姓名, address ,phone as 电话 from customer</p><p>select 列别名1=列名1，列别名2=列名2 ，…… from 表名–使用等于号重新为列指定列名<br>select 书名=bname,书号=bid,pub from book</p><p>select 列名1 +列名1 as 列别名，…… from 表名–可以把多列合并成一列显示</p><p>select 列别名=列名1 +列名1 ,…… from 表名<br>select 列名1 ，列名2 ，常量值 as 列名 from 表名–使用常量<br>select * from 表名 order by age asc–升序，salary desc–降序<br>select * from 表名 where address like ‘深圳%’</p><p>在mysql数据库中要查询前10条数据，不再使用top n语句，top n语句主要用在sqlserver数据库系统中，<br>在mysql中一般使用 select * from 表名 limit 0,10 order by 字段 desc,<br>如在学生表中查询年龄比较大的前10个学生，则这样写，<br>select * from 学生表 limit 0,10 order by 年龄 desc。（一般使用这个 在后面加 limit 0,10）<br>select top 5 * from customer （这个在sqlserver数据库中使用，在cmd使用无效）<br>select * from table_name limit 0,10 (0代表从第几行开始，10代表显示多少行)</p><p>select * from book where numstore between 20 and 30<br>select * from book where id in （’a0001’,’a0002’）<br>合函数方便进行数据统计<br>聚合函数不能在 where 中使用<br>常用聚合函数<br>count(): 查询总记录数 ：查询学生总数 select count(*) from students;<br>max(): 查询最大值 ：查询女生的最大年龄 select max(age) from students where sex=’女’;<br>min(): 查询最小值 ：查询1班的最小年龄 select min(age) from students;<br>sum(): 求和 ：查询北京学生的年龄总和 select sum(age) from students where hometown=’北京’;<br>avg(): 求平均值：查询女生的平均年龄 select avg(age) from students where sex=’女’ </p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ytlmysql安装教程</title>
      <link href="/2021/07/24/ytlmysql-an-zhuang-jiao-cheng/"/>
      <url>/2021/07/24/ytlmysql-an-zhuang-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h2 id="ytlmysql安装"><a href="#ytlmysql安装" class="headerlink" title="ytlmysql安装"></a>ytlmysql安装</h2><h3 id="一-下载MySQL"><a href="#一-下载MySQL" class="headerlink" title="一.下载MySQL"></a>一.下载MySQL</h3><p>1.点击<a href="https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.19-winx64.zip">这里</a>下载mysql-5.7.19-winx64.zip压缩包<br>2.下载完之后解压到D:\ytlmysql\mysql-5.7.19-winx64目录下</p><h3 id="二-配置用户环境变量"><a href="#二-配置用户环境变量" class="headerlink" title="二.配置用户环境变量"></a>二.配置用户环境变量</h3><p>1.右击此电脑选择属性点击高级系统设置，点击高级最下面的环境变量<br>2.选择用户变量把路径配置到path：D:\ytlmysql\mysql-5.7.19-winx64\bin里面，之后点击确定关闭即可</p><h3 id="三-在本机配置MySQL"><a href="#三-在本机配置MySQL" class="headerlink" title="三.在本机配置MySQL"></a>三.在本机配置MySQL</h3><p>1.新建My.ini文件放到D:\ytlmysql\mysql-5.7.19-winx64\目录下<br>内容结构如下复制到My.ini文件里面就行</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line">port=3306  # 端口</span><br><span class="line">default-character-set=utf8  # 编码格式</span><br><span class="line">[mysqld]</span><br><span class="line"># 设置为自己的安装目录</span><br><span class="line">basedir=D:\ytlmysql\mysql-5.7.19-winx64\</span><br><span class="line"># 设置为MySQL的数据目录,这个目录是系统创建</span><br><span class="line">datadir=D:\ytlmysql\mysql-5.7.19-winx64\data\</span><br><span class="line">port=3306</span><br><span class="line">character_set_server=utf8</span><br><span class="line"># 跳过安全检查</span><br><span class="line"># skip-grant-tables</span><br></pre></td></tr></tbody></table></figure><p>2.以管理员的身份打开cmd,并切换到 cd /d D:\ytlmysql\mysql-5.7.19-winx64\bin\ 目录下,执行如下命令</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld -install</span><br></pre></td></tr></tbody></table></figure><p>如是新装的win10系统执行这个命令会报错，需另外安装<a href="https://github.com/YtlGitHub/YtlMySQL/blob/main/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/%E5%AE%89%E8%A3%85mysql%E5%87%BA%E9%94%99%E6%97%B6%E5%AE%89%E8%A3%85%E5%90%8E%E7%BD%AE%E5%B8%A6dll/vcredist_x64.exe">vcredist_x64.exe</a>插件，在执行这个命令就成功了<br>3.初始化数据库</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --initialize-insecure --user=mysql</span><br></pre></td></tr></tbody></table></figure><p>4.启动数据库</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net start mysql</span><br></pre></td></tr></tbody></table></figure><p>5.停止数据库,这个先不关最后不用了在关</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net stop mysql</span><br></pre></td></tr></tbody></table></figure><h3 id="四-修改root密码"><a href="#四-修改root密码" class="headerlink" title="四.修改root密码"></a>四.修改root密码</h3><p>1.进入mysql管理终端:mysql -u root -p (当前root用户密码为空),不需要输入密码直接回车就可以进入mysql</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></tbody></table></figure><p>2.修改root密码</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br><span class="line">update user set authentication_string=password("ytl")where user="root" and Host="localhost";</span><br><span class="line">flush privileges;</span><br></pre></td></tr></tbody></table></figure><p>上面语句就行修改root用户的密码为ytl<br>注意在后面需要带’;’分号,回车执行指令<br>在执行flush privileges;刷新权限<br>最后退出quit,注意这里只是退出终端,但是MySQL服务是还在运行的.<br>3.回到D:\ytlmysql\mysql-5.7.19-winx64\目录下打开my.ini文件注销里面的# skip-grant-tables,注意修改完之后记得要重新启动才能生效.<br>4.注销后再执行net stop mysql停止MySQL,在执行net start mysql启动MySQL服务<br>5.安装完成</p><h3 id="五-进入本地mysql"><a href="#五-进入本地mysql" class="headerlink" title="五.进入本地mysql"></a>五.进入本地mysql</h3><p>现在重新进入MySQL,输入正确的用户和密码</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></tbody></table></figure><h3 id="六-修改权限让其他用户也可以连接你的mysql"><a href="#六-修改权限让其他用户也可以连接你的mysql" class="headerlink" title="六.修改权限让其他用户也可以连接你的mysql"></a>六.修改权限让其他用户也可以连接你的mysql</h3><h4 id="1-改表法"><a href="#1-改表法" class="headerlink" title="1.改表法"></a>1.改表法</h4><p>可能是你的帐号不允许从远程登陆，只能在localhost。这个时候只要在localhost的那台电脑，登入mysql后，更改 “mysql” 数据库里的 “user” 表里的 “host” 项，从”localhost”改称”%”</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash">use mysql;</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash">update user <span class="built_in">set</span> host = <span class="string">'%'</span> <span class="built_in">where</span> user = <span class="string">'root'</span>;</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash">select host, user from user;</span></span><br></pre></td></tr></tbody></table></figure><h4 id="2-授权法"><a href="#2-授权法" class="headerlink" title="2.授权法"></a>2.授权法</h4><p>(1)例如，你想用户’ytluser’使用密码’ytl’从任何主机连接到mysql服务器的话。</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO 'ytluser'@'%' IDENTIFIED BY 'ytl' WITH GRANT OPTION;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></tbody></table></figure><p>(2)如果你想允许用户ytluser从ip为10.127.56.177的主机连接到mysql服务器，并使用ytl作为密码</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO 'ytluser'@'10.127.56.177' IDENTIFIED BY 'ytl' WITH GRANT OPTION;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></tbody></table></figure><p>(3)如果你想允许用户ytluser从ip为192.168.1.6的主机连接到mysql服务器的db(库名)数据库，并使用ytl作为密码</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON db.* TO 'ytluser'@'192.168.1.3' IDENTIFIED BY 'ytl' WITH GRANT OPTION;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>部署个人博客</title>
      <link href="/2021/07/22/blog/"/>
      <url>/2021/07/22/blog/</url>
      
        <content type="html"><![CDATA[<p>欢迎来到部署个人博客<a href="https://ytlgithub.github.io/">ytlBlog</a>!</p><h2 id="部署个人博客"><a href="#部署个人博客" class="headerlink" title="部署个人博客"></a>部署个人博客</h2><h3 id="一-安装环境"><a href="#一-安装环境" class="headerlink" title="一.安装环境"></a>一.安装环境</h3><p>1.安装<a href="https://git-scm.com/">Git</a><br>2.安装<a href="https://nodejs.org/en/">node.js</a><br>3.当然你要有一个<a href="https://github.com/">github</a>账号，没有的话赶快去注册一个吧</p><h3 id="二-配置Github"><a href="#二-配置Github" class="headerlink" title="二.配置Github"></a>二.配置Github</h3><p>1.建立Repository,建立与你用户名对应的仓库，仓库名必须为【your_user_name.github.io】<br>2.配置SSH-Key<br>3.创建密钥方法<br>创建密钥：在你的博客目录下右键弹框点击Git Bash Here 打开Git命令仓库输入如下命令<br>创建密钥命令：ssh-keygen -t rsa -C “<a href="mailto:1766842398@qq.com">1766842398@qq.com</a>“  注释：这里的邮箱输入你自己的<br>查看创建的密钥命令：cat ~/.ssh/id_rsa.pub  注释：复制这些密钥到GitHub ssh里面 头像点击设置里面添加ssh<br>会产生两个密钥一个id_esa 是私钥一个id_rsa.pub 是公钥</p><h3 id="三-安装Hexo"><a href="#三-安装Hexo" class="headerlink" title="三.安装Hexo"></a>三.安装Hexo</h3><p>1.打开Git命令行，执行如下命令<br>$ npm install -g hexo</p><h3 id="四-开始部署前提条件"><a href="#四-开始部署前提条件" class="headerlink" title="四.开始部署前提条件"></a>四.开始部署前提条件</h3><p>1.在电脑中建立一个名字叫「Hexo」的文件夹（比如我建在了D:\Hexo），然后在此文件夹中右键打开Git Bash。执行下面的命令<br>$ hexo init<br>Hexo随后会自动在目标文件夹建立网站所需要的文件<br>2.然后（在 /D/Hexo下）执行npm install<br>$ npm install<br>会在D:\Hexo目录中安装 node_modules</p><h3 id="五-生成博客"><a href="#五-生成博客" class="headerlink" title="五.生成博客"></a>五.生成博客</h3><p>1.启动在浏览器访问<a href="http://localhost:4000/">http://localhost:4000/</a> # 这时可以看到Hexo已为你生成了一篇blog<br>$ hexo server<br>可以简化<br>$ hexo s  生成本地浏览静态码<br>按Ctrl+C 停止Server<br>2.新建一个文章<br>$ hexo new “文章名”<br>刷新本地网页<a href="http://localhost:4000/">http://localhost:4000/</a> 可以发现已生成了一篇新文章 “文章名”<br>3.删除生成的public<br>$ hexo clean<br>4.生成静态网页<br>$ hexo generate<br>可以简化<br>$ hexo g<br>该命令执行完后，会在 D:\Hexo\public\ 目录下生成一系列html、css等文件<br>5.编辑文章<br>hexo new “文章名”会在D:\Hexo\source_posts目录下生成一个markdown文件：My-New-Post.md<br>可以使用一个支持markdown语法的编辑器（比如 Sublime Text 2）来编辑该文件。</p><h3 id="六-部署到Github"><a href="#六-部署到Github" class="headerlink" title="六.部署到Github"></a>六.部署到Github</h3><p>1.安装hexo-deployer-git插件，在站点目录下输入下面命令安装插件就好了，后在使用Hexo d命令就可以推送了<br>$ npm hexo-deployer-git<br>2.部署到Github前需要配置_config.yml文件，首先找到下面的内容<br>deploy:<br>    type:<br>然后将它们修改为<br>deploy:<br>    type: git<br>    repository: <a href="mailto:git@github.com">git@github.com</a>:YtlGitHub/YtlGitHub.github.io.git  注释：这个是输入你自己的SSH密钥地址<br>    branch: main  注释：main是你自己的分支<br>3.把代码文件推送到Github上<br>$ hexo deploy<br>4.测试<br>当部署完成后，在浏览器中打开<a href="https://ytlgithuborganization.github.io/YtlGitHub.github.io/">https://YtlGitHuborganization.github.io/YtlGitHub.github.io/</a> ，正常显示网页，表明部署成功。<br>本地静态网页：<a href="http://localhost:4000/">http://localhost:4000</a></p><h3 id="七-生成漂亮的主题"><a href="#七-生成漂亮的主题" class="headerlink" title="七.生成漂亮的主题"></a>七.生成漂亮的主题</h3><h4 id="1-下载主题"><a href="#1-下载主题" class="headerlink" title="1.下载主题"></a>1.下载主题</h4><p>前言：我们知道它自己默认主题是非常难看的，所以我们就要下载一个漂亮的主题，网上有很多主题可以下载，这里我以<a href="https://github.com/blinkfox/hexo-theme-matery">hexo-theme-matery</a>主题作为演示<br>(1).点击<a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master">这里</a>下载最新稳定版代码的master分支。解压后，将hexo-theme-matery文件夹复制到你themes的Hexo博客项目文件夹中，并重命名为matery，名字自己可以随便定义与下面配置主题名字一致就行。<br>(2).当然，您可以使用git clone下载到您的themes文件夹中。<br>git clone <a href="https://github.com/blinkfox/hexo-theme-matery.git">https://github.com/blinkfox/hexo-theme-matery.git</a></p><h4 id="2-配置主题"><a href="#2-配置主题" class="headerlink" title="2.配置主题"></a>2.配置主题</h4><p>(1).修改你博客路径下_config.yml文件里面theme: 的值，后面的值修改为matery，注意matery就是上面主题自定义的名字</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">matery</span></span><br></pre></td></tr></tbody></table></figure><p>(2).修改主题显示自己的信息_config.yml博客路径里面的_config.yml，如果您是中国用户，建议将language的值改为zh-CN。</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">YtlBlog</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">'欢迎来到Ytl的博客'</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">'网站描述'</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">'您网站的关键字,支持多个值'</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">Ytl</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span>  <span class="comment"># en</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">''</span></span><br></pre></td></tr></tbody></table></figure><p>(3).其他修改建议_config.yml博客路径里面的_config.yml<br>请修改的价值url的_config.yml，以你的网站的主URL(例如<a href="http://xxx.github.io/">http://xxx.github.io</a>)<br>我们建议修改这两个值per_page是的倍数6，如：12，18等等，以便可在每个屏幕下显示良好的职位列表。</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">''</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">12</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">12</span></span><br></pre></td></tr></tbody></table></figure><p>(4).其他配置请参考<a href="https://github.com/YtlGitHub/ytlblog/tree/main/themes/matery">这里</a><br>你下载的主题下面的README_CN.md有详细介绍<br>hexo\themes\matery\README_CN.md</p><h3 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h3><!-- 来必力City版安装代码 --><div id="lv-container" data-id="city" data-uid="MTAyMC81MzYzNy8zMDExMA==">    <script type="text/javascript">   (function(d, s) {       var j, e = d.getElementsByTagName(s)[0];       if (typeof LivereTower === 'function') { return; }       j = d.createElement(s);       j.src = 'https://cdn-city.livere.com/js/embed.dist.js';       j.async = true;       e.parentNode.insertBefore(j, e);   })(document, 'script');    </script><noscript> 为正常使用来必力评论功能请激活JavaScript</noscript></div><!-- City版安装代码已完成 -->]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/07/19/hello-world/"/>
      <url>/2021/07/19/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hello World </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
